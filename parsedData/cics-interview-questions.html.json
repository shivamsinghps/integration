[{"tag":"p","original":" The term CICS is an acronym that stands for Customer Information Control System. This is a type of system control software that controls all the online transactions of the management of IBM and also monitors telecommunications from IBM. The mainframe operating systems of IBM are time-sharing and batch. CICS is a type of processing mainly initiated by using a single request that can also affect one or more objects. The CICS was founded in the year 1969.  ","result":"CICS is an abbreviation for Customer Information Control System. It is software that manages the online transactions of IBM's management and oversees telecommunications from IBM. IBM has two mainframe operating systems called time-sharing and batch. CICS is a processing system that can impact one or more objects by initiating a single request. The establishment of CICS dates back to 1969."},{"tag":"p","original":" PPT is an acronym that stands for Processing Programming Table. In the CICS, PPT contains important information like a program's name, Mapset names, task use counter, language, size, the main storage address, map, etc.  ","result":"The term \"PPT\" pertains to Processing Programming Table. It plays a crucial role in CICS as it holds vital information concerning particular programs such as the program's name, the names of Mapsets utilized, task use counter, language, size, map, main storage address, and more."},{"tag":"p","original":" CICS is mainly used to deal with the execution and development of online applications. The primary aspect of CICS is to provide great accessibility to the database along with the files within the database. It provides a communication channel through the terminal and makes the sending and receiving of formatted data easy.  ","result":"CICS is a platform that specializes in developing and running online applications. Its main function is to enhance the accessibility of databases and files within them. It achieves this by facilitating the transfer of formatted data via terminal communication."},{"tag":"p","original":" The Integrated CICS translator is mainly used for the following reasons: ","result":"The Integrated CICS translator is primarily utilized for the purposes below:"},{"tag":"li","original":" If you have to work with a COBOL compiler, you will need it. It works with the Integrated CICS translator when we use it Fromcompiler option. ","result":"In order to effectively work with COBOL compiler, it is necessary to have it. Its use is essential in conjunction with the Integrated CICS translator when utilizing the Fromcompiler option."},{"tag":"li","original":" When the compiler faces CICS statements in the source program, it interfaces with the integrated CICS translator. ","result":"When encountering CICS statements within the source code, the compiler communicates with the integrated CICS translator for processing."},{"tag":"li","original":" After that, the translator takes action on the CICS statements and goes back to the compiler to show what native language statements to generate. ","result":"Following the processing of the source code in CICS, the translator analyzes the CICS statements and sends the relevant information back to the compiler. This information is used to determine the corresponding native language statements that need to be generated."},{"tag":"li","original":" In Integrated Translator, there is no restriction as compared to Separate Translator. ","result":"Integrated Translator does not have any limitations unlike Separate Translator."},{"tag":"li","original":" It can also handle native COBOL and embedded CICS statements in the Source Program. ","result":"The software has the ability to process COBOL code and also interpret CICS statements that are included within the source program."},{"tag":"p","original":" CICS is called a batch job itself and runs on high priority in the operating system.  ","result":"CICS is a batch process that operates on a high-priority level within the operating system."},{"tag":"p","original":" The ASKTIME CICS command is used to access the current date and time. ","result":"The ASKTIME command in CICS is used to retrieve the present time and date."},{"tag":"p","original":" The main difference between call and link in CICS is that in the case of a call, whenever we make changes to the called program, we also need to compile the calling program. In the case of a link, it is not required.  ","result":"CICS provides two methods for program communication, namely call and link. The key contrast between the two is that when modifications are made to the called program, a compilation of the calling program is necessary in the case of a call. However, this is not required for a link."},{"tag":"p","original":" The terms TCT and RCT are both used in CICS. TCT is an acronym that stands for Terminal Control Table. It is a compilation of all the respective terminals. On the other hand, RCT stands for Resource Control Table, and it is a compilation of plan names of DB2 along with the transaction identifiers.  ","result":"CICS employs two terms, namely TCT and RCT. TCT refers to the Terminal Control Table that contains a list of all related terminals. On the other hand, RCT is the acronym for Resource Control Table, which contains a compilation of plan names of DB2 and transaction identifiers."},{"tag":"p","original":" We can use ASKIP for the attribute value of the Skipper field, and for the stopper field, we can use PROT.  ","result":"To provide suitable attribute values for the Skipper and Stopper fields, we can assign ASKIP and PROT, respectively."},{"tag":"p","original":" In CICS, PCT is an acronym that stands for Program Control Table. It consists of a complete list of transaction identifiers paired to respective corresponding programs. On the other hand, FCT is also an acronym for File Control Table. It consists of a complete list of all the files that have been used by CICS, along with their status and record length.  ","result":"CICS uses two main acronyms: PCT and FCT. PCT stands for Program Control Table, and it contains a list of all transaction identifiers linked to their corresponding programs. FCT, File Control Table, contains a record of all files used by CICS, including their status and record length."},{"tag":"p","original":" The EXEC CICS UNLOCK END-EXEC command is used to release a record on which exclusive control is gained.  ","result":"The function of the EXEC CICS UNLOCK END-EXEC instruction is to relinquish control over a record that has been locked for exclusive use."},{"tag":"p","original":" START is a command used to start a new task. It is an interval control command. On the other hand, XCTL is a command used to pass control to a program within the same task. It is a program control command.  ","result":"\"Start\" is a command that initiates a new task, while \"XCTL\" is a command that transfers control to a program within the same task. \"Start\" is classified as an interval control command, while \"XCTL\" is a program control command."},{"tag":"p","original":" The BMS options used in CICS are: Minimum, Standard, and Full.  ","result":"CICS offers three BMS options, namely Minimum, Standard, and Full."},{"tag":"p","original":" We can set the MDT option to 'ON' status, even if data is not entered, by mentioning the FSET option in DFHMDF or set it dynamically in the program using the FIELD+A attribute field.  ","result":"It is possible to turn on the MDT (Modified Data Tag) option even if no data has been entered. This can be achieved by including the FSET option in DFHMDF or by using the FIELD+A attribute field in the program to dynamically set it."},{"tag":"p","original":" A CICS task is a process of one-time execution of a certain CICS transaction. This process starts when we enter a key into the transaction and press the enter key button. The execution process continues until the program returns the control to CICS. ","result":"A CICS task refers to the execution of a specific CICS transaction that initiates when a user inputs a key and presses the enter button. The task runs until the program returns control back to CICS."},{"tag":"p","original":" The EXEC CICS HANDLE CONDITION command specifies the paragraph or program label to which the control is to be passed if the \"handle condition\" occurs. ","result":"In the context of CICS, the HANDLE CONDITION command allows you to specify the target paragraph or program label that will handle a particular exception or error that may occur during program execution. The control will be passed to this specified target if the condition is detected."},{"tag":"p","original":" Following is a list of some important programs used in the CICS: ","result":"Here are some significant software programs utilized within CICS:"},{"tag":"p","original":" CEMT is an acronym that stands for CICS Execute Master Terminal. It is an ID for system transactions and is mainly used to inquire and update the status of CICS environments and other system operations. We can easily manage transactions, tasks, files, programs, etc., and can also change the status of the resources. We can see all possible options by typing CEMT and pressing ENTER.  ","result":"CEMT is an abbreviation for CICS Execute Master Terminal. This ID is utilized for system transactions and allows for the retrieval and modification of the status of CICS environments and other system operations. CEMT makes it easy to manage transactions, tasks, files, programs and more, and modify resource status. To view all potential options, one can simply input CEMT and press ENTER."},{"tag":"p","original":" BMS is an acronym that stands for Basic Mapping Support. CICS provides BMS to define and format the screen. The screen defined by using the BMS is called the MAP. The collections of all the screens are called the Mapset.  ","result":"BMS stands for Basic Mapping Support, which is a tool provided by CICS to format and define screens. These screens are known as MAPs, and collectively they form a Mapset. With BMS, developers can easily create and format screens according to their needs."},{"tag":"p","original":" They provide unique advantages and make the CICS system highly flexible and maintainable. ","result":"The implementation of CICS exits presents distinct benefits and promotes adaptability and ease of maintenance for the CICS system."},{"tag":"strong","original":" Following is the list of most important control programs of CICS: ","result":"Here are the key control programs of CICS that hold significant importance:"},{"tag":"p","original":" TCP is an acronym that stands for the Terminal Control Program. It is used to receive all the terminals' messages and request the CISC to initiate or start a specific task. It is also used to maintain the hardware communication requirements. ","result":"TCP refers to the Terminal Control Program, which is responsible for receiving and managing terminal messages, as well as initiating specific tasks through communication with the CISC. Additionally, TCP is used to maintain the necessary hardware communication capabilities."},{"tag":"p","original":" KCP is called Task Control Program. It is used to control the execution of tasks and their related properties simultaneously. It is also used to handle all the issues related to multi-tasking. ","result":"The Task Control Program (TCP), also known as a Kernel Control Program (KCP), is a software component that manages the execution of multiple tasks and their associated properties. Its primary function is to coordinate and control multiple tasks simultaneously. The KCP is critical in addressing all related multi-tasking issues to ensure efficient and effective performance."},{"tag":"p","original":" PCP is an acronym that stands for Program Control Program. It is used to locate and load programs for execution. It is also used to transfer the control between programs, and in the end, it returns the control to the CICS. ","result":"PCP, which stands for Program Control Program, is an essential component of the CICS system. It plays a crucial role in locating and loading programs, transferring control between them, and ultimately returning control to CICS."},{"tag":"p","original":" FCP is an acronym that stands for File Control Program. It provides application programs with services like reading, inserting, updating, or deleting records in a file. It also keeps exclusive control over the records to maintain data integrity during record updates. ","result":"FCP is a program that offers services to application programs, including record reading, insertion, updating, and deletion. This program also ensures the accuracy of the data during record updates by maintaining exclusive control over the records, thus protecting data integrity."},{"tag":"p","original":" SCP is an acronym that stands for Storage Control Program. It controls the allocation and de-allocation of storage within a CICS region. ","result":"The term SCP refers to Storage Control Program. Its function is to regulate the distribution and release of storage in a CICS environment."},{"tag":"p","original":" CICS has some IBM-supplied CICS control tables that need to be updated accordingly with the application information for the successful execution of CICS application programs. ","result":"To ensure smooth execution of CICS application programs, it is necessary to update the CICS control tables with application information. These tables are provided by IBM and require customization to work effectively with the specific application."},{"tag":"strong","original":" Following is a list of some important control tables: ","result":"The following is a collection of crucial control tables that are commonly used in various applications:"},{"tag":"p","original":" TCT is an acronym that stands for Terminal Control Table. When we log in to a CICS terminal, we have to enter the TCT table. This table contains the terminal IDs that are connected to the current CICS region. Terminal Control Table, along with Terminal Control Program, recognizes the incoming data from the terminal. ","result":"TCT refers to the Terminal Control Table, which is a crucial element when we access a CICS terminal. This table contains details of all the terminal IDs linked to the current CICS region. Working in conjunction with the Terminal Control Program, the TCT table facilitates the identification and interpretation of incoming data from the terminal."},{"tag":"p","original":" PCT stands for Program Control Table. It contains the Transaction IDs (TRANSID) and the corresponding program names or program IDs. Every PCT table has a unique Transaction ID or TRANSID. ","result":"A PCT, also known as a Program Control Table, is a table that holds the key information for Transaction IDs (TRANSID) and their corresponding program names or program IDs. Each PCT table has a unique TRANSID assigned to it."},{"tag":"p","original":" PPT stands for Processing Program Table. It contains the program name or Mapset name, Task Use Counter, Language, Size, the Main storage address, Load library address, etc. Every PPT table has a unique Program or Mapset name. ","result":"A PPT table is used for processing programs and contains information such as the program or Mapset name, size, language, task use counter, main storage address, and load library address. One distinguishing feature of a PPT table is that every entry has a unique name."},{"tag":"p","original":" FCT stands for File Control Table. It includes File names, File type, record length, etc. All the files used in a CICS program have to be declared in FCT, and they are opened and closed by CICS itself. ","result":"The acronym FCT refers to File Control Table, which is a component containing essential information about files such as the file names, file type, and record length. When working with CICS programs, all files must be declared in the FCT as they are managed by CICS during the opening and closing processes."},{"tag":"p","original":" COMMAREA is the short and the most commonly used name for communication area. It is the name of the data area in which the data or information is transferred from one program to another program. It is a temporary storage area and is mainly used as a passing medium for data amongst multiple programs loaded by a set of transactions or a particular transaction. ","result":"COMMAREA is a term used to describe the data area used for transferring information between different programs. It is a temporary storage space that serves as an intermediary for the exchange of data among multiple programs running in a set of transactions or a single transaction."},{"tag":"p","original":" COMMAREA is generally used along with the TRANSID option to send data back to the program which executes the Transaction ID so that the user can use it while executing that transid. ","result":"The use of COMMAREA is commonly employed in conjunction with the TRANSID option to transfer data back to the program that executes the Transaction ID. This facilitates the user's ability to use the data during the execution of that particular transaction."},{"tag":"p","original":" COMMAREA allows the maximum length of the data to pass through to be 64K. ","result":"In COBOL programming language, COMMAREA facilitates the transfer of data with a maximum allowed length of 64K."},{"tag":"p","original":" In CICS, EIB is an acronym that stands for EXEC Interface Block. EIB is a control block that is loaded automatically by the CICS for every program. CICS automatically generates some system-related information and provides it to each task in the form of EIB. Every task has a unique EIB it exists for the duration of the task. It contains a set of system-related information corresponding to the task. Users can use all the fields of EIB in their application programs.  ","result":"CICS utilizes a control block known as the EXEC Interface Block or EIB, which is loaded automatically for every program. This block contains system-generated information that is unique to each task in the system. EIB exists for the duration of the task and provides users with access to system-related information. It is possible to utilize all of the fields of the EIB in application programs."},{"tag":"p","original":" In CICS, a transaction is a unit of processing initiated by a single request. This request is generally initiated from an end-user at a terminal, but it can also be initiated from a web page, a remote workstation program, or an application in another CICS system. It may also be triggered automatically at a predefined time. ","result":"CICS systems handle transactions, which are requests for a unit of processing initiated by a single user or program. These requests may be made through a terminal, web page, remote workstation, or other means, and can also be set up to trigger automatically at a specific time."},{"tag":"strong","original":" Some main uses of the transaction in the CICS are: ","result":"There are several important functions that a transaction can serve in the CICS system."},{"tag":"li","original":" A transaction executes or starts a particular task. It acts as a unique identifier. ","result":"A transaction serves as a distinct identifier that triggers or initiates a specific process or operation."},{"tag":"li","original":" We can trigger a transaction concurrently from the different systems, but it cannot be done from the same systems. ","result":"It is possible to initiate a transaction simultaneously from various systems, but it is not feasible to do so from a single system."},{"tag":"li","original":" A transaction is usually interactive processing initiated by a single request, but background transactions are possible. ","result":"Interactive processing is the typical method of initiating a transaction through a single request, but transactions can also occur in the background."},{"tag":"li","original":" A transaction is the type of four characters entry, and it doesn't allow any duplicates in the transaction names. ","result":"A transaction is a set of four characters that identifies a specific entry and prohibits the presence of duplicate entries in the transaction names."},{"tag":"li","original":" A transaction has one to one or many mappings to the program. It is executed when the transaction trigger takes place. ","result":"When a transaction is triggered, it can be mapped to one or multiple programs that will be executed. Each transaction has a unique relationship with its corresponding program(s)."},{"tag":"p","original":" In CICS, the key difference between task and transaction is that several users can invoke a transaction, but each user has to initiate their task. ","result":"CICS distinguishes between tasks and transactions, where transactions can be initiated by multiple users, but each user needs to initiate their task."},{"tag":"p","original":" If we include the TRANSID in the EXEC CICS RETURN command, the next time the end-user presses an attention key, the CICS will start the transaction specified in the TRANSID option.  ","result":"When we add the TRANSID option to the EXEC CICS RETURN command, the CICS system will initiate the transaction specified in the TRANSID option upon the user's next attention key press. This functionality enables users to easily navigate between different transactions within a CICS environment."},{"tag":"p","original":" Following is a list of some generally used CICS programs: ","result":"Here are some commonly utilized CICS programs:"},{"tag":"li","original":" Task Control Programs etc. ","result":"Rewritten: \nThere are various types of software programs designed to manage and optimize tasks, which include Task Control Programs, among others. These programs are intended to streamline processes and improve productivity."},{"tag":"p","original":" In CICS, EIBRCODE is a field that indicates the application program whether the command was executed successfully or not or whether a CICS condition was raised or not. ","result":"EIBRCODE is a crucial field in CICS that signals the application program whether the task was executed successfully or not, or if a CICS condition occurred."},{"tag":"p","original":" Following are the three types of processes that are used to create a MAP in CICS: ","result":"There are three distinct processes employed for the development of a MAP in CICS."},{"tag":"p","original":" Transid is a short form of a transaction identifier. This character code contains four letters that are used to invoke a task of CICS.  ","result":"A Transid is a code comprising four letters used to trigger a CICS task. It stands for transaction identifier and is a condensed form of the identifier."},{"tag":"p","original":" The key difference between the INTO and the SET option in the EXEC CICS RECEIVE MAP command is that the INTO option moves the TIOA's information into the reserved specified area. In contrast, the SET option returns the address of the TIOA to the specified BLL cell or \"address-of\" a linkage section.  ","result":"The EXEC CICS RECEIVE MAP command has two options: INTO and SET. The INTO option moves the information in the TIOA to a reserved area specified by the program. On the other hand, the SET option returns the address of the TIOA to a specified BLL cell or a linkage section's \"address-of\"."},{"tag":"p","original":" Following are some types of the DFHMDF present in the CICS set: ","result":"The CICS set includes various types of DFHMDF. These types are used for different purposes within CICS."},{"tag":"p","original":"  POS:  POS is the short form for the position in the CICS. The POS parameter is used to indicate the row and column position in the field relative to the upper left corner of the map position. ","result":"POS refers to the location of a field on a CICS map. It is represented by the position of a row and column relative to the upper left corner of the map. The POS parameter is used to specify this position."},{"tag":"p","original":"  ATTRB:  ATTRB is the short form for the field attribute. Generally, the BMS field attribute is not required because the BMS always uses the default value of the auto-skip protection, normal intensity, and the modified tag. ","result":"The term ATTRB in the context of BMS refers to the field attribute. In most cases, this field attribute is not necessary as the BMS always defaults to auto-skip protection, normal intensity, and modified tag values."},{"tag":"p","original":"  Length:  The length is used to specify the characters present in the field. In the length type, the attribute bytes are not present, so each of the lengths occupies one more column compared to its length value. ","result":"Length is a data type that defines the number of characters present in a field. Unlike other data types, the length type does not use attribute bytes, so the length value occupies one more column than the actual number of characters in the field."},{"tag":"p","original":"  Initial:  The initial type is also not required in the BMS. It is only used in the label and the title field that already has a constant value in the BMS. ","result":"The type \"initial\" does not need to be included in the BMS as it is only used in the label and title fields, which already have fixed values within the system."},{"tag":"p","original":"  Picout:  The picout is one of the definitions of the filed CHG and is used to tell the BMS what types of pictures are mainly used to generate the fields. The Picout is also used to edit the facilities of the COBOL or the PL/I when data is moved into the map. ","result":"The Picout pertains to a specific meaning within the CHG field and serves to inform the BMS about the primary types of images utilized in generating the fields. In addition, the Picout allows for the modification of the capabilities of the COBOL or PL/I during the process of moving data into the map."},{"tag":"p","original":"  GRPNAME and OCCURS:  GRPNAME and OCCURS options are one of the most complex forms. That's why they do not always appear in simple examples. The GRPNAME is mainly used to subdivide a map field within the program for later processing, and the OCCURS mainly helps us define adjacent. ","result":"The options GRPNAME and OCCURS are advanced features and are not always included in basic examples due to their complexity. GRPNAME is typically utilized to divide a map field within a program for future processing, while OCCURS is primarily used to establish adjacent relationships."},{"tag":"p","original":" Following is a list of some important fields in the EIB block of CICS: ","result":"Here are some significant areas in the EIB (Execution Interface Block) section of CICS."},{"tag":"p","original":" Yes. It is possible to use dynamic calls in CICS. We can use dynamic calls in CICS. According to the procedure, the user has to define the call routine in a PPT, and the calling program uses the CALL identifier.  ","result":"Dynamic calls can indeed be used in CICS. To do so, the user must define the call routine in a PPT, and then call the routine using the CALL identifier in the calling program."},{"tag":"p","original":" When we press the PF key, the data transmission may happen on RECEIVE MAP. On the other hand, the data transmission will not happen when we press the PA key. ","result":"Pressing the PF key initiates data transmission on RECEIVE MAP, whereas pressing the PA key does not result in any data transmission."},{"tag":"p","original":"  We should mention the FSET option in DFHMDF to set the MDT option to  'ON'  status, even if data is not entered. Otherwise, we can set it dynamically in the program using  the FIELD+A  attribute field. ","result":"Using the FSET option in DFHMDF can be helpful in setting the MDT option to 'ON' regardless of whether any data has been entered. Another option is to dynamically set the MDT option in the program using the FIELD+A attribute field."},{"tag":"p","original":" We can use the command EXEC CICS SYNCPOINT and assume it as LUW. The Xn will not be terminated by using this command, but it will surely terminate the transaction.  ","result":"One way to terminate a transaction in CICS is by executing the command \"EXEC CICS SYNCPOINT\" and considering it as a logical unit of work (LUW). This command does not terminate the Xn, but it does end the transaction."},{"tag":"p","original":" The SEND MAP MAPONLY command is used to send the map alone, without any data. For example, it is used for sending Menu screens. On the other hand, the SEND MAP DATAONLY command sends data alone without sending the screen layout again. For example, it is used for refreshing the screen data.  ","result":"The SEND MAP MAPONLY function can be utilized to transmit the map exclusively, with no accompanying data. This is particularly useful when transmitting Menu screens, for instance. Conversely, the SEND MAP DATAONLY operation sends solely the data, without resending the screen layout. This is commonly used for refreshing the screen data."},{"tag":"p","original":" CEDA is a CICS service transaction that is used to gain accessibility to control tables.  ","result":"CEDA is a service transaction for CICS, which provides access to control tables."},{"tag":"p","original":" XCTL works as a medium through which we can pass the control through the identical task to another program. On the other hand, XCTL is a program control command.  ","result":"XCTL is a command used to transfer program control from one task to another, essentially passing control to an identical program. Essentially, it allows for program control to be shifted between tasks."},{"tag":"p","original":" A PF key is used to wake up the task and transmit modified data. On the other hand, a PA key is used only to wake up the task. ","result":"A PF key is utilized to activate the task and transmit revised data, while a PA key is solely employed to activate the task."},{"tag":"p","original":" Mapset is a collection of linked and edited maps to form a load module. It must have a PPT entry and can have names from 1 to 7 chars.  ","result":"A mapset is essentially a module made up of a group of interconnected and modified maps. It's necessary for a mapset to have a PPT entry, and can also be given a name consisting of anywhere from one to seven characters."},{"tag":"p","original":" In CICS, ENQ and DEQ are the parts of task control commands used to make a resource serially recyclable.  ","result":"CICS uses task control commands called ENQ and DEQ to allow a resource to be reused in a serialized manner."},{"tag":"p","original":" The EXEC CICS XCTL command transfers the control to an application program at the same logical level without expecting the control back. On the other hand, the EXEC CICS LINK command is used to pass the control to an application program at the next logical level with an expectation of the control back.  ","result":"The EXEC CICS XCTL and LINK commands are used for transferring control to application programs in IBM's CICS environment. The XCTL command passes control to a program at the same logical level without expecting it back, while the LINK command transfers control to a program at the next logical level with an expectation of its return."},{"tag":"p","original":" In CICS, NEWCOPY is necessarily required in certain situations when a particular program has been run at least once or several times in CICS and then recompiled or changed.  ","result":"When using CICS, performing a NEWCOPY is often necessary when modifications or updates have been made to a program that has previously been executed one or more times within the CICS environment."},{"tag":"p","original":" Yes. It is possible to use OCCURS in a BMS map. For doing so, we have to redefine the input and output field of the copybook with wanted index sizes, which can later be referenced in the application program.  ","result":"Certainly. OCCURS can be utilized in a BMS map, but it requires the redefinition of input and output fields in the copybook to have the desired index sizes. These can subsequently be cited in the application program."},{"tag":"p","original":" In CICS, the terminal id is registered in the Terminal Control Table. ","result":"CICS has a Terminal Control Table where the terminal ID is recorded."},{"tag":"p","original":" Yes, a CICS code can easily be a part of a copybook, but we have to do the reprocessing after the compilation process if we want to do so. ","result":"It is possible to include a CICS code in a copybook, but it requires reprocessing after compilation. This means that additional steps are needed to properly incorporate the CICS code into the copybook."},{"tag":"p","original":" If we have multiple maps and want to determine the storage in the symbolic map, then the largest map must be done first. ","result":"To determine the storage capacity of a symbolic map when dealing with multiple maps, it's important to begin by examining the largest map first."},{"tag":"p","original":" The CICS translator is mainly used to convert the EXEC CICS commands into call statements for a specific programming language.  ","result":"One of the primary uses of the CICS translator is to translate EXEC CICS instructions into call statements suitable for a particular programming language."},{"tag":"p","original":" The effect of using the TRANSID in the EXEC CICS RETURN command is that the next time the end-user presses an attention key, the CICS will start the transaction specified in the TRANSID option.  ","result":"When the TRANSID option is included in the EXEC CICS RETURN command, it has the implication that CICS will commence the specified transaction whenever the user presses an attention key in the future."},{"tag":"p","original":" We can access the VSAM file through the path. We have to declare a path as a form of FCT and then use the File Control Commands on it.  ","result":"To access a VSAM file, we need to specify its path and create a File Control Table (FCT) to define its properties. Once the FCT is established, we can use File Control Commands to interact with the VSAM file."},{"tag":"p","original":" The BMS length of field = 0 specifies that the data was not entered in the field.  ","result":"A BMS field length of zero indicates that no data has been provided for that particular field."},{"tag":"p","original":" The EXEC CICS HANDLE CONDITION command specifies the paragraph or program label to which we have to pass the control if the \"handle condition\" occurs.  ","result":"The EXEC CICS HANDLE CONDITION instruction identifies the paragraph or label of a program that needs to be executed in the event of a \"handle condition\"."},{"tag":"p","original":" The AICA ABEND is just a Runaway Task that is executed at a later stage.  ","result":"The AICA ABEND is a type of error that occurs when a task runs uncontrollably and has to be terminated at a later time."},{"tag":"p","original":" If we don't want characters entered by the user to be folded to uppercase, we can use the ASIS option on RECEIVE. ","result":"To prevent the automatic conversion of user-entered characters to uppercase, we can utilize the ASIS setting when using the RECEIVE command. This ensures that the original casing of the characters is maintained."},{"tag":"p","original":" In CICS, the INTO option is used to move the information in the TIOA into the reserved specified area. On the other hand, the SET option is used to return the address of the TIOA to the specified BLL cell or \"address-of\" a linkage section.  ","result":"CICS provides the INTO option to transfer TIOA information into a predetermined area. In contrast, the SET option is employed to send the TIOA address to a designated BLL cell or refer to a linkage section address."},{"tag":"p","original":" Yes, we can access the ESDS files straight from CICS.  ","result":"Certainly! It is possible to directly access ESDS (Entry-sequenced Data Set) files from CICS (Customer Information Control System)."},{"tag":"p","original":" The BUFFER option in RECEIVE brings the entire data stream from the terminal buffer. ","result":"When using the RECEIVE function, the BUFFER setting will retrieve the complete data stream from the terminal buffer."},{"tag":"p","original":" In CICS, the ASKTIME command requests the current date and time. On the other hand, the EIBTIME command gets the value at the task initiation time.  ","result":"CICS has two different commands for accessing time-related information. The ASKTIME command is used to retrieve the current date and time, while the EIBTIME command returns the time at which a task was initiated."},{"tag":"p","original":" In CICS, the DFHMDF BMS macro is mainly used to define fields, literal, and characteristics of a field.  ","result":"The DFHMDF BMS macro is commonly utilized in CICS to specify the attributes of fields, literals, and other elements within the program. It allows for customization and control over the specific characteristics of each component."},{"tag":"p","original":" MDT is an acronym that stands for Modified Data Tag. MDT is used during an input operation. If you modify the field on the screen, then MDT acts as a bit of an attribute byte. ","result":"MDT represents Modified Data Tag, which is utilized during input operations. When you make changes to a field on your screen, MDT functions as an attribute byte."},{"tag":"p","original":" FRSET stands for Flag Reset. It is used to reset MDT and turns off the modified data tag in the attribute bytes for all the fields on the screen. If it once set on, whether by the user or the program, a modified data tag stays on until turned off explicitly, even over several screen transmissions. On the other hand, FSET turns on the modified data tag. On the other hand, FSET turns on the modified data tag. It is used to ensure that MDT transmits the field. FSET is used during an output operation. If you don't specify this, the field is sent only if the user changes it. ","result":"FRSET is a function in certain programming languages that enables the resetting of the Modified Data Tag (MDT) for all fields on a screen. The MDT is a flag that indicates whether a certain field has been modified by the user or program. Once set on, it stays on until explicitly turned off. FRSET disables this flag, allowing for a clean slate for the next user input or program execution. On the other hand, FSET turns on the MDT to ensure that the field is transmitted, regardless of whether or not it has been modified. It is used during an output operation to guarantee that the field is included in the output."},{"tag":"p","original":" We can classify a CICS program into the following types: ","result":"There are different types of CICS programs that exist and can be classified based on their characteristics."},{"tag":"p","original":" The conversational programs are the programs that require user intervention to complete the execution. In other words, we can say that the program that requires input from the user and displays the data on the screen after processing is called a conversational program. ","result":"Conversational programs are programs that rely on user input to execute. These programs require the user to provide input, which is then processed and displayed on the screen. Put simply, conversational programs are those that require interaction with the user to complete their tasks."},{"tag":"p","original":" The conversational programs are mainly used to send a message to the terminals and receive a response from the active users. For example, online applications always use the conversation between the users and the application program by using the send and receive command. ","result":"Conversational programs are commonly utilized to exchange messages between terminals and receive feedback from users. Online applications, for instance, rely on such conversations facilitated via send and receive commands to interact with users."},{"tag":"p","original":" The non-conversational programs are the programs that don't require any user intervention for execution. All the required inputs are available to the program when we start the execution. In other words, we can say that the programs used for displaying the reports or messages are called non-conversational programs. ","result":"Non-conversational programs refer to programs that can run without any user interactions. These programs are designed to execute without requiring any input from the user. Typically, they are used for generating reports or displaying messages."},{"tag":"p","original":" The non-conventional programs are very similar to the batch program and run in batch mode. These programs are mainly used to display a sequence on the screen at the regular interval of time. ","result":"Non-conventional programs are programs that operate similarly to batch programs and are executed in batch mode. They are primarily designed to present a series of actions on the screen at fixed intervals."},{"tag":"p","original":" The pseudo-conversational programs respond to user actions or events. It is a subtype of the conversational program which only runs when it is started or called by another program. It also needs certain actions of the users like hit enter etc. It is also called an event-based program.  ","result":"Pseudo-conversational programs are a specific kind of conversational program that responds to user actions or events. They differ from regular conversational programs in that they don't necessarily run continuously, but rather only respond when certain user actions are taken, such as pressing \"enter.\" Because of this, they are also sometimes referred to as event-based programs."},{"tag":"p","original":" Following is a list of key differences between TSQ and TDQ in CICS:  ","result":"Here are some notable contrasts between TSQ and TDQ in CICS:"},{"tag":"td","original":" TSQ is an acronym that stands for Temporary Storage Queues. ","result":"\"Temporary Storage Queues\" or TSQ is a term used in computer science to refer to a temporary queue storage mechanism."},{"tag":"td","original":" TDQ is an acronym that stands for Transient Data Queues. ","result":"TDQ refers to an abbreviation for Transient Data Queues."},{"tag":"td","original":" Data within the temporary storage queue (TSQ) can be changed. ","result":"The contents of the temporary storage queue (TSQ) are editable."},{"tag":"td","original":" Data within the transient data queues (TDQ) cannot be changed. ","result":"The information stored in transient data queues (TDQ) is immutable."},{"tag":"td","original":" We can read the data more than once in a temporary storage queue, and the records can be read randomly. ","result":"It is possible to store the data temporarily in a queue, allowing for multiple readings of the records in a random manner."},{"tag":"td","original":" We can read the data only once in the transient data queue, and the records can be read only sequentially. ","result":"The transient data queue allows for the one-time reading of records in a sequential manner. Once the data is read, it cannot be accessed again."},{"tag":"td","original":" We can update an existing record in a TSQ. ","result":"It is possible to modify an existing entry within a TSQ."},{"tag":"td","original":" We cannot update an existing record in a TDQ. ","result":"Modifying an already existing record in a TDQ is not possible."},{"tag":"td","original":" We cannot access TSQ in batch. ","result":"Batch processing does not provide access to TSQ."},{"tag":"td","original":" We can easily use TDQ in batch applications. ","result":"TDQ can be seamlessly incorporated into batch applications."},{"tag":"td","original":" The names of TSQ are dynamically defined in the application program. ","result":"In an application program, the identification of TSQ names is usually determined dynamically."},{"tag":"td","original":" We have to define the name of TDQ in the DCT (Destination Control Table). ","result":"It's necessary to specify the TDQ (Transient Data Queue) name in the DCT (Destination Control Table)."},{"tag":"td","original":" TSQ cannot start a CICS transaction automatically. ","result":"The initiation of a CICS transaction is not within the capabilities of TSQ."},{"tag":"td","original":" TDQ can start a CICS transaction automatically. ","result":"It is possible for TDQ (Temporary Data Queue) to initiate a CICS (Customer Information Control System) transaction automatically."},{"tag":"p","original":" To solve an ASRA ABEND, we have to start with the CEBR and then call for instructions on offsets.  ","result":"In order to address an ASRA ABEND, the first step is to refer to the CEBR and then request guidance regarding the proper offsets."},{"tag":"p","original":" The DSECT parameter is used in BMS to give shape to a symbolic map. ","result":"The DSECT parameter is utilized in BMS to define the layout of a symbolic map."},{"tag":"p","original":" The default size of COMMAREA in CICS is 65K.  ","result":"The standard size of COMMAREA in CICS is 65K."},{"tag":"p","original":" To handle errors in CICS programs, we have to check the EIBRESP first after calling the program. After that, an alternative option is used to put the HANDLE condition to use.  ","result":"In order to manage errors that may occur in CICS programs, it is necessary to first verify the EIBRESP following the program call. Then, if necessary, we can use the HANDLE condition as an alternative option."},{"tag":"p","original":" AEIY is the error code for length. If the source data length is more than the receiving field, we see this error. ","result":"The error code AEIY indicates an issue with the length of the data being transmitted. This error occurs when the length of the source data exceeds the receiving field's capacity."},{"tag":"a","original":" Spring Boot Interview Questions ","result":"Reworded: Here are some questions that may be asked during an interview for a position involving Spring Boot."},{"tag":"a","original":" C Programming Interview Questions ","result":"Here are some commonly asked interview questions related to the C Programming language."},{"tag":"a","original":" Data Structure Interview Questions ","result":"Below are some sample interview questions related to data structures."},{"tag":"a","original":" Manual Testing Interview Questions ","result":"Below are some interview questions for manual testing:"}]