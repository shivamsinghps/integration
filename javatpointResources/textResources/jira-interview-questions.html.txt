
div => [ 
 ]
h1 => [ JIRA Interview Questions ]
p => [  A list of frequently asked  JIRA Interview Questions and Answers  are given below. ]
h3 => [ 1) What is Jira? ]
strong => [ Atlassian ]
li => [ It is a bug tracking tool used to track the issues and bugs related to your software and Mobile apps. ]
strong => [ Jira ]
strong => [ Godzilla ]
li => [ Jira is based on Agile methodology, and the current version of Jira is 6. ]
h3 => [ 2) Explain Jira workflow. ]
p => [ Jira workflow is a set of activities performed to track and transition of an issue during the lifecycle of an issue where transition represents the link between the two statuses when an issue moves from one status to another status, and status determines the impact of the work on an issue filed by the tester. ]
strong => [ The following are the phases that occur in a workflow: ]
strong => [ TODO ]
strong => [ In Progress ]
strong => [ Done ]
p => [  The Jira workflow is known as  defect lifecycle  or  bug lifecycle . The bug lifecycle consists of the following phases: ]
strong => [ Open issue ]
strong => [ In Progress ]
strong => [ Resolved issue ]
strong => [ Reopened issue ]
strong => [ Close issue ]
h3 => [ 3) Explain the report types generated by Jira. ]
p => [ Jira is a defect tracking tool that creates different reports which allow you to get an overview of the current status of a project. ]
p => [ JIRA report is a pictorial representation of the current status of a project in the form of charts, line-charts, bar-graphs, etc. ]
strong => [ The following are the reports generated by Jira: ]
strong => [ Average Age report ]
li => [ The Average Age report is generated that depends upon the selected project, the type of issue selected in the filter, and time is chosen (hours/days/week/months). ]
strong => [ Created vs. Resolved Issues report ]
li => [ The created vs. resolved issues report displays the difference chart between the number of issues created and the number of issues resolved within a timeframe. ]
strong => [ Pie chart ]
p => [ The pie chart is used to display the issues grouped by a specified field, and the specified field can be priority, assignee, project, issue type, etc. ]
strong => [ Recently created issue report ]
p => [ The recently created issue report represents a chart that shows the rate at which the new issues are created and how many issues are resolved during the same interval. ]
strong => [ Resolution Time Report ]
p => [ The resolution time report determines the length of the time taken to resolve the issues for a project/filter. ]
strong => [ Single Level Group by the Report ]
p => [ The single-level group by the report does not display the chart, but it categorizes the issues grouped by a particular field for a filter. ]
strong => [ Time Since Issue Reports ]
p => [ The time since the issue report is a bar chart that shows the number of issues of a particular data field which was set on a given date. Suppose I choose the "Created" as a data field then the bar chart shows the number of issues which are created. ]
h3 => [ 4) Explain the process of how an issue is generated in Jira. ]
strong => [ The following are the steps to create an issue: ]
li => [ Click on the '+' button to create an issue. On clicking on the '+' button, the screen appears which is shown below: ]
p => [  Project:  It determines the name of the project. 
 Issue Type:  It is a dropdown which displays the lists of all the issue types. You can choose either of them such as Bug, epic, task, sub task. 
 Summary:  In the summary text field, you need to type the summary related to the issue that you are creating. 
 Priority:  You can set the priority of an issue. It can be either medium, high, low. ]
h3 => [ 5) What is the way with which an issue can be shared with other users in Jira. ]
p => [ An issue can also be shared with other users in Jira. The following are the steps required to share an issue with other users in Jira: ]
strong => [ Suppose we have an issue that already exists in Jira, i.e., the login button is not working. ]
p => [  The above screen shows that an issue " TP-2 login button is not working " has been created. ]
li => [ If we want to share the issue, then this can be achieved by using the share option available on the issue's description, it can be shown in the below screenshot: ]
strong => [ share ]
strong => [ share ]
p => [ The above screen shows that the dialog box appears on clicking on the share button, and in a dialog box, you need to enter the name, team or email address of a user to which you want to share your issue. ]
h3 => [ 6) What is the purpose of Dashboard? ]
p => [ Once you log in to the Jira, Dashboard is the first display which you see. Jira admin can change the view of the dashboard, and also you can change the things that are visible on the dashboard. ]
p => [ A dashboard displays gadgets and apps that help the team members to track the project's progress. ]
p => [ The dashboard contains useful information, such as the issues assigned to the logged-in user and the user's activity stream.  ]
p => [ On clicking on the Dashboard link appearing at the left side of the panel, the page appears which is shown below: ]
strong => [ Following are the steps required to create a Dashboard: ]
li => [ Click on the Dashboards appearing on the left side of the panel. ]
li => [ Click on the (...) button appearing at the top right corner of the page. ]
li => [ Click on the Create dashboard option appearing in the dropdown menu of (...) option. ]
li => [ On clicking on the Create dashboard, the screen appears, which is shown below: ]
p => [ Where, ]
p => [  Name:  It provides the descriptive name of a dashboard. ]
p => [  Description:  It is not a mandatory field. In this field, you can add the description of a dashboard that you are creating. ]
p => [  Start from:  Start from is a field that contains the dropdown in which you can choose either Blank Dashboard (It is a blank dashboard which does not contain any gadgets, but you can customize the dashboard according to your needs) or Default dashboard (It is pre-existing dashboard). ]
p => [  Shared with:  Select the user and group to which you want to share your Dashboard. ]
h3 => [ 7) What do you mean by scheduling an issue? ]
p => [ We can schedule the issues due dates which are used to track, review, and inform the team about due dates. Scheduling an issue is the most powerful feature that performs the fixed and relative date searches based on the due dates. ]
p => [ Advanced searches can also be performed by using the Jira Query Language. ]
p => [ You can schedule an issue by using the Date field. It can be done either by creating a new issue or editing an issue. ]
h3 => [ 8) Explain how project details are listed in Jira? ]
p => [ Project in Jira comes with the main attributes, and these attributes can be a Name of the project, key, components, versions. ]
p => [ When you log in to the Jira, the first page that appears is the Dashboard. ]
p => [  In the above screen, the right-hand side section represents the  Activity Stream  that contains all the activities which you performed on an issue or a project. ]
h3 => [ 9) What are the issue types that are created and tracked via JIRA? ]
p => [ An issue in Jira can be a bug, feature, task, or any project work. Each Jira project comes with default issue types, and these issue types depend on the type of project that you are using. ]
strong => [ There are three types of Jira projects: ]
strong => [ Jira Core (business projects) ]
strong => [ Jira Software (software projects) ]
strong => [ Jira Service Desk (service desk projects) ]
strong => [ Two types of issue exist in Jira Core: ]
strong => [ Task ]
strong => [ Subtask ]
strong => [ Five types of issue exist in Jira Software: ]
strong => [ Bug ]
strong => [ Epic ]
strong => [ Subtask ]
strong => [ Task ]
strong => [ Story ]
strong => [ Eight types of issue exist in Jira Service Desk: ]
strong => [ Change ]
strong => [ IT help ]
strong => [ Incident ]
strong => [ New feature ]
strong => [ Problem ]
strong => [ Service request ]
strong => [ Service request with approval ]
strong => [ Support ]
h3 => [ 10) How is sub-task created in Jira? ]
strong => [ The following are the steps required to create a sub-task: ]
p => [  Step 1:  Open the issue for which you want to create the sub-task. ]
p => [  Step 2:  Click on the icon to create a sub-task. ]
p => [  Step 3:  To create a sub task, you need to enter the following screen shown in the below screen: ]
h3 => [ 11) Explain the term cloning an issue? ]
li => [ Cloning an issue means creating the duplicate copy of an issue within the same project. The clone issue is basically a copy of the original issue which is pertaining to the same information stored in the original issue. ]
li => [ A clone issue is a separate entity from the original issue, but it can be linked to the original issue. ]
li => [ Operations applied to the original issue will not have any effect on the clone issue ]
h3 => [ 12) Explain Kanban board? ]
p => [ Kanban board is a tool used to visualize the work and limit work-in-progress. ]
p => [ As in scrum, we are taking some activities from a product backlog and adding in a sprint backlog. However, in Kanban, we do not have sprint, so sprint backlog activity will not be performed. This is the main difference between scrum and Kanban that scrum contains sprint backlog while kanban does not contain the sprint backlog. ]
strong => [ Kanban board consists of three states: ]
li => [ To Do ]
li => [ Doing ]
li => [ Done ]
p => [  When the project is started, then we put all the activities from the product backlog to the ' To Do ' state. When the team member starts working on an activity, then that activity is put in a ' Doing ' state, and when the activity is placed, then it is placed in a ' Done ' state. ]
p => [ From the Kanban board, one can get to know which activities have been done and which activities they need to develop. ]
p => [  One of the most important features of the Kanban board is a  Limit  option. In the above figure, we have eight tasks in a product backlog and limit set is 4. At a time, it will take only four tasks in a ' To Do ' state, and if any of the tasks come in a ' Doing ' state, then one more task from the product backlog will be placed in a ' To Do ' state. In this way, we can set the  limit  depending on the availability of the resources. ]
h3 => [ 13) Explain Scrum board? ]
p => [ The Scrum Board is a physical board on which the user stories present in the current sprint backlog are displayed. ]
strong => [ Scrum board is divided into columns such as: ]
strong => [ Stories: ]
strong => [ TODO: ]
strong => [ In Progress: ]
strong => [ Done: ]
h3 => [ 14) List all the reports generated by Kanban projects in Jira? ]
strong => [ The two types of reports are generated by Kanban projects: ]
strong => [ Control chart ]
p => [ The control chart is a useful chart which helps in measuring the team's performance. The control chart displays the average cycle time of your team over a period of time. The control chart plots the following issues on the chart: ]
li => [ Any issues which are outside the standard deviation known as outliers. ]
li => [ It displays the average time taken to complete the tasks. ]
li => [ It also displays the team's rolling average. ]
p => [ It displays the average cycle time of your product, version, or a sprint. ]
p => [ It helps you to identify whether the data from the current sprint determines the future performance of a product, i.e., the less variance in the cycle time means that median or mean can determine the future performance. ]
strong => [ How to create a Control flow chart ]
strong => [ The following are the steps to create a control flow chart: ]
li => [ Go to the Jira official website. ]
li => [ Click on the project on which you are working. ]
li => [ Click on the Reports appearing at the left side of the panel. ]
li => [ Select the Control chart. ]
strong => [ Cumulative flow diagram ]
li => [ Cumulative flow diagram is a kanban tool that allows the team to view the effort and project's effort. ]
li => [ Cumulative diagram consists of two axis, i.e., X-axis and Y-axis where X-axis (horizontal axis) represents the time taken to complete a task and Y-axis (vertical axis) represents the number of issues or tasks.  ]
li => [ The size of the area represents the number of work items currently involved in each state for the selected time period. ]
strong => [ Features of Cumulative flow diagram: ]
strong => [ Monitor how WIP builds over time ]
strong => [ Observe how much team delivers ]
strong => [ Done ]
strong => [ Spot bottlenecks instantly ]
strong => [ Measure your past performance ]
strong => [ Monitor your process health ]
strong => [ Average Cycle Time= Average Throughput ]
h3 => [ 15) List all the reports generated by scrum projects in Jira? ]
strong => [ The following are the reports generated by scrum projects in Jira are: ]
strong => [ Burndown chart ]
strong => [ Burndown chart is useful as it provides the following observations: ]
li => [ If the team finishes its work early, which means that the team is not committed with sufficient work during sprint planning. ]
li => [ If the team does not finish its work within a sprint means that they are committed with a lot of work. ]
li => [ If the burndown chart drops sharply which means that the work has not been estimated properly. ]
strong => [ How to create a Burndown chart ]
strong => [ The following are the steps required to create a Burndown chart: ]
li => [ Go the Jira official website. ]
li => [ Click on the project on which you are working. ]
strong => [ Reports ]
strong => [ Burndown chart ]
strong => [ Burnup chart ]
p => [ Burnup chart is the visual representation of a sprint's completed work compared with the total scope. It is used to identify problems such as deviation from the planned project path. ]
strong => [ How to create a Burnup chart ]
strong => [ The following are the steps required to create a Burnup chart: ]
strong => [ Jira ]
li => [ Click on the project on which you are working. ]
strong => [ Reports ]
strong => [ Burnup chart ]
strong => [ The following are the important points related to the Burnup chart: ]
li => [ The vertical axis represents the amount of work, and it can be measured in different ways such as Story points, issues count, or estimates while the horizontal axis represents the time in days. ]
li => [ 
 ]
li => [ The distance between the lines on a chart is the remaining amount of work. When all the issues have been completed, the lines will meet. ]
li => [ 
 ]
h3 => [ 16) Define a component in Jira? ]
p => [ Components are the subdivisions of a project and used to group the issues within a project into smaller parts. ]
h3 => [ 17) How to delete a component in Jira? ]
strong => [ Follow the below steps to delete a component in Jira: ]
strong => [ Components ]
strong => [ Edit and Delete ]
strong => [ Delete ]
h3 => [ 18) What is a validator in Jira? ]
p => [ Validators check whether the input provided by the user is valid before the transition is performed. ]
p => [ If the validation fails, then the issue does not proceed to the destination status of the transition. ]
strong => [ List of validators: ]
strong => [ Required Field validators ]
strong => [ Regular Expression Validator ]
strong => [ Parameters ]
p => [  Regular expression:  It is an expression that the input field should match. ]
p => [  User define message:  This message appears when the validation fails. ]
strong => [ Validator to compare to two fields with each other ]
strong => [ The following is the list of operators that this validator supports: ]
strong => [ &gt; ( greater than) ]
strong => [ &lt; ( less than) ]
strong => [ &gt;= (greater than or equal to) ]
strong => [ &lt;= (less than or equal to) ]
strong => [ = (equal) ]
strong => [ != (Not equal) ]
strong => [ Date Compare Validator ]
strong => [ Date Compare Validator ]
strong => [ Field Compare Validator ]
strong => [ It supports the following operators: ]
li => [ = (equal to) ]
li => [ != (Not equal to) ]
li => [ &gt; (greater than) ]
li => [ &gt;= (greater than or equal to) ]
li => [ &lt; (less than) ]
li => [ &lt;= (less than or equal to) ]
li => [ IN ]
li => [ NOT IN ]
li => [ CONTAINS ]
strong => [ User in Project Role Validator ]
strong => [ User in Group Validator ]
strong => [ User in Field Validator ]
li => [ You can set the status of a current user in a field. ]
li => [ He/she is not set in this field. ]
strong => [ Parent Issue Type Validator ]
strong => [ Parent Issue Status Validator ]
strong => [ Field Values Changed Validator ]
strong => [ JQL Validator ]
strong => [ Validator message: ]
strong => [ Run as user: ]
h3 => [ 19) What is an issue collector? ]
p => [ An issue collector allows you to gather the feedback form of any website in the form of Jira issues. It can also collect the issues who do not have a Jira account. ]
h3 => [ 20) What are the differences between Scrum board and Kanban board? ]
strong => [ The following are the differences between Scrum board and kanban board: ]
th => [ Scrum ]
th => [ Kanban ]
strong => [ Planning ]
td => [ It has fixed planning. It focussed on planning. It starts with the sprint planning and ends with the sprint review, retrospective. The daily meeting is held so that the team knows the next steps, priorities, and the learnings from the previous steps. ]
td => [ It has no fixed planning, and no daily meetings are conducted. In Kanban, changes can occur at any time, i.e., frequent changes occur. ]
strong => [ Timeline ]
td => [ In scrum, we work on the sprint that has the fixed-time duration means that after some fixed-time, we are delivering something to the client. ]
td => [ Kanban does not have the concept of a sprint, so it has no fixed timeline for delivering the product to the client.  ]
strong => [ Task estimates ]
td => [ During sprint planning, it is decided that how many activities are to be pulled from the product backlog and add in a sprint backlog. For example, if the sprint is for two weeks, then the number of activities are selected in such a way that they can be completed within the sprint, i.e., in two weeks. ]
td => [ It does not estimate the task. ]
strong => [ Scrum Master ]
td => [ In scrum methodology, we have one scrum master who handles the team and conducts the meeting on a daily basis. ]
td => [ In Kanban methodology, we do not have any scrum master. It's the responsibility of each individual to deliver a valuable product. ]
strong => [ Suitability ]
td => [ This methodology is suitable for large-sized projects as large-sized projects can be divided into multiple sprints. ]
td => [ It is mainly suitable for small-sized projects. ]
strong => [ Constant changes ]
td => [ In Scrum, constant changes can be adapted easily in shorter sprints. ]
td => [ If any major change occurs, then Kanban methodology gets failed.  ]
strong => [ Cost ]
td => [ In Scrum, the task is estimated, i.e., a fixed number of activities are taken in a sprint, so the total cost of the project is minimal. ]
td => [ In Kanban, the task is not estimated, so the total cost of the project is not accurate. ]
strong => [ Roles and responsibilities ]
td => [ In Scrum, a specific role is assigned to the team members by the Scrum Master while the product owner tells the objectives of the product on which team members have to work. ]
td => [ No predefined role is assigned to the team members. It's the responsibility of all the team members to work in collaboration to deliver a valuable product. ]
strong => [ Measurement of Productivity ]
td => [ The productivity is measured by using cycle time or the time taken to complete the whole project from start to the end. ]
td => [ Productivity is measured by using velocity through sprints. ]
strong => [ Release Methodology ]
td => [ Small release after the end of each sprint. ]
td => [ It provides continuous delivery. ]
a => [ Interview Tips ]
a => [ Job/HR Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ jQuery Interview Questions ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
span => [ SQL Server Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
