
div => [ 
 ]
h1 => [ Struts Interview Questions ]
p => [ There is given frequently asked struts interview questions and answers that has been asked in many companies. Let's see the list of top Struts2 interview questions. ]
h3 => [ 1) What is Struts? ]
p => [  Struts is a framework for developing MVC-based framework. Struts2 is the combination of Webwork and struts1 frameworks.  More details... ]
h3 => [ 2) What is the difference between struts1 and struts2? ]
th => [ No. ]
th => [ Struts1 ]
th => [ Struts2 ]
td => [ 1) ]
td => [ Action class is not POJO. You need to inherit abstract class. ]
td => [ Action class is POJO. You don't need to inherit any class or implement any interface. ]
td => [ 2) ]
td => [ Front controller is ActionServlet. ]
td => [ Front Controller is StrutsPrepareAndExecuteFilter. ]
td => [ 3) ]
td => [ It uses the concept of RequestProcessor class while processing request. ]
td => [ It uses the concept of Interceptors while processing the request. ]
td => [ 4) ]
td => [ It has only JSP for the view component. ]
td => [ It has JSP, Freemarker, Valocity etc. for the view component. ]
td => [ 5) ]
td => [ Configuration file name can be [anyname].xml and placed inside WEB-INF directory. ]
td => [ Configuration file must be struts.xml and placed inside classes directory. ]
td => [ 6) ]
td => [ Action and Model are separate. ]
td => [ Action and Model are combined within action class. ]
h3 => [ 3) What are the features of Struts? ]
li => [ Configuration MVC components ]
li => [ POJO based action ]
li => [ AJAX Support ]
li => [ Various Tag Support ]
li => [ Various Result Types ]
li => [ Integration Support ]
a => [ More details... ]
h3 => [ 4) What is MVC? ]
p => [ MVC is a design pattern. MVC stands for Model, View and Controller. Model represents data, view represents presentation and controller acts as an interface between model and view. ]
a => [ More details... ]
h3 => [ 5) What is interceptor? ]
p => [  Interceptor is an object i.e. invoked at preprocessing and postprocessing of a request. It is pluggable.  More details... ]
h3 => [ 6) What are the life cycle methods of interceptor? ]
li => [ public void init() ]
li => [ public void intercept(ActionInvocation ai) ]
li => [ public void destroy() ]
a => [ More details... ]
h3 => [ 7) What is ValueStack? ]
p => [  ValueStack is a stack that contains application specific object such as action and other model.  More details... ]
h3 => [ 8) What is ActionContext? ]
p => [  ActionContext is a container in which action is executed. It is unique per thread.  More details... ]
h3 => [ 9) What is ActionInvocation? ]
p => [  ActionInvocation is responsible to invoke action. It holds action and interceptor objects.  More details... ]
h3 => [ 10) What is OGNL? ]
p => [  OGNL is an expression language of struts2. It stands for Object Graph Navigation Language.  More details... ]
h3 => [ 11) What are the 5 constants of Action interface? ]
li => [ SUCCESS ]
li => [ ERROR ]
li => [ INPUT ]
li => [ LOGIN ]
li => [ NONE ]
a => [ More details... ]
h3 => [ 12) What does params interceptor? ]
p => [  The params (also known as parameters) interceptor sets all parameters on the ValueStack.  More details... ]
h3 => [ 13) What does execAndWait interceptor? ]
p => [  The execAndWait (also known as ExecuteAndWait) interceptor is used to display intermediate or wait result.  More details... ]
h3 => [ 14) What does modelDriven interceptor? ]
p => [  The modelDriven interceptor makes other model as the default object of ValueStack. By default, action is the default object of ValueStack.  More details... ]
h3 => [ 15) What does validation interceptor? ]
p => [  The validation interceptor performs validation checks and adds field-level and action-level error messages.  More details... ]
h3 => [ 16) What are the bundled validators? ]
li => [ requiredstring ]
li => [ stringlength ]
li => [ email ]
li => [ date ]
li => [ int ]
li => [ double ]
li => [ url ]
li => [ regex ]
a => [ More details... ]
h3 => [ 17) What is the difference between plain-validator and field-validator? ]
p => [  In plain-validator one validator can be applied to many fields. In field-validator many validators can be applied to single field.  More details... ]
h3 => [ 18) What is the use of jsonValidation? ]
p => [  The jsonValidation interceptor is used to perform asynchronous validation. It works with validation and workflow interceptors.  More details... ]
h3 => [ 19) What are the aware interfaces in struts2? ]
p => [ Aware interfaces are used to store information in request, session, application and response objects. The 4 aware interfaces are given below: ]
li => [ ServletRequestAware ]
li => [ ServletResponseAware ]
li => [ SessionAware ]
li => [ ServletContextAware ]
a => [ More details... ]
h3 => [ 20) What does i18n interceptor? ]
p => [  The i18n interceptor is used to provide multi lingual support for struts application.  More details... ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Java Multithreading Questions ]
a => [ Java String &amp; Exception Questions ]
a => [ Java Collection Interview Questions ]
a => [ JDBC Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
span => [ SQL Server Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
