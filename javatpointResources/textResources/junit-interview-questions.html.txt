
div => [ 
 ]
h1 => [ JUnit Interview Question ]
p => [  A list of top frequently asked  JUnit interview questions  and answers are given below.  ]
h3 => [ 1) What is Testing? ]
p => [ Testing is the process of checking the functionality of the application whether it fulfills the requirement or not. ]
h3 => [ 2) What is JUnit? ]
p => [ JUnit is the testing framework, it is used for unit testing of Java code. ]
a => [ More details... ]
h3 => [ 3) What is unit testing? ]
p => [ The process of testing individual functionality (known as a unit) of the application is called unit testing. ]
h3 => [ 4) What is the difference between manual testing and automated testing? ]
p => [ Manual testing is performed by Human, so it is time-consuming and costly. Automated testing is performed by testing tools or programs, so it is fast and less costly. ]
a => [ More details... ]
h3 => [ 5) Give some disadvantages of manual testing. ]
p => [ Following are some disadvantages of manual testing: ]
li => [ The testing is very time consuming and is very tiring. ]
li => [ The testing demands a very big investment in the human resources. ]
li => [ The testing is less reliable ]
li => [ The testing cannot be programmed. ]
h3 => [ 6) List out some advantages of automated testing. ]
p => [ Some of the advantages of automated testing are: ]
li => [ It is very fast. ]
li => [ Investment is very less. ]
li => [ Testing is more reliable. ]
li => [ The testing can be programmed. ]
h3 => [ 7) Is it necessary to write the test case for every logic? ]
p => [ No, we should write the test case only for that logic that can be reasonably broken. ]
h3 => [ 8) What are the useful JUnit extensions? ]
li => [ JWebUnit ]
li => [ XMLUnit ]
li => [ Cactus ]
li => [ MockObject ]
h3 => [ 9) What are the features of JUnit? ]
li => [ Opensource ]
li => [ Annotation support for test cases ]
li => [ Assertion support for checking the expected result ]
li => [ Test runner support to execute the test case ]
h3 => [ 10) How is the testing of the 'protected' method done? ]
p => [ To test the protected method, the test class is declared in the same package as the target class. ]
h3 => [ 11) How is the testing of 'private' method done? ]
p => [ There is no direct way for testing of the private method; hence manual testing is to be performed, or the method is changed to "protected" method. ]
h3 => [ 12) If the JUnit method's return type is 'string', what will happen? ]
p => [ JUnit test methods are designed to return 'void'. So the execution will fail. ]
h3 => [ 13) Is the use of 'main' method possible for unit testing? ]
p => [ Yes ]
h3 => [ 14) Is it necessary to write the test class to test every class? ]
p => [ No ]
h3 => [ 15) What does XMLUnit provide? ]
p => [ Junit extension class, XMLTestCase and set of supporting classes is provided by the XMLUnit. ]
h3 => [ 16) List the core components of Cactus.  ]
li => [ Cactus Framework ]
li => [ Cactus Integration Module ]
h3 => [ 17) What are the methods in fixtures? ]
li => [ setup ]
li => [ tearDown ]
h3 => [ 18) What is the Unit Test Case? ]
p => [ A Unit Test Case is the combination of input data and expected output result. It is defined to test the functionality of a unit. ]
h3 => [ 19) What is the use of @Test annotation? ]
p => [ The @Test annotation is used to mark the method as the test method. ]
h3 => [ 20) What is the test suit? ]
p => [ The test suit allows us to group multiple test cases so that it can be run together. TestSuit is the container class under junit.framework.TestSuite package. ]
h3 => [ 21) What does test runner? ]
p => [ The test runner is used to execute the test cases. ]
h3 => [ 22) What are the important JUnit annotations? ]
p => [ The test runner is used to execute the test cases. ]
li => [ @Test ]
li => [ @BeforeClass ]
li => [ @Before ]
li => [ @After ]
li => [ @AfterClass ]
h3 => [ 23) What does Assert class? ]
p => [ Assert class provides methods to test the test cases. ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Java Multithreading Interview Questions ]
a => [ Java String &amp; Exception Interview Questions ]
a => [ Java Collection Interview Questions ]
a => [ JDBC Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
span => [ SQL Server Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
