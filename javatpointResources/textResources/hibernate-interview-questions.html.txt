
div => [ 
 ]
h1 => [ Hibernate Interview Questions ]
p => [ Hibernate interview questions are asked to the students because it is a widely used ORM tool. The important list of top 20 hibernate interview questions and answers for freshers and professionals are given below. ]
h3 => [ 1) What is hibernate? ]
p => [ Hibernate is an open-source and lightweight ORM tool that is used to store, manipulate, and retrieve data from the database. ]
a => [ more details... ]
h3 => [ 2) What is ORM? ]
p => [ ORM is an acronym for Object/Relational mapping. It is a programming strategy to map object with the data stored in the database. It simplifies data creation, data manipulation, and data access. ]
h3 => [ 3) Explain hibernate architecture? ]
p => [ Hibernate architecture comprises of many interfaces such as Configuration, SessionFactory, Session, Transaction, etc. ]
a => [ more details... ]
h3 => [ 4) What are the core interfaces of Hibernate? ]
p => [ The core interfaces of Hibernate framework are: ]
li => [ Configuration ]
li => [ SessionFactory ]
li => [ Session ]
li => [ Query ]
li => [ Criteria ]
li => [ Transaction ]
h3 => [ 5) Mention some of the advantages of using ORM over JDBC. ]
p => [ ORM has the following advantages over JDBC: ]
li => [ Application development is fast. ]
li => [ Management of transaction. ]
li => [ Generates key automatically. ]
li => [ Details of SQL queries are hidden. ]
h3 => [ 6) Define criteria in terms of Hibernate.  ]
p => [ The objects of criteria are used for the creation and execution of the object-oriented criteria queries.  ]
h3 => [ 7) List some of the databases supported by Hibernate. ]
p => [ Some of the databases supported by Hibernate are: ]
li => [ DB2 ]
li => [ MySQL ]
li => [ Oracle ]
li => [ Sybase SQL Server ]
li => [ Informix Dynamic Server ]
li => [ HSQL  ]
li => [ PostgreSQL ]
li => [ FrontBase ]
h3 => [ 8) List the key components of Hibernate. ]
p => [ Key components of Hibernate are: ]
li => [ Configuration ]
li => [ Session ]
li => [ SessionFactory ]
li => [ Criteria ]
li => [ Query ]
li => [ Transaction ]
h3 => [ 9) Mention two components of Hibernate configuration object. ]
p => [ Database Connection ]
p => [ Class Mapping Setup ]
h3 => [ 10) How is SQL query created in Hibernate? ]
p => [ The SQL query is created with the help of the following syntax: ]
p => [ Session.createSQLQuery ]
h3 => [ 11) What does HQL stand for? ]
p => [ Hibernate Query Language ]
h3 => [ 12) How is HQL query created? ]
p => [ The HQL query is created with the help of the following syntax: ]
p => [ Session.createQuery ]
h3 => [ 13) How can we add criteria to a SQL query? ]
p => [ A criterion is added to a SQL query by using the Session.createCriteria. ]
h3 => [ 14) Define persistent classes. ]
p => [ Classes whose objects are stored in a database table are called as persistent classes.  ]
h3 => [ 15) What is SessionFactory? ]
p => [ SessionFactory provides the instance of Session. It is a factory of Session. It holds the data of second level cache that is not enabled by default. ]
a => [ more details... ]
h3 => [ 16) Is SessionFactory a thread-safe object? ]
p => [ Yes, SessionFactory is a thread-safe object, many threads cannot access it simultaneously. ]
h3 => [ 17) What is Session? ]
p => [ It maintains a connection between the hibernate application and database. ]
p => [ It provides methods to store, update, delete or fetch data from the database such as persist(), update(), delete(), load(), get() etc. ]
p => [ It is a factory of Query, Criteria and Transaction i.e. it provides factory methods to return these instances. ]
a => [ more details... ]
h3 => [ 18) Is Session a thread-safe object? ]
p => [ No, Session is not a thread-safe object, many threads can access it simultaneously. In other words, you can share it between threads. ]
h3 => [ 19) What is the difference between session.save() and session.persist() method? ]
th => [ No. ]
th => [ save() ]
th => [ persist() ]
td => [ 1) ]
td => [ returns the identifier (Serializable) of the instance. ]
td => [ Return nothing because its return type is void. ]
td => [ 2) ]
td => [ Syn: public Serializable save(Object o) ]
td => [ Syn: public void persist(Object o)  ]
h3 => [ 20) What is the difference between get and load method? ]
p => [ The differences between get() and load() methods are given below. ]
th => [ No. ]
th => [ get() ]
th => [ load() ]
td => [ 1) ]
b => [ null ]
b => [ ObjectNotFoundException ]
td => [ 2) ]
b => [ hit the database ]
b => [ doesn't hit ]
td => [ 3) ]
td => [ It returns the real object, not the proxy. ]
b => [  object. ]
td => [ 4) ]
b => [ you are not sure ]
b => [ you are sure ]
h3 => [ 21) What is the difference between update and merge method? ]
p => [ The differences between update() and merge() methods are given below. ]
th => [ No. ]
th => [ The update() method ]
th => [ merge() method ]
td => [ 1) ]
td => [ Update means to edit something. ]
td => [ Merge means to combine something. ]
td => [ 2) ]
td => [ update() should be used if the session doesn't contain an already persistent state with the same id. It means an update should be used inside the session only. After closing the session, it will throw the error. ]
td => [ merge() should be used if you don't know the state of the session, means you want to make the modification at any time. ]
p => [ Let's try to understand the difference by the example given below: ]
p => [ After closing session1, e1 is in detached state. It will not be in the session1 cache. So if you call update() method, it will throw an error. ]
p => [ Then, we opened another session and loaded the same Employee instance. If we call merge in session2, changes of e1 will be merged in e2. ]
h3 => [ 22) What are the states of the object in hibernate? ]
p => [ There are 3 states of the object (instance) in hibernate. ]
b => [ Transient ]
b => [ Persistent ]
b => [ Detached ]
h3 => [ 23) What are the inheritance mapping strategies? ]
p => [ There are 3 ways of inheritance mapping in hibernate. ]
li => [ Table per hierarchy ]
li => [ Table per concrete class ]
li => [ Table per subclass ]
a => [ more details... ]
h3 => [ 24) How to make an immutable class in hibernate? ]
p => [ If you mark a class as mutable="false", the class will be treated as an immutable class. By default, it is mutable="true". ]
h3 => [ 25) What is automatic dirty checking in hibernate? ]
p => [ The automatic dirty checking feature of Hibernate, calls update statement automatically on the objects that are modified in a transaction. ]
p => [ Let's understand it by the example given below: ]
p => [ Here, after getting employee instance e1 and we are changing the state of e1. ]
p => [ After changing the state, we are committing the transaction. In such a case, the state will be updated automatically. This is known as dirty checking in hibernate. ]
h3 => [ 26) How many types of association mapping are possible in hibernate? ]
p => [ There can be 4 types of association mapping in hibernate. ]
li => [ One to One ]
li => [ One to Many ]
li => [ Many to One ]
li => [ Many to Many ]
h3 => [ 27) Is it possible to perform collection mapping with One-to-One and Many-to-One? ]
p => [ No, collection mapping can only be performed with One-to-Many and Many-to-Many. ]
h3 => [ 28) What is lazy loading in hibernate? ]
p => [ Lazy loading in hibernate improves the performance. It loads the child objects on demand. ]
p => [ Since Hibernate 3, lazy loading is enabled by default, and you don't need to do lazy="true". It means not to load the child objects when the parent is loaded. ]
h3 => [ 29) What is HQL (Hibernate Query Language)? ]
p => [ Hibernate Query Language is known as an object-oriented query language. It is like a structured query language (SQL). ]
p => [ The main advantage of HQL over SQL is: ]
li => [ You don't need to learn SQL ]
li => [ Database independent ]
li => [ Simple to write a query ]
h3 => [ 30) What is the difference between first level cache and second level cache? ]
th => [ No. ]
th => [ First Level Cache ]
th => [ Second Level Cache ]
td => [ 1) ]
b => [ associated with Session ]
b => [ SessionFactory ]
td => [ 2) ]
b => [ enabled ]
b => [ not enabled ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Java Multithreading Questions ]
a => [ Java String &amp; Exception Questions ]
a => [ Java Collection Interview Questions ]
a => [ JDBC Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
span => [ SQL Server Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
