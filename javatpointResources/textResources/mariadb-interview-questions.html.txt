
div => [ 
 ]
h1 => [ MariaDB Interview Questions ]
p => [  A list of top frequently asked  MariaDB  interview questions and answers are given below ]
h3 => [ 1) What is MariaDB? ]
p => [ MariaDB is a popular, open source, and the community-based project developed by MySQL developers. It is a relational database management technology which provides the same features as MySQL. It is a new replacement for MySQL. ]
p => [ MariaDB turns data into structured wide array of applications, ranging from banking to websites. MariaDB is used because it is fast, scalable, and robust with a reach ecosystem of storage engine, plugin, and many other tools make it versatile for a wide variety of use cases. ]
p => [ The latest version of MariaDB (version 10.4) also includes GIS and JSON features. ]
p => [  For more information:   Click Here ]
h3 => [ 2) What are the main features of MariaDB? ]
p => [ MariaDB provides the same features of MySQL with some extensions. It is relatively new and advance. ]
p => [ A list of the features of MariaDB: ]
li => [ MariaDB can run on different operating systems and support a wide variety of programming languages. ]
li => [ MariaDB is licensed under GPL, LGPL, or BSD. ]
li => [ MariaDB follows a standard and popular query language. ]
li => [ MariaDB provides Galera cluster technology. ]
li => [ MariaDB provides supports for PHP which is the most popular web development language. ]
li => [ MariaDB includes a wide selection of storage engines, including high-performance storage engines for working with other RDBMS data sources. ]
li => [ MariaDB also offers many operations and commands unavailable in MySQL and eliminates/replaces features impacting performance negatively. ]
li => [ MariaDB's speed is one of its prominent features. It is remarkably scalable and can handle tens of thousands of tables and billions of rows of data. ]
p => [  For more information:   Click Here ]
h3 => [ 3) How to create database in MariaDB? ]
p => [ CREATE DATABASE command is used to create a database in MariaDB, CREATE SCHEMA is a synonym for creating a database. ]
strong => [ Syntax: ]
p => [  If the optional  OR REPLACE  clause is used, it acts as a shortcut for: ]
strong => [ IF NOT EXISTS: ]
p => [ When IF NOT EXISTS clause is used, MariaDB will return a warning instead of an error if the specified database is already exist. ]
strong => [ For example ]
strong => [ Output: ]
strong => [ Output: ]
strong => [ Output: ]
strong => [ Warning: ]
th => [ Level ]
th => [ Code ]
th => [ Message ]
td => [ Note ]
td => [ 1007 ]
td => [ Can't create database 'student' ; database exists ]
p => [  SHOW DATABASE : This command is used to see the database you have created ]
strong => [ Syntax: ]
p => [  For more information:   Click Here ]
h3 => [ 4) How to use database in MariaDB? ]
p => [  USE DATABASE  command is used to select and use a database in MariaDB. The USE db-name' statement tells MariaDB to use the db_name database as default (current) database for subsequent statements. The database remains the default until the end of the session, or another USE statement is issued: ]
strong => [ Syntax: ]
strong => [ Example ]
p => [  For more information:   Click Here ]
h3 => [ 5) How to delete a database in MariaDB ? ]
p => [  DROP DATABASE  command is used to drop a database in MariaDB. Be very careful with this statement! To use a DROP DATABASE, you need to DROP privileges on the database. DROP SCHEMA is a synonym for DROP DATABASE  ]
h4 => [ NOTE: When a database is dropped, user privileges on the database are not automatically ]
strong => [ Syntax: ]
strong => [ IF EXISTS statement: ]
p => [ Use IF EXISTS to prevent an error from occurring for the database that does not exist. A note is generated for each non-existent database when using IF EXISTS statement. ]
strong => [ Example ]
strong => [ Output: ]
strong => [ Output: ]
strong => [ Output: ]
h4 => [ Note (code 1008): can't drop database 'student'; database doesn't exists ]
p => [  For more information:   Click Here ]
h3 => [ 6) How to create a table in MariaDB's database? ]
p => [ First, you have to create a database in MariaDB follows by selecting the database and then create a table by using the CREATE TABLE statement. You must have the CREATE privilege for a table or on the database to create a table. ]
p => [ Create table statement creates a table name followed by a list of columns, indexes, and constraints. By default, a table is created in the default database ]
strong => [ Syntax: ]
strong => [ For example ]
strong => [ Output: ]
p => [ You can verify that whether the table is created by using SHOW TABLES command. ]
p => [  For more information:   Click Here ]
h3 => [ 7) How to delete a table in MariaDB's database? ]
p => [ DROP TABLE command is used to delete a table from a database in MariaDB. It deletes the table permanently and cannot be recovered. You must have DROP privilege for each table. All table data and the table definitions are removed, as well as triggers associated with the table so very careful with this statement! ]
p => [ If any of the tables named in the argument list do not exist, MariaDB returns an error indicating by name which not existing tables it was not unable to drop, but it also drops all of the tables in the list that does exist. ]
strong => [ Syntax: ]
strong => [ Example ]
p => [ You can verify whether the table is deleted or not. ]
strong => [ Output ]
p => [  For more information:   Click Here ]
h3 => [ 8) How to insert records in a table in MariaDB database? ]
p => [ INSERT INTO statement is used to insert records in a table in the MariaDB database. ]
strong => [ Syntax: ]
strong => [ Or ]
strong => [ Or you can use it also with WHERE condition ]
strong => [ For example ]
strong => [ Specify the column name: ]
strong => [ Insert more than 1 row at a time: ]
strong => [ Select from another table: ]
p => [  For more information:   Click Here ]
h3 => [ 9) How to retrieve records from a table in MongoDB database? ]
p => [ The SELECT statement is used to retrieve records from a table in the MongoDB database. You can choose, single, multiple or all records from a table by using different keywords. ]
strong => [ Syntax: ]
p => [  FROM  clause indicates the table or tables from which to retrieve rows. ]
p => [ The SELECT statement can be used with UNION statement, ORDER BY clause, LIMIT clause, WHERE clause, GROUP BY clause, HAVING clause, etc. ]
strong => [ Example ]
p => [ We have a table "Students", having some data. So retrieve all records from "Students". ]
p => [  For more information:   Click Here ]
h3 => [ 10) How can you retrieve limited number of records from a table? ]
p => [  LIMIT clause  is used with SELECT statement to select a limited number of records from a table. It facilitates you to retrieve records according to your use. ]
strong => [ Syntax: ]
strong => [ Example ]
strong => [ Retrieve records in descending order: ]
p => [ Let's use SELECT statement with LIMIT clause in "Students" table. The result is displayed in descending order and LIMIT is 4. ]
p => [  For more information:   Click Here ]
h3 => [ 11) How can you change or update the already inserted records of a MariaDB table? ]
p => [ The UPDATE statement is used to change, update or modify the existing records of a MariaDB table. It can be used with WHERE, ORDER BY and LIMIT clauses. ]
strong => [ Syntax: ]
strong => [ For example ]
p => [ We have a table "Test", having the following data: ]
p => [ Let's change the 'title' "Welcome to MariaDB" where 'title' was "Hello". ]
p => [  For more information:   Click Here ]
h3 => [ 12) What is the use of DELETE statement in MariaDB? ]
p => [ The MariaDB DELETE statement is used to delete one or more records from the table in the database. It can be used to delete records from the table as well the whole table if you use it without WHERE condition. ]
strong => [ Syntax: ]
strong => [ Let's delete data using one condition. ]
strong => [ Example ]
p => [ The query is executed successfully. You can now see that selected data is deleted. ]
p => [ You can see that "Mahesh" is not available in the table. ]
strong => [ Similarly, you can delete data using multiple conditions. ]
p => [  For more information:   Click Here ]
h3 => [ 13) What is the use of TRUNCATE statement? How is it different from DELETE statement? ]
p => [ TRUNCATE TABLE statement is used to delete a table permanently. It deletes all the records from the table. ]
strong => [ Syntax: ]
strong => [ Difference between DELETE and TRUNCATE statement: ]
li => [ DELETE statement is used to remove one or more columns from a table as well as the whole table. On the other hand, the TRUNCATE TABLE statement is used to delete the whole table permanently. ]
li => [ TRUNCATE TABLE statement is same as DELETE statement without a WHERE clause. ]
li => [ DELETE statement removes rows one at a time and records an entry in the transaction log for each deleted row. ]
li => [ TRUNCATE TABLE removes the data by deallocating the data pages used to store the table data and record only the page deallocations in the transaction log. Hence it is faster than delete statement. ]
strong => [ Example ]
p => [ Let's truncate the table "Students". ]
strong => [ Output: ]
p => [ The TRUNCATE query is executed successfully. You can see that the records of "Student" table have been deleted permanently. ]
strong => [ Output: ]
p => [  For more information:   Click Here ]
h3 => [ 14) What is an aggregate function? How many types of aggregate functions in MariaDB? ]
p => [ In relational database management system, aggregate functions are the functions where the values of multiple rows are grouped together as input on certain criteria and provide a single value of more significant meaning such as a list, set, etc. ]
p => [ Following is a list of aggregate function in MariaDB: ]
p => [  MariaDB COUNT Function : In MariaDB database, COUNT function is used to return the count of an expression. ]
strong => [ Syntax: ]
p => [ The COUNT () Function counts only NOTNULL values. ]
p => [  MariaDB SUM Function : MariaDB SUM function is used to return the summed value of an expression. ]
strong => [ Syntax: ]
p => [  MariaDB MIN Function : MariaDB MIN () function is used to retrieve the minimum value of the expression. ]
strong => [ Syntax: ]
p => [  MariaDB MAX Function : MariaDB MAX () function is used to retrieve the maximum value of the expression. ]
strong => [ Syntax: ]
p => [  MariaDB AVG Function : MariaDB AVG() function is used to retrieve the average value of an expression. ]
strong => [ Syntax: ]
strong => [ Or ]
p => [  MariaDB BIT_AND Function : Returns the bitwise AND of all bits in exp. ]
strong => [ Syntax: ]
p => [  MariaDB BIT_OR : Returns the bitwise OR of all bits in exp. ]
strong => [ Syntax: ]
p => [  MariaDB BIT_XOR : Returns the bitwise XOR of all bits in exp. ]
strong => [ Syntax: ]
h3 => [ 15) What are the different types of clauses used in MariaDB? ]
p => [ MariaDB supports all clauses used in RDBMS. For example: ]
p => [  MariaDB Where Clause : In MariaDB, WHERE clause is used with SELECT, INSERT, UPDATE and DELETE statement to select or change a specific location where we want to change. ]
p => [ It has appeared after the table name in a statement. ]
strong => [ Syntax: ]
h4 => [ Note: WHERE clause is an optional clause. It can be used with AND, OR, AND &amp; OR, LIKE operators.  ]
p => [  MariaDB Like Clause : In MariaDB, LIKE clause is used with SELECT statement to retrieve data when an operation needs an exact match. It can be used with SELECT, INSERT, UPDATE and DELETE statement. ]
p => [ It is used for pattern matching and returns a true or false. The patterns used for comparison accept the following wildcard characters: ]
p => [  "%" wildcard character : It matches numbers of characters (0 or more). ]
p => [  "_" wildcard character : It matches a single character. It matches characters within its set. ]
strong => [ Syntax: ]
p => [  MariaDB Order By Clause : In MariaDB database, ORDER BY Clause is used to sort the records in your result set in ascending or descending order. ]
strong => [ Syntax: ]
h4 => [ Note: You can sort the result without using ASC/DESC attributes. By default, the result will be stored in ascending order. ]
p => [ MariaDB DISTINCT Clause: MariaDB DISTINCT Clause is used to remove duplicates from the result when we use it with a SELECT statement. ]
strong => [ Syntax: ]
h4 => [ Note: When you use the only expression in a DISTINCT clause, the query will return the unique values for that expression. When you use multiple expressions in the DISTINCT clause, the query will return unique combinations for the multiple expressions listed. ]
p => [ The DISTINCT clause doesn't ignore NULL values. So when using the DISTINCT clause in your SQL statement, your result set will include NULL as a distinct value. ]
p => [  MariaDB FROM Clause : MariaDB FROM Clause is used to fetch data from a table. It is also used to join the tables which you will study later. ]
strong => [ Syntax: ]
p => [ Etc. ]
h3 => [ 16) What is the use of WHERE clause? ]
p => [ The WHERE clause is used to select or change a specific location to fetch the records from a table. It is used with SELECT, INSERT, UPDATE and DELETE statement. ]
strong => [ Syntax: ]
strong => [ WHERE Clause with Single Condition ]
strong => [ Example ]
p => [ We have a table "Students" having some data. Let's retrieve all records from the "Student" table where student_id is less than 6. ]
strong => [ Output: ]
p => [  For more information:   Click Here ]
h3 => [ 17) What is the use of LIKE clause in MariaDB? ]
p => [ MariaDB LIKE clause is used with SELECT, INSERT, UPDATE and DELETE statement to retrieve data when an operation needs an exact match. ]
p => [ It is used for pattern matching and returns a true or false. The patterns used for comparison accept the following wildcard characters: ]
p => [  "%" wildcard character : It matches numbers of characters (0 or more). ]
p => [  "_" wildcard character : It matches a single character. It matches characters within its set. ]
strong => [ Syntax: ]
p => [ We have a table "Employees", having the following data. ]
p => [ Let's use % wildcard with LIKE condition to find all of the names which begins with "L". ]
p => [  For more information:   Click Here ]
h3 => [ 18) What is the use of ORDER BY clause in MariaDB? ]
p => [ MariaDB ORDER BY Clause is used to sort the records in your result set in ascending or descending order. ]
h4 => [ Note: You can sort the result without using ASC/DESC attribute. By default, the result will be stored in ascending order. ]
strong => [ Syntax: ]
strong => [ ORDER BY Clause without using ASC/DESC attributes: ]
strong => [ "Employees" table, having the following data: ]
th => [ Id ]
th => [ Name ]
th => [ address ]
td => [ 1 ]
td => [ Lucky ]
td => [ Australia ]
td => [ 2 ]
td => [ Mayank ]
td => [ Ghaziabad ]
td => [ 3 ]
td => [ Rahul ]
td => [ Noida ]
td => [ 4 ]
td => [ Lily ]
td => [ LA ]
strong => [ Output: ]
th => [ Id ]
th => [ Name ]
th => [ address ]
td => [ 4 ]
td => [ Lily ]
td => [ LA ]
td => [ 3 ]
td => [ Rahul ]
td => [ Noida ]
td => [ 2 ]
td => [ Mayank ]
td => [ Ghaziabad ]
td => [ 1 ]
td => [ Lucky ]
td => [ Australia ]
p => [  For more information:   Click Here ]
h3 => [ 19) What is the use of MariaDB DISTINCT clause? ]
p => [ MariaDB DISTINCT Clause is used to remove duplicates from the result when it is used with a SELECT statement. ]
strong => [ Syntax: ]
h4 => [ Note: When you use the only expression in the DISTINCT clause, the query will return the unique values for that expression. When you use multiple expressions in the DISTINCT clause, the query will return unique combinations for the multiple expressions listed. ]
p => [ The DISTINCT clause doesn't ignore NULL values. So when using the DISTINCT clause in your SQL statement, your result set will include NULL as a distinct value. ]
strong => [ Single Expression: ]
p => [ We have a table name "Students", having some duplicate entries. A name "Ajeet" is repeated three times. ]
p => [ Let's use the DISTINCT clause to remove duplicates from the table. ]
strong => [ Output: ]
p => [ You can see that "Ajeet" is repeated three times in the original "Students" table but after using DISTINCT clause, it is returned one time and duplicate entries are deleted. ]
p => [  For more information:   Click Here ]
h3 => [ 20) Why do we use FROM clause with SELECT statement? ]
p => [ The FROM clause is used with SELECT statement to retrieve data from the table. It is also used to join tables. ]
strong => [ Syntax: ]
strong => [ Example ]
p => [ Let's retrieve all employees from the table "Employees". ]
strong => [ Output ]
p => [ As we know that FROM clause used along with the SELECT clause to join the data of two tables too. ]
p => [ Let's take an example of INNER JOIN: one of the most common types of join which returns all rows from multiple tables where the join condition is satisfied. ]
strong => [ We have two tables "Student" and "Employee". ]
p => [ Use the following syntax to join both tables according to the given parameters: ]
strong => [ Output: ]
p => [  For more information:   Click Here ]
h3 => [ 21) What is the use of COUNT() aggregate function? ]
p => [ MariaDB COUNT() aggregate function is used to return the count of an expression. ]
p => [ The COUNT () Function counts only NOT NULL values. ]
p => [ COUNT (*) counts the total number of rows in a table. ]
p => [ COUNT () would return 0 if there were no matching rows. ]
strong => [ Syntax: ]
strong => [ Example ]
p => [ We have a table "Students", having the following data: ]
p => [ Count "student_id" from "Students" table: ]
p => [  For more information:   Click Here ]
h3 => [ 22) What is the use of MariaDB SUM() function? ]
p => [ MariaDB SUM function is used to return the summed value of an expression. ]
p => [ If the table has no any rows, then SUM () returns NULL. The DISTINCT keyword is also used with SUM () to sum only the distinct values of an expression.  ]
strong => [ Syntax: ]
strong => [ Example ]
strong => [ Table: EMP ]
th => [ emp_id ]
th => [ emp_salery ]
td => [ 1 ]
td => [ 1000 ]
td => [ 2 ]
td => [ 2000 ]
td => [ 3 ]
td => [ 5000 ]
strong => [ Output: ]
p => [  For more information:   Click Here ]
h3 => [ 23) What is the usage of MIN() function in MariaDB? ]
p => [ MariaDB MIN() function is used to retrieve the minimum value of the expression. ]
p => [ MIN () can take string argument too, in which case it returns the minimum string values. ]
p => [ MIN() returns NULL if there were no matching rows. ]
strong => [ Syntax: ]
strong => [ Example ]
p => [ We have a table "Student", having the following data: ]
p => [ Let's retrieve lowest salary by using MIN () function. ]
strong => [ Output: ]
strong => [ Let's take another example: ]
strong => [ To check MIN string: ]
p => [  For more information:   Click Here ]
h3 => [ 24) What is the usage of MAX() function in MariaDB? ]
p => [ MariaDB MAX() function is used to retrieve the maximum value of the expression. ]
p => [ MAX () can take string argument too, in which case it returns the maximum string values. ]
p => [ MAX () returns NULL if there were no matching rows. ]
strong => [ Syntax: ]
strong => [ Example ]
strong => [ We have a "student" table ]
strong => [ To list out the student name with maximum score: ]
strong => [ To check maximum string name: ]
p => [  For more information:   Click Here ]
h3 => [ 25) What is the usage of AVG() function in MariaDB database? ]
p => [ MariaDB AVG() function is used to retrieve the average value of an expression. ]
p => [ AVG() returns NULL if there were no matching rows. ]
strong => [ Syntax: ]
strong => [ Or ]
strong => [ Example ]
p => [ We have a table "Employee2", having the following data: ]
p => [ Let's retrieve the average salary of the employees from the table. ]
strong => [ Output ]
h4 => [ Note: We can Use Average function With formula and ORDER BY clause too. ]
p => [  For more information:   Click Here ]
h3 => [ 26) What is JOIN? How many types of JOIN in MariaDB? ]
p => [ JOIN is used to retrieve data from two or more tables. By default, JOIN is also called INNER JOIN. It is used with SELECT statement. ]
p => [ There are mainly two types of joins in MariaDB: ]
strong => [ INNER JOIN: ]
p => [ MariaDB INNER JOIN is the most common type of join which returns all rows from multiple tables where the join condition is satisfied. ]
strong => [ Syntax: ]
strong => [ Example ]
p => [ We have two tables "Students" and "Employee2". ]
strong => [ Student table ]
strong => [ Employee2 Table ]
p => [ Execute the following commands: ]
strong => [ Output ]
strong => [ OUTER JOIN: ]
p => [ Again OUTER JOIN is divided into two types: ]
strong => [ LEFT JOIN: ]
p => [ MariaDB LEFT OUTER JOIN is used to return all rows from the left-hand table specified in the ON condition and only those rows from the other table where the joined condition is satisfied. ]
p => [ LEFT OUTER JOIN is also called LEFT JOIN. ]
strong => [ Syntax: ]
strong => [ Example ]
strong => [ Output ]
strong => [ RIGHT JOIN: ]
p => [ MariaDB RIGHT OUTER JOIN is used to return all rows from the right-hand table specified in the ON condition and only those rows from the other table where the joined fields are satisfied with the conditions. ]
p => [ MariaDB RIGHT OUTER JOIN is also called RIGHT JOIN. ]
strong => [ Syntax: ]
strong => [ Example ]
h3 => [ 27) What is MariaDB INNER JOIN? ]
p => [ MariaDB INNER JOIN is the most common type of join which returns all rows from multiple tables where the join condition is satisfied.  ]
strong => [ Syntax: ]
h3 => [ Example: ]
strong => [ We have two tables' sites and pages: ]
strong => [ Sites table: ]
th => [ site_id ]
th => [ site_name ]
td => [ 100 ]
td => [ javatpoint.com ]
td => [ 200 ]
td => [ Facebook.com ]
td => [ 300 ]
td => [ Yahoo.com ]
td => [ 400 ]
td => [ Google.com ]
strong => [ Pages table: ]
th => [ page_id ]
th => [ site_id ]
th => [ page_title ]
td => [ 1 ]
td => [ 100 ]
td => [ MariaDB ]
td => [ 2 ]
td => [ 100 ]
td => [ MySQL ]
td => [ 3 ]
td => [ 200 ]
td => [ Java interview questions ]
td => [ 4 ]
td => [ 300 ]
td => [ Software testing ]
td => [ 5 ]
td => [ 500 ]
td => [ Flight booking ]
h4 => [ Now execute the following commands: ]
strong => [ Output: ]
th => [ site_id ]
th => [ site_name ]
th => [ page_id ]
th => [ page_title ]
td => [ 100 ]
td => [ javatpoint ]
td => [ 1 ]
td => [ MariaDB ]
td => [ 100 ]
td => [ javatpoint ]
td => [ 2 ]
td => [ MySQL ]
td => [ 200 ]
td => [ Facebook.com ]
td => [ 3 ]
td => [ Java interview questions ]
td => [ 300 ]
td => [ Yahoo.com ]
td => [ 4 ]
td => [ Software testing ]
p => [  For more information:   Click Here ]
h3 => [ 28) What is LEFT OUTER JOIN in MariaDB? ]
p => [ MariaDB LEFT OUTER JOIN is used to return all rows from the left-hand table specified in the ON condition and only those rows from the other table where the joined condition is satisfied. ]
p => [ LEFT OUTER JOIN is also called LEFT JOIN. ]
strong => [ Syntax: ]
strong => [ Example ]
strong => [ We have two tables' sites and pages: ]
p => [ Sites table: ]
th => [ site_id	 ]
th => [ site_name ]
td => [ 100 ]
td => [ javatpoint.com ]
td => [ 200 ]
td => [ Facebook.com ]
td => [ 300 ]
td => [ Yahoo.com ]
td => [ 400 ]
td => [ Google.com ]
strong => [ Pages table: ]
th => [ page_id ]
th => [ site_id ]
th => [ page_title ]
td => [ 1 ]
td => [ 100 ]
td => [ MariaDB ]
td => [ 2 ]
td => [ 100 ]
td => [ MySQL ]
td => [ 3 ]
td => [ 200 ]
td => [ Java interview questions ]
td => [ 4 ]
td => [ 300 ]
td => [ Software testing ]
td => [ 5 ]
td => [ 500 ]
td => [ Flight booking ]
strong => [ Now execute the following commands: ]
strong => [ Output: ]
th => [ site_id ]
th => [ site_name ]
th => [ page_id ]
th => [ page_title ]
td => [ 100 ]
td => [ javatpoint ]
td => [ 1 ]
td => [ MariaDB ]
td => [ 100 ]
td => [ javatpoint ]
td => [ 2 ]
td => [ MySQL ]
td => [ 200 ]
td => [ Facebook.com ]
td => [ 3 ]
td => [ Java interview questions ]
td => [ 300 ]
td => [ Yahoo.com ]
td => [ 4 ]
td => [ Software testing ]
td => [ 400 ]
td => [ Google.com ]
td => [ null ]
td => [ null ]
p => [ Site_name Google.com is also included because of LEFT JOIN. ]
p => [  For more information:   Click Here ]
h3 => [ 29) What is RIGHT OUTER JOIN in MariaDB? ]
p => [ MariaDB RIGHT OUTER JOIN is used to return all rows from the right-hand table specified in the ON condition and only those rows from the other table where the joined fields are satisfied with the conditions. ]
p => [ MariaDB RIGHT OUTER JOIN is also called RIGHT JOIN.  ]
strong => [ Syntax: ]
strong => [ Example ]
p => [ We have two tables' sites and pages: ]
strong => [ Sites table: ]
th => [ site_id	 ]
th => [ site_name ]
td => [ 100 ]
td => [ javatpoint.com ]
td => [ 200 ]
td => [ Facebook.com ]
td => [ 300 ]
td => [ Yahoo.com ]
td => [ 400 ]
td => [ Google.com ]
strong => [ Pages table: ]
th => [ page_id ]
th => [ site_id ]
th => [ page_title ]
td => [ 1 ]
td => [ 100 ]
td => [ MariaDB ]
td => [ 2 ]
td => [ 100 ]
td => [ MySQL ]
td => [ 3 ]
td => [ 200 ]
td => [ Java interview questions ]
td => [ 4 ]
td => [ 300 ]
td => [ Software testing ]
td => [ 5 ]
td => [ 500 ]
td => [ Flight booking ]
strong => [ Now execute the following commands: ]
strong => [ Output: ]
th => [ site_id ]
th => [ site_name ]
th => [ page_id ]
th => [ page_title ]
td => [ 100 ]
td => [ javatpoint ]
td => [ 1 ]
td => [ MariaDB ]
td => [ 100 ]
td => [ javatpoint ]
td => [ 2 ]
td => [ MySQL ]
td => [ 200 ]
td => [ Facebook.com ]
td => [ 3 ]
td => [ Java interview questions ]
td => [ 300 ]
td => [ Yahoo.com ]
td => [ 4 ]
td => [ Software testing ]
td => [ null ]
td => [ null ]
td => [ 5 ]
td => [ Flight booking ]
p => [ Here page_id and page_title contains value because of RIGHT JOIN. ]
p => [  For more information:   Click Here ]
h3 => [ 30) What is function in MariaDB? How can you create and drop a function in MariaDB? ]
p => [ MariaDB function is a stored program that is used to pass parameters into them and return a value ]
p => [ We can easily create and drop functions in MariaDB.  ]
strong => [ # Create Function (MariaDB): ]
p => [ You can create your own function in MariaDB: ]
strong => [ Syntax: ]
strong => [ Example ]
strong => [ Create a function CalcValue in MariaDB database. ]
p => [  DEFINER clause : it is an optional clause. If not specified, the definer is the user that created the function. If you wish to specify a different definer, you must include the DEFINER clause where user_name is the definer for the function. ]
p => [  function_name : It specifies the name to assign to this function in MariaDB. ]
p => [  return_datatype : It specifies the data type of the function's return value. ]
p => [  LANGUAGE SQL : It is in the syntax for portability but will have no impact on the function. ]
p => [  DETERMINISTIC : It means that the function will always return one result given a set of input parameters. ]
p => [  NOT DETERMINISTIC : It means that the function may return a different result given a set of input parameters. The result may be affected by table data, random numbers or server variables. ]
p => [  CONTAINS SQL : It is the default. It is an informative clause that tells MariaDB that the function contains SQL, but the database does not verify that this is true. ]
p => [  No SQL : An informative clause that is not used and will have no impact on the function. ]
p => [  READS SQL DATA : An informative clause that tells MariaDB that the function will read data using SELECT statements but does not modify any data. ]
p => [  MODIFIES SQL DATA : An informative clause that tells MariaDB that the function will modify SQL data using INSERT, UPDATE, DELETE, or other DDL statements. ]
p => [  declaration_section : The place in the function where you declare local variables. ]
p => [  executable_section : The place in the function where you enter the code for the function. ]
strong => [ Output: ]
strong => [ MariaDB DROP Function ]
p => [ You can drop your created function very easily from your database. ]
strong => [ Syntax: ]
strong => [ Parameter Explanation ]
p => [  function_name : It specifies the name of the function that you want to drop. ]
strong => [ Example ]
p => [ We have created a function name "CalcValue". Now drop the function. ]
p => [ Now you can see that function is deleted and not present in the list anymore. ]
h3 => [ 31) What is a procedure or a stored procedure in the database? ]
p => [ Procedures are sort of functions in a database. Procedures are created when you want to perform a task repetitively. ]
p => [ MariaDB procedure is a stored program that is used to pass parameters into it. It does not return a value as a function does.  ]
p => [ You can create and drop procedures like functions.  ]
strong => [ # Create Procedure (MariaDB): ]
p => [ You can create your procedure just like you create a function in MariaDB. ]
strong => [ Syntax: ]
h3 => [ Parameter Explanation ]
p => [  DEFINER clause : Optional. ]
p => [  procedure_name : The name to assign to this procedure in MariaDB. ]
p => [  Parameter : One or more parameters passed into the procedure. When creating a procedure, there are three types of parameters that can be declared: ]
p => [  IN : The parameter can be referenced by the procedure. The value of the parameter cannot be overwritten by the procedure. ]
p => [  OUT : The parameter cannot be referenced by the procedure, but the value of the parameter can be overwritten by the procedure. ]
p => [  IN OUT : The parameter can be referenced by the procedure, and the value of the parameter can be overwritten by the procedure. ]
p => [  LANGUAGE SQL : It is in the syntax for portability but will have no impact on the function. ]
p => [  DETERMINISTIC : It means that the function will always return one result given a set of input parameters. ]
p => [  NOT DETERMINISTIC : It means that the function may return a different result given a set of input parameters. The result may be affected by table data, random numbers or server variables. ]
p => [  CONTAINS SQL : It is the default. It is an informative clause that tells MariaDB that the function contains SQL, but the database does not verify that this is true. ]
p => [  No SQL : It is an informative clause that is not used and will have no impact on the function. ]
p => [  READS SQL DATA : It is an informative clause that tells MariaDB that the function will read data using SELECT statements but does not modify any data. ]
p => [  MODIFIES SQL DATA : It is an informative clause that tells MariaDB that the function will modify SQL data using INSERT, UPDATE, DELETE, or other DDL statements. ]
p => [  declaration_section : The place in the procedure where you declare local variables. ]
p => [  executable_section : The place in the procedure where you enter the code for the procedure. ]
strong => [ Example ]
p => [ Create a procedure named "CalcValue" in MariaDB database. ]
p => [ Procedure is created successfully: ]
p => [ You can refer your new procedure as follows ]
strong => [ MariaDB DROP Procedure: ]
p => [ You can drop procedure by using the following command: ]
strong => [ Syntax: ]
strong => [ Parameter Explanation: ]
p => [  procedure_name : It specifies the name of the procedure that you want to drop. ]
strong => [ Example ]
p => [ You can see that the procedure is dropped now and it is not available in the list. ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
