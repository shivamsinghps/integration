
div => [ 
 ]
h1 => [ Most Asked Scrum Master Interview Questions ]
p => [ Following is a list of most frequently asked Scrum Master Interview questions and their best possible answers. ]
h3 => [ 1) What do you understand by Scrum? ]
p => [ Scrum is an Agile framework that is used for developing, delivering, and sustaining complex products. It is mainly used for software development, but we can use it in other fields such as research, sales, marketing, and advanced technologies. It is designed to help teams work together. ]
p => [ Scrum is generally used for teams of ten or fewer members who break their work and set small goals which they can complete within time-boxed iterations, called sprints, most commonly in two weeks, and sometimes maximum time is one month. ]
h3 => [ 2) What is the Daily Scrum? ]
p => [ The Scrum Team is used to do a daily 15-minute time-boxed meeting to track their task progress. This routine is called Daily Scrum. At the end of the sprint, the team holds a sprint review to demonstrate the work done and a sprint retrospective to improve continuously.  ]
h3 => [ 3) What is the main usage of Scrum? ]
p => [ Scrum can make teams able to learn from experiences, self-organize while working on problems, reflect on their victories and failures, and make improvements.  ]
h3 => [ 4) What is Agile in software development? ]
p => [ In Software development, Agile is a collective framework of approaches and behaviors that encourage iterative development and collaboration between self-organizing teams. This practice involves discovering requirements and developing solutions through the collaborative effort of self-organizing and cross-functional teams and their end-users. ]
p => [ Agile mainly focuses on adaptive planning, evolutionary development, early delivery, and continual improvement. It also encourages flexible responses to changes. ]
h3 => [ 5) What are the different roles in Scrum? ]
p => [ Following are the three different roles in Scrum: ]
strong => [ Product Owner: ]
strong => [ Scrum Master: ]
strong => [ Scrum Team: ]
h3 => [ 6) What are the main responsibilities of the Scrum Team? ]
p => [ The Scrum Team is a self-organizing team that involves five to seven members (always less than ten members). ]
p => [ Following are some key responsibilities of the Scrum Team: ]
li => [ It is a must to develop and deliver working products during each sprint. ]
li => [ It is a must to ensure ownership and transparency for the work assigned to the team members. ]
li => [ The Scrum Team has to provide correct and crisp information to ensure a successful daily scrum meeting. ]
li => [ Collaboration between team members is a must. ]
h3 => [ 7) What is the difference between Agile and Scrum? ]
p => [ Following is the list of main differences between Agile and Scrum:  ]
th => [ Agile ]
th => [ Scrum ]
td => [ Agile is a set of principles that is iterative and incremental. ]
td => [ Scrum is just an implementation of the Agile methodology. ]
td => [ It is best suited for projects involving a small team of experts. ]
td => [ It is best to use it in teams that need to handle constantly changing requirements. ]
td => [ In Agile, a project head has to take care of all tasks and is vital to the project. ]
td => [ In Scrum, there is no leader. Here, the scrum master and the team have to handle the issues. ]
td => [ In Agile, it is not easy to handle changes frequently. ]
td => [ In Scrum, teams can easily react and make changes quickly. ]
td => [ It requires frequent delivery to their customer or end-users. ]
td => [ In Scrum, the sprints provide workable builds of the final product to the user for feedback. ]
td => [ It provides face-to-face interactions between cross-functional teams. ]
td => [ In Scrum, regular daily stand-up meetings are held to help with collaboration. This 15-minute time-boxed meeting is used to track the progress of their task. ]
td => [ In Agile, design and execution are easy and simple. ]
td => [ In Scrum, design, and execution can be innovative and experimental. ]
h3 => [ 8) What are some other frameworks of Agile rather than Scrum? ]
p => [ Some other Agile frameworks rather than Scrum are kanban (which uses kanban boards), test-driven development, and feature-driven development.  ]
h3 => [ 9) What are the Artifacts of the Scrum Process? ]
p => [ There are mainly three artifacts of the Scrum process discussed below: ]
strong => [ Product Backlog: ]
strong => [ Sprint Backlog: ]
strong => [ Product Increment: ]
h3 => [ 10) What are the key differences between Product Backlog and Sprint Backlog? ]
p => [ Following are the key differences between Product Backlog and Sprint Backlog:  ]
th => [ Product Backlog ]
th => [ Sprint Backlog ]
td => [ The Product Backlog is a list of items that you have to complete to develop the product. ]
td => [ The Sprint Backlog is a list of items that we have to complete during each Sprint. ]
td => [ In Product Backlog, the product owner collects the backlog from the customer and is assigned to the team. ]
td => [ In Sprint Backlog, the team collects the backlog from the product owner and sets up Sprint's time frame. ]
td => [ It is based on customer vision. ]
td => [ It can vary according to the product vision defined by the product owner. ]
td => [ It has a specific end goal. ]
td => [ It is specific to a sprint. ]
td => [ It doesn't depend on the sprint backlog. ]
td => [ It depends on the product backlog. ]
td => [ In Product Backlog, the product owner maintains the backlog until the Project is complete. ]
td => [ In Sprint Backlog, each new Sprint has backlogs added by the team. ]
h3 => [ 11) What do you understand by Scrum Master? / Who is a Scrum Master? ]
p => [ Scrum Master is a unique position of a person who is used to promote and support the usage of Scrum within the team.  ]
h3 => [ 12) What does a Scrum Master do? / What is the role of a Scrum Master? ]
p => [ Following is the list of main roles of a Scrum Master: ]
li => [ A Scrum Master is responsible for understanding the theory, practices, rules and, values of the Scrum. ]
li => [ He/She has to maintain discipline and ensure that the team follows the values, principles, and Scrum practices. ]
li => [ To remove the distractions and impediments that can limit the progress of the Project. ]
li => [ Make sure that the team delivers value during the Sprint. ]
h3 => [ 13) What do you understand by the user story in Scrum?  ]
p => [ A user story is a tool used in Scrum (Agile software development) that captures a feature's description from an end-user perspective. A user story is used to create a simplified description of a user's requirements.  ]
h3 => [ 14) What happens in Daily Stand-up sessions in Scrum?  ]
p => [ In Scrum, every day a stand-up sessions or a discussion takes place, usually for 15 minutes. These Daily Stand-up sessions are used to understand the following things: ]
li => [ Which tasks are going well? ]
li => [ Which tasks were completed? ]
li => [ Which tasks are pending? ]
li => [ It also specifies the obstacles the team is facing. ]
li => [ This meeting also helps to understand the overall scope and status of the Project. ]
li => [ Further discussions can take place after the stand-up sessions. ]
h3 => [ 15) What is Scrum-ban? ]
p => [ Scrum-ban is a combination of Scrum and Kanban. It is a methodology used to fulfill the team's requirements, minimize the batching of work, and adopt a pull-based system. It contains the structure of Scrum and the flexibility and visualization of Kanban.  ]
h3 => [ 16) Why Scrum testers encourage automated testing for the Project? ]
p => [ Scrum prefers to use automated performance or regression testing to deliver software as fast as possible. ]
h3 => [ 17) What do you understand by Sprint 0 and Spike? ]
p => [  Sprint 0:  Sprint 0 specifies the small amount of effort used to create a rough skeleton of the product backlog. It also specifies insights towards estimating the release of products. Sprint 0 is required for the following reasons: ]
li => [ It is used to create the project skeleton, along with research spikes. ]
li => [ Keep the design minimal. ]
li => [ It is used to develop some stories. ]
li => [ It is used because of its low velocity and being lightweight. ]
p => [  Spike:  The spike is a set of activities that involve Extreme Programming (XP) for research, design, investigation, creating POCs, etc. It is mainly used to reduce the technical approach risks and gain knowledge to understand requirements better and improve reliability. ]
h3 => [ 18) What is User-Story Mapping in Scrum? ]
p => [ In Scrum, User-Story Mapping is used to represent and arrange user stories in such a way that we can easily understand system functionalities, system backlog, planning releases, and providing value to customers. User stories are arranged according to their priority on the horizontal axis. On the vertical axis, the user stories are represented in the increasing levels of sophistication.  ]
h3 => [ 19) Who writes user stories?  ]
p => [ Generally, it is the product owner's responsibility to ensure that the product backlog of agile user stories exists. But that doesn't mean that the product owner can only write them. So, anyone can write user stories. ]
strong => [ Process of writing user stories ]
p => [ When the product discussions start, the team talks about the requirements and captures those in user stories. A product backlog is always live and never stays frozen so, if anyone feels there is a missing requirement or something that can add value to the client, they can add it up as a user story in the backlog. No rule or guideline is specifying that only the product owner can write the user stories. People writing the story should understand what it means and how to write it, as there is a set format. ]
h3 => [ 20) What are the advantages of writing user stories? ]
p => [ The biggest advantage of writing user stories is that if anyone writes user stories, it gives a sense of ownership to those members as they can connect if they are involved in the writing process. We can write user stories all through Agile development.  ]
h3 => [ 21) What do you understand by 'Scrum of Scrums'?  ]
p => [ The terminology 'Scrum of Scrums' is used for scaled agile technologies required for controlling and collaborating with multiple scrum teams. It is most efficient in situations where teams are collaborating on complex assignments. ]
p => [ It also ensures that the required transparency, collaboration, adaption, and adoption are established, and the products are deployed and delivered. ]
h3 => [ 22) What is the general age of the Sprints? ]
p => [ A sprint is generally one month or less when a usable and potentially releasable product increment is created. But a sprint can be as short as a week or two weeks as average.  ]
h3 => [ 23) What do you understand by a Sprint Retrospective? ]
p => [ The sprint retrospective is a type of meeting that takes place after the sprint review. Here, the team discusses past mistakes, potential issues, and new methods to handle them. This data is incorporated into the planning of a new sprint. ]
h3 => [ 24) What are the main drawbacks or disadvantages of using Scrum? ]
p => [ Following is the list of some biggest drawbacks or disadvantages of using Scrum: ]
li => [ Scrum requires a team of experienced individuals. ]
li => [ The Scrum team needs to be collaborative and committed to providing precise results. ]
li => [ A team lacking experience or a scrum master with lesser experience can cause the collapse of the project. ]
li => [ We have to define tasks well; otherwise, the project may provide inaccuracies. ]
li => [ Scrum works better for smaller projects, but it isn't easy to scale to larger and more complex projects. ]
h3 => [ 25) Is it possible for someone to change a requirement? ]
p => [ Yes, anyone can make changes in Scrum. Scrum requires a lot of feedback from both customers and stakeholders to improve the product. So, changes can be used to make the project better and faster. ]
h3 => [ 26) How can you deal with the Scrum Team? ]
p => [ We should follow the steps given below to deal with the Scrum Team: ]
li => [ We have to identify and address the issue's root cause. ]
li => [ We have to establish complete ownership. ]
li => [ Try to diffuse the disagreement. ]
li => [ We have to perform continuous monitoring and provide complete visibility. ]
li => [ We have to emphasize focus areas that complement the project. ]
li => [ There should be a common understanding required to guide the team. ]
h3 => [ 27) What is the difference between user stories, epics, and tasks?  ]
p => [ Following are the differences between user stories, epics, and tasks: ]
strong => [ User Stories: ]
strong => [ Epics: ]
strong => [ Tasks: ]
h3 => [ 28) What do you understand by Sprint and Velocity in Scrum? ]
p => [ In Scrum, Sprint is a terminology used to describe a time-boxed iteration. A specific module or feature of the product is created in the Sprint process. The duration of a sprint can be a week or two weeks. On the other hand, Velocity is a metric used to measure the amount of work completed by a team during a Sprint. It specifies the number of user stories completed in a Sprint. ]
h3 => [ 29) What are the different responsibilities of a Product Owner? ]
p => [ Following is a list of some essential responsibilities of a Product Owner: ]
li => [ A Product Owner is responsible for defining the vision for the project. ]
li => [ A Product Owner has to anticipate the needs of the customer and create appropriate user stories. ]
li => [ A Product Owner is responsible for the progress of the project. ]
li => [ A Product Owner has to answer all product-related questions. ]
h3 => [ 30) What are a Burnup and Burndown Chart in Scrum? ]
p => [  Burnup Chart:  A burnup chart is a tool used to track the amount of work completed. It also represents the total amount of work that needs to be done for a sprint/project. ]
p => [  Burndown Chart:  A burndown chart is used to represent the working through user stories. It shows total effort against the amount of work for each iteration. ]
h3 => [ 31) How would you estimate the user stories in a Scrum Project? ]
p => [ In a Scrum project, user stories' estimation can be done according to their difficulty. A particular scale is used to assess the difficulty of the user stories. Following are some types of scales: ]
li => [ Numeric Sizing (1 - 10) ]
li => [ T-shirt Sizes (S, M, L, XL…) ]
li => [ Fibonacci Series (1, 2, 3, 5, 8…) ]
li => [ Dog breeds (Great Dane, Pug…) ]
h3 => [ 32) How can you deal with Score Creep?  ]
p => [ The term Score creep is used to specify a change that is uncontrolled and added without checking its impact on scope, time, cost, etc. ]
p => [ We have to follow the steps given below to handle it well: ]
li => [ We have to monitor the work being done on a day-to-day basis closely. ]
li => [ A clear understanding and communicating with the team about the vision and ensuring they're aligned. ]
li => [ Capturing, reviewing the project requirements regularly to emphasize the needs signed off to the team and customer. ]
li => [ We have to ensure that any changes introduced go through change control, and we have to implement them according to the approval for change request. ]
li => [ Avoid gold plating. ]
h3 => [ 33) What are the different types of risks in Scrum? How can you handle them? ]
p => [ Following are some important types of risks in Scrum: ]
li => [ Budget: It specifies the risk of exceeding budgets. ]
li => [ People (team): It specifies that the team members must have appropriate skills and capabilities. ]
li => [ Sprint (duration and deliverables): It is used to specify the duration and addition of the work scope. ]
li => [ Product (user stories, epics): It specifies all ill-defined user stories and epics. ]
li => [ Knowledge and capability: It is used to specify the appropriate resources. ]
li => [ Managing risks involves identifying, assessing, analyzing, defining, and implementing risk responses, monitoring, and managing them. ]
li => [ The team does all the above things continually right from the project's start until completion. ]
h4 => [ Note: It is essential to understand that the risk's impact is based on the proximity of the actual occurrence of the risk. ]
h3 => [ 34) What are the full form of MVP and MMP? What is their usage?  ]
p => [  MVP  stands for Minimum Viable Product. It is a Lean Startup concept used to stress the impact of learning while performing product development. It allows one to test and understand the idea by getting exposed to the initial version for target customers and users. To get this, one has to collect all the relevant data and learn from that collected data. It is mainly used to produce the product, provide access to the users, and observe how the product is used, perceived, and understood. It also offers more insight into the customer's or user's need. ]
p => [  MMP  stands for Minimal Marketable Product. It is used to specify the product's description, which will have a minimal number of features that address the users' requirements. It also helps an organization to reduce the time to market. ]
h3 => [ 35) Is Scrum Master a management-level position? ]
p => [ Yes, the Scrum Master is a management-level position, but it is not a manager position exactly. The role of the Scrum Master is to manage the Scrum process, not the Scrum Team or even the Development Team. If the Scrum Master is not in the management position, he/she may not have the power to remove the impediments.  ]
h3 => [ 36) How does a Scrum Master track the progress of the Sprint? ]
p => [ Following are some ways that a Scrum Master uses to track the progress of the Sprint: ]
li => [ Daily Scrum meetings ]
li => [ Scrum retrospectives ]
li => [ Sprint planning ]
li => [ Escaped defects ]
li => [ Defect density ]
li => [ Sprint burndown ]
li => [ Team velocity ]
h3 => [ 37) What are the different phases of risk management? ]
p => [ Following are the five different phases of risk management: ]
li => [ Risk identification ]
li => [ Risk categorization ]
li => [ Risk response ]
li => [ Risk review ]
li => [ Risk closure ]
h3 => [ 38) What does the "Definition of Ready" contains? ]
p => [ The "Definition of Ready" is a working agreement between the team and the Product Owner on what readiness means. The product backlog contains a list of items where the team can work, but it is essential to check if the things are in a ready state because it is necessary to be picked up in a sprint. First, the team has to specify what needs to be done and the amount of work required to complete the User Story or PBI. The Definition of Ready may differ from product to product or from team to team.  ]
h3 => [ 39) What are the parameters to define the ready state for a User Story?  ]
p => [ Following is the list of some parameters that can be used to define the Ready state for a User Story: ]
li => [ The PBI should be in the approved or equivalent state for the team to pick it up for development. ]
li => [ The team should identify the User Story dependencies. ]
li => [ Acceptance criteria should exist and be understood by the team. ]
li => [ Acceptance criteria should have sufficient details on the features so that the team can develop and test them. ]
li => [ Performance criteria should have provided to the team to understand it well. ]
li => [ The PBI should be written in the Actor-&gt;Action-&gt;Outcome format. ]
li => [ The team should have an idea of what it will mean Demo the User Story. ]
h3 => [ 40) What does DoD mean? What is its usage? ]
p => [ DoD stands for "Definition of Done." It specifies a collection of deliverables, including written codes, comments on coding, unit tests, integration testing, design documents, release notes, etc. It is formed by a list of tasks that define the work's quality. It is used to decide whether an activity from the Sprint backlog is completed. ]
p => [ DoD is beneficial to scrum while identifying the deliverables to achieve the objective of the projects. ]
strong => [ Following is the list of its essential usages: ]
li => [ To define the steps required to deliver the iteration. ]
li => [ To use appropriate tools such as burndown to make the process more effective. ]
li => [ To ensure on-time feedback throughout the project life cycle. ]
li => [ To ensure that the walkthrough of the product backlog items is done and understood correctly. ]
li => [ To ensure that the DoD is defined to become task-oriented. ]
li => [ To create the checklist for the product backlog items. ]
li => [ To involve the product owner for reviewing during the Sprint and sprint retrospective. ]
h3 => [ 41) What do you understand by the term "Servant Leader"? How can a Scrum Master be a Servant Leader? ]
p => [ The term "Servant Leader" mainly specifies the service orientation which a leader should demonstrate. The Scrum Master should act as a facilitator, a guide, a mentor, etc. By using this technique, the team can increase involvement and empowerment.  ]
h3 => [ 42) How can you coordinate between multiple teams? ]
p => [ There are many approaches to coordinate between multiple teams. One of the most common strategies for this is the Scrum of Scrums (SoS) meeting. In this meeting, the members representing each scrum team discuss the progress, performance, issues, risks, etc. The team should pre-define the frequency of these meetings. Generally, scrum masters would represent a particular scrum team, besides having the Chief Scrum Master (whose responsibility is coordination &amp; collaboration among all the scrums) who facilitates these meetings.  ]
h3 => [ 43) How can a Scrum Master increase the productivity of the development team?  ]
p => [ Scrum Masters can quickly increase the development team's productivity by facilitating their decisions and removing impediments. Scrum Master does not manage the development team. But the Scrum Master helps the team by promoting their choices and eliminating barriers, and protecting them from external distractions.  ]
a => [ Interview Tips ]
a => [ Job/HR Interview Questions ]
a => [ Company Interview Questions &amp; Procedure ]
a => [ JavaScript Interview Questions ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
a => [ jQuery Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
