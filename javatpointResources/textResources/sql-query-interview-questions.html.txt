
div => [ 
 ]
h1 => [ SQL Query Interview Questions ]
p => [  In this article, you will learn many simple and complex SQL queries asked in IT interviews. Let's take two tables which help in solving various queries. The name of the first table is  Student,  and the name of the second table is  Subject. ]
p => [  The Student table consists of  Student_ID, Stu_Name, Stu_Subject_ID, Stu_Marks, and Stu_Age  columns, and the  Subject  table consists of  Subject_ID and Subject_Name  columns. ]
strong => [ Student Table: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 101 ]
td => [ Akhil ]
td => [ BCA101 ]
td => [ 85 ]
td => [ 20 ]
td => [ 102 ]
td => [ Balram ]
td => [ BCA104 ]
td => [ 78 ]
td => [ 19 ]
td => [ 103 ]
td => [ Bheem ]
td => [ BCA102 ]
td => [ 80 ]
td => [ 22 ]
td => [ 104 ]
td => [ Chetan ]
td => [ BCA103 ]
td => [ 95 ]
td => [ 20 ]
td => [ 105 ]
td => [ Diksha ]
td => [ BCA104 ]
td => [ 99 ]
td => [ 20 ]
td => [ 106 ]
td => [ Raman ]
td => [ BCA105 ]
td => [ 88 ]
td => [ 19 ]
td => [ 107 ]
td => [ Sheetal ]
td => [ BCA103 ]
td => [ 98 ]
td => [ 22 ]
strong => [ Column Table: ]
th => [ Subject_ID ]
th => [ Subject_Name ]
td => [ BCA101 ]
td => [ C ]
td => [ BCA102 ]
td => [ C++ ]
td => [ BCA103 ]
td => [ Principle of Management ]
td => [ BCA104 ]
td => [ Core Java ]
td => [ BCA105 ]
td => [ Math ]
td => [ BCA106 ]
td => [ Android ]
h3 => [ Query 1: Write a query to create the table in Structured Query Language. ]
strong => [ Sol: ]
strong => [ Syntax to Create a Table in SQL: ]
p => [  We can create a table using  Create Table  keyword. This keyword creates only one table at a time. ]
strong => [ Examples: ]
strong => [ Example 1: ]
p => [ The following example creates the Student table: ]
strong => [ Example 2: ]
p => [ The following example creates the Subject table: ]
h3 => [ Query 2: Write a query to insert the data into the table. ]
strong => [ Sol: ]
strong => [ Syntax to insert data into a table: ]
p => [ We can easily insert the record using the INSERT statement in SQL. ]
strong => [ Examples: ]
strong => [ Example 1: ]
p => [ The following queries insert the data of students into Student table: ]
strong => [ Example 2: ]
p => [ The following query inserts Subject_ID and Subject_Name into the Subject table: ]
h3 => [ Query 3: Write a query to view the specific record of the table by using the WHERE clause. ]
strong => [ Sol: ]
strong => [ Syntax to access specific records from the table: ]
strong => [ Examples: ]
strong => [ Example 1: ]
p => [ The following query shows all the rows of those Students whose age is 20: ]
p => [ The WHERE clause in this query shows only those rows which satisfy the specified condition. ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 101 ]
td => [ Akhil ]
td => [ BCA101 ]
td => [ 85 ]
td => [ 20 ]
td => [ 104 ]
td => [ Chetan ]
td => [ BCA103 ]
td => [ 95 ]
td => [ 20 ]
td => [ 105 ]
td => [ Diksha ]
td => [ BCA104 ]
td => [ 99 ]
td => [ 20 ]
p => [  Example 2:  The following query shows the Subject_Name of those subjects whose Subject_ID is BCA103 and BCA106: ]
p => [ The WHERE clause in this query shows only those rows which satisfy the specified condition. ]
strong => [ Output: ]
th => [ Subject_ID ]
th => [ Subject_Name ]
td => [ BCA103 ]
td => [ Principle of Management ]
td => [ BCA106 ]
td => [ Android ]
h3 => [ Query 4: Write a query in SQL to find the minimum and maximum number from the integer column: ]
strong => [ Sol: ]
strong => [ Syntax to find the maximum and minimum number from the column: ]
p => [ We can easily find the maximum and minimum values of any integer column using the MAX and MIN aggregate functions. ]
strong => [ Example: ]
p => [ The following query shows the maximum and minimum marks of the Stu_Marks column from the Student table: ]
h3 => [ Query 5: Write a query to access the first record from the SQL table? ]
strong => [ Sol: ]
strong => [ Syntax to find the first record from the table: ]
p => [ We can easily find the first row of any table by assigning 1 to the Rownum keyword in the WHERE clause of the SELECT statement. ]
strong => [ Example: ]
p => [ The following query shows the first row of the student table in the output: ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 101 ]
td => [ Akhil ]
td => [ BCA101 ]
td => [ 85 ]
td => [ 20 ]
h3 => [ Query 6: Write a query to access the last record from the table? ]
strong => [ Sol: ]
strong => [ Syntax to find the first record from the table: ]
p => [ We can easily find the last row of any table by using the above syntax. ]
strong => [ Example: ]
p => [ The following query shows the last row of the student table in the output: ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 107 ]
td => [ Sheetal ]
td => [ BCA103 ]
td => [ 98 ]
td => [ 22 ]
sup => [ th ]
strong => [ Sol: ]
sup => [ th ]
p => [ We can easily retrieve the first five rows of any table by using the Rownum keyword. We have to use the 'Less than equals to' comparison operator for this operation. ]
p => [ Here, N defines the number of rows to be shown in the output. ]
strong => [ Example: ]
p => [ The following query shows the first five rows of the student table in the output: ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 101 ]
td => [ Akhil ]
td => [ BCA101 ]
td => [ 85 ]
td => [ 20 ]
td => [ 102 ]
td => [ Balram ]
td => [ BCA104 ]
td => [ 78 ]
td => [ 19 ]
td => [ 103 ]
td => [ Bheem ]
td => [ BCA102 ]
td => [ 80 ]
td => [ 22 ]
td => [ 104 ]
td => [ Chetan ]
td => [ BCA103 ]
td => [ 95 ]
td => [ 20 ]
td => [ 105 ]
td => [ Diksha ]
td => [ BCA104 ]
td => [ 99 ]
td => [ 20 ]
sup => [ th ]
strong => [ Sol: ]
sup => [ th ]
p => [ We can easily retrieve the first five rows of any table by using the Rownum keyword. ]
strong => [ Example: ]
p => [ The following query shows the last four rows of the Subject table: ]
strong => [ Output: ]
th => [ Subject_ID ]
th => [ Subject_Name ]
td => [ BCA103 ]
td => [ Principle of Management ]
td => [ BCA104 ]
td => [ Core Java ]
td => [ BCA105 ]
td => [ Math ]
td => [ BCA106 ]
td => [ Android ]
h3 => [ Query 9: Write a query in SQL to retrieve only even rows from the table? ]
strong => [ Sol: ]
strong => [ Syntax to find the Even rows from the table: ]
p => [ We can easily retrieve the even rows from the table by using the MOD function in the WHERE clause of the SELECT statement. ]
strong => [ Example: ]
p => [ The following query shows even rows of student table in the result: ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 102 ]
td => [ Balram ]
td => [ BCA104 ]
td => [ 78 ]
td => [ 19 ]
td => [ 104 ]
td => [ Chetan ]
td => [ BCA103 ]
td => [ 95 ]
td => [ 20 ]
td => [ 106 ]
td => [ Raman ]
td => [ BCA105 ]
td => [ 88 ]
td => [ 19 ]
h3 => [ Query 10: Write a query in SQL to retrieve only an odd number of rows from the table? ]
strong => [ Sol: ]
strong => [ Syntax to find the Odd number of rows from the table: ]
p => [ We can easily retrieve the odd rows from the table by using the MOD function in the WHERE clause of the SELECT statement. ]
strong => [ Example: ]
p => [ The following query shows odd rows of Student table in the result: ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 101 ]
td => [ Akhil ]
td => [ BCA101 ]
td => [ 85 ]
td => [ 20 ]
td => [ 103 ]
td => [ Bheem ]
td => [ BCA102 ]
td => [ 80 ]
td => [ 22 ]
td => [ 105 ]
td => [ Diksha ]
td => [ BCA104 ]
td => [ 99 ]
td => [ 20 ]
td => [ 107 ]
td => [ Sheetal ]
td => [ BCA103 ]
td => [ 98 ]
td => [ 22 ]
h3 => [ Query 11: Write a query in SQL to create a new table with the same data and structure as an existing table. ]
strong => [ Sol: ]
strong => [ Syntax: ]
strong => [ Example: The following query creates Student_Marks table from the existing Student table: ]
h3 => [ Query 12: Write a Query to find the Nth highest value of an integer column from the table. ]
strong => [ Sol: ]
strong => [ Syntax: ]
strong => [ Example: ]
p => [  The following query shows the 3 rd  highest marks from the Student table: ]
h3 => [ Query 13: Write a query in SQL to find the second-highest value of an integer column from the table? ]
strong => [ Sol: ]
strong => [ Syntax to find the second highest value of the integer column: ]
strong => [ Example: ]
p => [ The following query shows the second-highest marks from the student table: ]
h3 => [ Query 14: Write a query in Structured Query Language to view the current date and time. ]
strong => [ Sol: ]
h3 => [ Query 15: Write a query in SQL to show the record of the three highest values of an integer column from the table. ]
strong => [ Sol: ]
strong => [ Syntax: ]
strong => [ Example: ]
p => [ The following query shows the record of the three highest marks from the student table: ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 105 ]
td => [ Diksha ]
td => [ BCA104 ]
td => [ 99 ]
td => [ 20 ]
td => [ 107 ]
td => [ Sheetal ]
td => [ BCA103 ]
td => [ 98 ]
td => [ 22 ]
td => [ 104 ]
td => [ Chetan ]
td => [ BCA103 ]
td => [ 95 ]
td => [ 20 ]
h3 => [ Query 16: Write an SQL query to fetch the Stu_Name and Stu_Marks of those students whose age is 20. ]
strong => [ Sol: ]
p => [ For this operation, you have to use the WHERE clause in the SELECT statement. ]
strong => [ Output: ]
th => [ Stu_Name ]
th => [ Stu_Marks ]
td => [ Akhil ]
td => [ 85 ]
td => [ Chetan ]
td => [ 95 ]
td => [ Diksha ]
td => [ 99 ]
h3 => [ Query 17: Write a query to show the maximum marks of each subject. ]
strong => [ Sol: ]
p => [ For this operation, you need to use the MAX function with the GROUP BY statement. ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Subject_ID ]
th => [ MAX(Stu_Marks)  ]
td => [ 101 ]
td => [ BCA101 ]
td => [ 85 ]
td => [ 105 ]
td => [ BCA104 ]
td => [ 99 ]
td => [ 103 ]
td => [ BCA102 ]
td => [ 80 ]
td => [ 107 ]
td => [ BCA103 ]
td => [ 98 ]
td => [ 106 ]
td => [ BCA105 ]
td => [ 88 ]
h3 => [ Query 18: Write a query to show all the record of those students whose Marks is greater than 82 and age is 22 ]
strong => [ Sol: ]
p => [ Here, you have to use the AND operator between the two conditions in the WHERE clause. The AND operator returns those records which match the specified conditions. ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 107 ]
td => [ Sheetal ]
td => [ BCA103 ]
td => [ 98 ]
td => [ 22 ]
h3 => [ Query 19: Write a query to show the record of those students whose name begins with the 'm' character. ]
strong => [ Sol: ]
p => [ Here, you have to use the LIKE operator, which matches the given pattern in the table. ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 102 ]
td => [ Balram ]
td => [ BCA104 ]
td => [ 78 ]
td => [ 19 ]
td => [ 103 ]
td => [ Bheem ]
td => [ BCA102 ]
td => [ 80 ]
td => [ 22 ]
h3 => [ Query 20: Write a query to show all Subject_ID along with the number of students in there. ]
p => [  Sol:  The following query uses the GROUP BY statement with the COUNT function, which returns the number of students in each subject. ]
strong => [ Output: ]
th => [ Stu_Subject_ID ]
th => [ Number of Students ]
td => [ BCA101 ]
td => [ 1 ]
td => [ BCA104 ]
td => [ 2 ]
td => [ BCA102 ]
td => [ 1 ]
td => [ BCA103 ]
td => [ 2 ]
td => [ BCA105 ]
td => [ 1 ]
h3 => [ Query 21: Write a query in SQL to fetch the values of the Stu_Name column from the Student table in the upper case. ]
strong => [ Sol: ]
p => [  The following query uses the  UPPER  function with that column name whose values are to be shown in upper case: ]
h3 => [ Query 22: Write an SQL query to show the unique values of Stu_Age from the student table: ]
strong => [ Sol: ]
p => [  The following query uses the SQL  DISTINCT  function with the  Stu_Age  column: ]
h3 => [ Query 23: Write a Query in SQL to show the first N characters of the string column from the Student table. ]
strong => [ Sol: ]
strong => [ Syntax: ]
p => [ This syntax uses the SUBSTRING function, which shows the specific characters of the string. ]
strong => [ Example: ]
p => [ The following query shows the first two characters of Stu_Name from the Student table: ]
h3 => [ Query 24: Write a query in structured query language to view all student details from the Student table order by Stu_Name Descending. ]
strong => [ Sol: ]
p => [ Here, we have to use the ORDER BY clause, which shows the student details in the descending order of Stu_Name: ]
strong => [ Output: ]
th => [ Student_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
th => [ Stu_Marks ]
th => [ Stu_Age ]
td => [ 107 ]
td => [ Sheetal ]
td => [ BCA103 ]
td => [ 98 ]
td => [ 22 ]
td => [ 106 ]
td => [ Raman ]
td => [ BCA105 ]
td => [ 88 ]
td => [ 19 ]
td => [ 105 ]
td => [ Diksha ]
td => [ BCA104 ]
td => [ 99 ]
td => [ 20 ]
td => [ 104 ]
td => [ Chetan ]
td => [ BCA103 ]
td => [ 95 ]
td => [ 20 ]
td => [ 103 ]
td => [ Bheem ]
td => [ BCA102 ]
td => [ 80 ]
td => [ 22 ]
td => [ 102 ]
td => [ Balram ]
td => [ BCA104 ]
td => [ 78 ]
td => [ 19 ]
td => [ 101 ]
td => [ Akhil ]
td => [ BCA101 ]
td => [ 85 ]
td => [ 20 ]
h3 => [ Query 25: Write a query to show the values from one table that does not exist in another table in the same database. ]
strong => [ Sol: ]
strong => [ Syntax: ]
p => [ This syntax uses the SQL MINUS operator, which shows the values of Table1 that does not exist in Table2. ]
p => [  Example:  Let's take another table,  Student2,  consisting of 3 columns Bus_ID, Stu_Name, and Stu_Address. ]
th => [ Bus_ID ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
td => [ 1 ]
td => [ Ramesh ]
td => [ BCA101 ]
td => [ 6 ]
td => [ Chetan ]
td => [ BCA103 ]
td => [ 5 ]
td => [ Akhil ]
td => [ BCA101 ]
td => [ 4 ]
td => [ Bhanu ]
td => [ BCA103 ]
td => [ 3 ]
td => [ Balram ]
td => [ BCA104 ]
td => [ 2 ]
td => [ Ram ]
td => [ BCA105 ]
p => [ The following query shows only those rows of Stu_Name and Stu_Subject_ID of student table which does not exist in Student2 table: ]
strong => [ Output: ]
strong => [ Output: ]
th => [ Stu_Name ]
th => [ Stu_Subject_ID ]
td => [ Bheem ]
td => [ BCA102 ]
td => [ Diksha ]
td => [ BCA104 ]
td => [ Raman ]
td => [ BCA105 ]
td => [ Sheetal ]
td => [ BCA103 ]
h3 => [ Query 26: Write a query in SQL to show the three minimum values of the integer column from the table. ]
strong => [ Sol: ]
strong => [ Syntax: ]
strong => [ Example: ]
p => [ The following query shows the three minimum marks from the student table: ]
h3 => [ Query 27: Write a query to find the average of the integer column from the table. ]
strong => [ Sol: ]
strong => [ Syntax: ]
strong => [ Example: ]
p => [ The following query finds the average of marks of Student table: ]
h3 => [ Query 28: Write a query to create a View in Structured Query Language, ]
strong => [ Sol: ]
strong => [ Syntax: ]
strong => [ Example: ]
p => [ The following query creates the View of those students whose Marks is greater than 85 from the Student table: ]
p => [ You can see the view table by using the following query: ]
strong => [ Output: ]
th => [ Stu_Name ]
th => [ Stu_Age ]
td => [ Chetan ]
td => [ 20 ]
td => [ Diksha ]
td => [ 20 ]
td => [ Sheetal ]
td => [ 22 ]
h3 => [ Query 29: Write a Query to add another column in the existing table: ]
strong => [ Sol: ]
strong => [ Syntax: ]
p => [ If you want to add another column or field to the existing table, you must use the ALTER statement in SQL. ]
strong => [ Example: ]
p => [ The following query adds the Stu_Address column to the existing Student table: ]
h3 => [ Query 30: Write a query to transform any value into the specific SQL data type. ]
strong => [ Sol: ]
p => [ The following query converts the floating-point value into the integer type. ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
