
div => [ 
 ]
h1 => [ Top 35+ Most Asked Data Modeling Interview Questions and Answers ]
h3 => [ 1) What do you understand by a data model? ]
p => [ A data model is a set of different data elements. It specifies how they are related to each other and the real-world entity properties. Data models consist of entities. Here, entities are the objects and concepts whose data we want to track. These entities are stored in a table found in a database. For example, if a table consists of customers, products, manufacturers, buyers, and sellers, they are called potential entities. Each entity has attributes-details that the users want to track. For example, a customer's name is an attribute. ]
h3 => [ 2) What is data modeling? ]
p => [ Data modeling is creating data models to store in a database. It is a conceptual representation of data objects, the association between different data objects, and the rules. It also represents how the data flows. In other words, data modeling is creating a simplified diagram that contains data elements in the form of texts and symbols. ]
h3 => [ 3) What are the different types of data models? ]
p => [ There are mainly three types of data models: ]
strong => [ Physical data model: ]
strong => [ Logical data models: ]
strong => [ Conceptual data model: ]
h3 => [ 4) What do you understand by the fact and fact table in data modeling? ]
p => [ In data modeling, the fact is used to represent quantitative data. For example, the net amount which is due is a fact. On the other hand, a fact table contains numerical data and foreign keys from dimensional tables. ]
h3 => [ 5) What is a Table? ]
p => [ A table is a structure used to store data in the form of rows and columns. Columns are also known as fields and are used to show data in vertical alignment. Rows are also called records or tuples and represent data's horizontal alignment. ]
h3 => [ 6) What are the several design schema used in data modeling? ]
p => [ There are mainly two different types of data modeling schemes used in data modeling: ]
strong => [ Star Schema: ]
strong => [ Snowflake Schema: ]
h4 => [ Note: The star schema is an important case of the snowflake schema and is used more effectively for handling simpler queries. ]
h3 => [ 7) What do you understand by database normalization? ]
p => [ Database normalization is the process of structuring and designing the database to reduce data redundancy without losing integrity. It usually works on a relational database according to so-called normal forms. The main motive of database normalization is to reduce data redundancy and improve data integrity. Edgar F. Codd first proposed the process of database normalization as part of his relational model. ]
h3 => [ 8) What is the main usage of database normalization? ]
p => [ Following are the main motives of database normalization: ]
li => [ Database normalization is used to remove useless or redundant data. ]
li => [ It is also capable of reducing data complexity. ]
li => [ It ensures the relationships between the tables and the data residing in the tables. ]
li => [ It ensures data dependencies and also ensures that the data is stored logically. ]
h3 => [ 9) What is denormalization in a database? / What do you understand by Data Denormalization? What are its advantages and disadvantages? ]
p => [ Data Denormalization is a technique used on a previously-normalized database to increase performance. In this technique, redundant data is added to an already normalized database that enhances the read performance by sacrificing write performance. ]
p => [ In the denormalization database optimization technique, we add redundant data to one or more tables. This can help us avoid costly joins in a relational database. In other words, we can say that denormalization is the process of improving the read performance of a database by sacrificing some write performance, by adding redundant copies of data, or by grouping it. ]
strong => [ Advantages of Denormalization: ]
li => [ The biggest advantage of denormalization is that it retrieves data faster because we have to do fewer joins. ]
li => [ Queries used to retrieve data are generally simple and, therefore, have fewer chances of having bugs. ]
li => [ It is easy to handle since we need to look at fewer tables. ]
strong => [ Disadvantages of Denormalization: ]
li => [ The biggest disadvantage of denormalization is that its updates and inserts are more expensive. ]
li => [ Its updates and insert code are hard to write. ]
li => [ Data may be inconsistent and may require more storage. ]
h4 => [ Note: We must remember that denormalization does not mean not doing normalization. It is an optimization technique applied after doing normalization. ]
h3 => [ 10) When should we use denormalization? ]
p => [ Following are some situations when we have to use denormalization: ]
li => [ Denormalization is used when we have to maintain the history, and there is a lot of involvement of the table while retrieving data. It is also used to construct a data warehouse. ]
li => [ It is used to improve query performance. Sometimes we have to use queries that may require multiple tables to access data we frequently need. ]
li => [ It is used to compute commonly-needed values upfront. Sometimes we require some values ready-computed, so we don't have to generate them in real-time. ]
h3 => [ 11) What do you understand by dimension and attribute? ]
p => [ Dimensions are used to represent qualitative data. For example, product, class, plan, etc., are dimensions. On the other hand, an attribute is a value that a dimension contains. A dimension table has textual or descriptive attributes. For example, the product category and product name are two attributes of the product dimension table. ]
h3 => [ 12) What do you understand by data sparsity? ]
p => [ Data sparsity is a term used to specify the phenomenon of not observing enough data in a dataset. It specifies how much data you have for the entity/ dimension of the model. ]
h3 => [ 13) What is the primary key? / What is a primary key constraint? ]
p => [ The primary key or primary key constraint is a column or group that unequally identifies every row in the table. The primary key constraint is imposed on the column data to avoid null and duplicate values. The primary key value must not be null. Every table must contain one primary key. ]
p => [  For example,  Social security number, bank account number, bank routing number, phone number, Aadhar number, etc. ]
h3 => [ 14) What is a foreign key? / What is a foreign key constraint? ]
p => [ A foreign key is a group of attributes used to link parent and child tables. The parent table has a primary key, and a foreign key constraint is imposed on a column in the child table. The foreign key column value in the child table will always refer to primary key values in the parent table. ]
p => [ It means that the value of the foreign key column available in the child table refers to the primary key's value in the parent table. ]
h3 => [ 15) What is a composite primary key? / What is a composite primary key constraint? ]
p => [ Composite primary key or composite primary key constraint specifies a case when more than one column is a part of the primary key. This is called a composite primary key constraint. ]
h3 => [ 16) What is a composite foreign key? / What is a composite foreign key constraint? ]
p => [ Composite foreign key or composite foreign key constraint specifies a case when a group of columns is available in a foreign key. This is called a composite foreign key constraint. ]
h3 => [ 17) What do you understand by data mart? ]
p => [ A data mart is a condensed version of a data warehouse. This is designed to use by a specific department, unit, or set of users in an organization. For example, marketing, sales, HR, finance, etc. ]
h3 => [ 18) What do you understand by surrogate key? What are the benefits of using the surrogate key? ]
p => [ A surrogate key is a unique key in the database used for an entity in the client's business or an object within the database. This is used when we cannot use natural keys to create a unique primary table key. In this case, the data modeler or architect decides to use surrogate or helping keys for a table in the LDM. That's why surrogate keys are also known as helping keys. A surrogate key is a substitute for natural keys. ]
strong => [ Following are some benefits of using surrogate keys: ]
li => [ Surrogate keys are useful for creating SQL queries, uniquely identifying a record and good performance. ]
li => [ Surrogate keys consist of numeric data types that provide excellent performance during data processing and business queries. ]
li => [ Surrogate keys do not change while the row exists. ]
li => [ Natural keys can be changed in the source. For example, migration to a new system, making them useless in the data warehouse. That's why surrogate keys are used. ]
li => [ If we use surrogate keys and share them across tables, we can automate the code, making the ETL process simpler. ]
h3 => [ 19) What are the different types of normalization used in Data Modeling? ]
p => [ In Data Modeling, the following five types of normalization are generally used: ]
li => [ First normal form ]
li => [ Second normal form ]
li => [ Third normal forms ]
li => [ Boyce-Codd's fourth normal forms ]
li => [ Fifth normal forms ]
h3 => [ 20) What are the important types of relationships in a data model? ]
p => [ There are three types of relationships in a data model: ]
li => [ Identifying Relationship ]
li => [ Non-Identifying Relationship ]
li => [ Self-Recursive Relationship ]
h3 => [ 21) What is forward data engineering? ]
p => [ Forward data engineering or forward engineering is used to automatically generate or translate a logical model into a physical model. ]
h3 => [ 22) What do you understand by discrete and continuous data? ]
p => [ Discreet data is a type of data that is finite or defined. It doesn't change. For example, gender, telephone numbers, identity number. On the other hand, continuous data is a type of data that changes in a continuous and ordered manner. For example, age, time, etc. ]
h3 => [ 23) What do you understand by an identifying relationship in DBMS? ]
p => [ In DBMS, an identifying relationship is a relationship between two entities in which an instance of a child entity is identified through its association with a parent entity. The identifying relationship specifies that the child entity is dependent on the parent entity for its identity and cannot exist without it. Generally, parent and child tables are present in a data model and are connected by a relationship line. ]
h3 => [ 24) What is the full form of PDaP? ]
p => [ In DBMS, PDaP stands for Praedico Data Platform. It is a data cube for storing data as a summary. The data in PDaP is stored so that the users can report it with ease. The biggest advantage of PDaP is that it acts as a data cube for storing data as a summary and helps users analyze data quickly. ]
h3 => [ 25) What do you mean by a non-identifying relationship? ]
p => [ A non-identifying relationship is a relationship between two entities in which an instance of the child entity is not identified through its association with a parent entity. In this case, the child entity is not dependent on the parent entity and can exist without it. This relationship is drawn by dotted lines by connecting these two tables. ]
h3 => [ 26) What is Business Intelligence, and what is its usage? ]
p => [ Business Intelligence or BI is a set of technology-driven processes, architectures, and technologies that convert raw data into meaningful information that can be beneficial and profitable for business. It is a suite of software and services that transforms data into actionable intelligence and knowledge. The biggest advantage of Business Intelligence is that it helps executives, managers, and workers to make smart business actions by using informed business decisions. ]
h3 => [ 27) What is metadata? What are its different types? ]
p => [ Metadata is data that provides information about other data. It gives information about other data but not the content of the data, for example, the text of a message or the image itself. ]
p => [ It describes the data about data and shows what type of data is stored in the database system. ]
p => [  Descriptive metadata:  The descriptive metadata provides descriptive information about a resource. It is mainly used for discovery and identification. The main elements of descriptive metadata are title, abstract, author, keywords, etc. Following is a list of several distinct types of metadata: ]
p => [  Administrative metadata:  Administrative metadata is used to provide information to manage a resource, like a resource type, permissions, and when and how it was created. ]
p => [  Structural metadata:  The structural metadata specifies data containers and indicates how compound objects are put together. It also describes the types, versions, relationships, and other characteristics of digital materials. For example, how pages are ordered to form chapters. ]
p => [  Reference metadata:  The reference metadata provides information about the contents and quality of statistical data. ]
p => [  Statistical metadata:  Statistical metadata describes processes that collect, process, or produce statistical data. It is also called process data. ]
p => [  Legal metadata:  The legal metadata provides information about the creator, copyright holder, and public licensing. ]
h3 => [ 28) What is Microsoft Sequence Clustering algorithm? ]
p => [ Microsoft Sequence Clustering algorithm is a unique algorithm used to combine sequence analysis with clustering. This algorithm collects similar paths or paths related to each other and sequences of data having events. After collecting the most common sequences, this algorithm performs clustering to find similar sequences. ]
h3 => [ 29) What is an analysis service in Data Modeling? ]
p => [ Analysis service is a product of Microsoft Azure used in Data Modeling. It is a fully managed platform as a service (PaaS) that provides enterprise-grade data models in the cloud. It provides a combined view of the data used in data mining or OLAP. The analysis services use an advanced mashup and modeling features to combine data from multiple data sources, define metrics, and secure data in a single, trusted tabular semantic data model. The biggest advantage of using an analysis service is that it provides users with an easier and faster way to perform ad hoc data analysis using Power BI and Excel tools. ]
h3 => [ 30) What is data mart? What are the key features of a data mart? ]
p => [ A data mart is a subset of a data warehouse. It mainly focuses on a specific part of the business, department, or subject area. It provides specific data to a defined group of users within an organization. It is the best solution for a specific business area as it facilitates the users to quickly access important data without wasting time searching through the entire data warehouse. Every big organization has a data mart for a specific department in the business, such as finance, sales, marketing, etc. ]
strong => [ Key features of a data mart: ]
li => [ A data mart mainly focuses on a specific subject matter or area of the business unit. ]
li => [ It is a subset of a data warehouse and works as a mini-data warehouse that holds aggregated data. ]
li => [ In a data mart, data is limited in scope. ]
li => [ It generally uses a star schema or similar structure to hold data. That's why it is faster to retrieve data from it. ]
h3 => [ 31) What do you understand by the time series algorithm? ]
p => [ Time Series algorithm is a tool of Microsoft that provides an optimized set of multiple algorithms for forecasting continuous values, such as product sales over time. Time series algorithm is better than other Microsoft algorithms such as decision trees because other Microsoft algorithms, like decision trees, require additional columns of new information as input to predict a trend. In contrast, the time series model does not need these input types. The time series model can predict trends based only on the original dataset used to create the model. It also facilitates us to add new data to the model when we make a prediction and automatically add the new data in the trend analysis. ]
h3 => [ 32) What is a data warehouse, and what is data warehousing? ]
p => [ A data warehouse is a repository of electronically stored data of an organization extracted from operational systems and made available for ad-hoc queries and scheduled reporting. It is a data management system designed to enable and support business intelligence activities, such as analytics. ]
p => [ The main purpose of a data warehouse is to perform queries and analyze the data. It contains a large amount of historical data usually derived from various sources such as application log files and transaction applications. It centralizes and consolidates a large amount of data from multiple sources. Its analytical capabilities allow an organization to derive valuable business insights from their data and help in decision-making. It contains valuable data that data scientists and business analysts can use to improve and enhance the business. Because of these capabilities, a data warehouse is called a "single source of truth" for an organization. ]
p => [  Data warehousing  is a process for collecting and managing data derived from various sources such as application log files and transaction applications. ]
p => [ Data warehousing is mainly used in the BI system built for data analysis and reporting. In this process, data warehousing collects and analyses data from multiple sources, allowing an organization to derive valuable business insights from their data and help in decision-making. This is very useful for data scientists and business analysts to improve and enhance businesses. ]
h3 => [ 33) What are the key features of a data warehouse? ]
p => [ Following are the key features of a data warehouse: ]
li => [ A data warehouse is developed by collecting and combining data from multiple heterogeneous sources, such as flat files and relational databases, making it the best thing for data analysis. ]
li => [ A data warehouse is subject-oriented. It provides data for a specific subject instead of the whole ongoing operations of an organization. For example, it provides data about product information, sales data, customer and supplier details, etc. ]
li => [ It is time-variant. It provides information from a specific historical point of time to categorize the data with a particular time frame. ]
li => [ A data warehouse is separate from an operational database. It is non-volatile. The previous data is not omitted whenever we add the new data to it. If you make any regular changes in the operational database, it is not seen in the data warehouse. ]
h3 => [ 34) What is Bitmap Indexing? What is the requirement of Bitmap Indexing? Explain with an example. ]
p => [ Bitmap Indexing is a special type of database indexing that uses bitmaps (bit arrays). This is used to answer queries by executing bitwise operations. This technique is mainly used for huge databases when the column is of low cardinality, and these columns are most frequently used in the query. ]
strong => [ Requirement of Bitmap Indexing: ]
p => [ Let's see an example to understand clearly the requirement of Bitmap Indexing. Suppose there is a company with an employee table with entries like EmpNo, EmpName, Job, New_Emp, and salary. In this company, the employees are hired once in the year, so it is obvious that the table will be updated very less and will remain static most of the time, but the columns will be frequently used in queries to retrieve data like, No. of female employees in the company, etc. In this case, we need a file organization method that must be extremely fast to give quick results. But any of the traditional file organization methods are not that fast. We go for a better method of storing and retrieving data called Bitmap Indexing. ]
h3 => [ 35) What is the key difference between a Data Mart and a Data Warehouse? ]
p => [ As we know, both Data Mart and Data Warehouse are used to store the data. The main difference between Data Mart and Data Warehouse is that Data Warehouse is the type of database which is data-oriented. On the other hand, Data Mart is the type of database that is project-oriented. Let's see the key differences between a Data Mart and a Data Warehouse in the following table: ]
th => [ Data Mart ]
th => [ Data Warehouse ]
td => [ A data mart is a subset of a data warehouse. It is small in size. ]
td => [ A Data Warehouse is a superset of a Data Mart. It is huge in size. ]
td => [ Data marts are used to provide specific data access to users. So, it is easy for users to fetch data quickly. ]
td => [ Data Warehouse is very big in size, so it may be complicated and time-consuming to retrieve specific data from here. ]
td => [ Generally, a Data Mart is less than 100 GB. ]
td => [ A Data Warehouse is usually larger than 100 GB and often a terabyte or more. ]
td => [ It mainly focuses on a single subject area of business. ]
td => [ A Data Warehouse is spread very wide and ranges across multiple areas and multiple areas of businesses. ]
td => [ Data Mart follows the bottom-up model. ]
td => [ Data Warehouse follows a top-down model. ]
td => [ In Data Mart, the data comes from one data source. ]
td => [ In Data Warehouse, data comes from more than one heterogeneous data source. ]
td => [ A Data Mart is used to make tactical decisions for business growth. ]
td => [ A Data Warehouse helps business owners to take strategic decisions. ]
td => [ A Data Mart is limited in scope. ]
td => [ A Data Warehouse is large in scope. ]
td => [ Data Mart is a decentralized system. ]
td => [ Data Warehouse is a centralized system. ]
td => [ In Data Mart, denormalization takes place at a very high level. ]
td => [ In Data Warehouse, denormalization takes place very lightly. ]
td => [ An organization can easily build a Data Mart. ]
td => [ It isn't easy to build a Data Warehouse. ]
td => [ Data Mart mainly uses Star schema and snowflake schema. ]
td => [ Fact constellation schema is generally used in Data Warehouse. ]
td => [ Data Mart is project-oriented. ]
td => [ Data Warehouse is data-oriented. ]
td => [ Data Mart is not flexible. ]
td => [ Data Warehouse is flexible. ]
td => [ A Data Mart has a short life span than Data Warehouse. ]
td => [ The life span of a Data Warehouse is long. ]
td => [ In Data Mart, data is stored in summarized form, so it requires less space than Data Warehouse. ]
td => [ In Data Warehouse, data is stored in detailed form. That's why it requires a huge space. ]
h3 => [ 36) What is Junk Dimension in Data Warehousing? ]
p => [ In Data Warehousing, Junk Dimension is a dimension table that consists of attributes that do not belong in the fact table or any of the existing dimension tables. It combines two or more related cardinalities into one dimension. These attributes may usually be text or various flags, for example, non-generic comments or just simple yes/no or true/false indicators. It is either Boolean or flag values. By combining these indicator fields into a single dimension, we only need to build a single dimension table and the number of fields in the fact table. It also decreases the size of the fact table. ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
