
div => [ 
 ]
h1 => [ PouchDB Interview Question ]
h3 => [ 1) What is PouchDB?  ]
p => [ PouchDB is an open-source "in-browser" database API written in JavaScript. It is modeled after CouchDB(a NoSQL database that powers npm). It facilitates you to build applications that work offline and online by using this API. PouchDB uses WebSQL and IndexedDB internally to store the data.  ]
p => [  For more information:   Click Here 
 ]
h3 => [ 2) How does PouchDB work? ]
p => [ PouchDB stores data locally using WebSQL and IndexedDB in the browser, when the application is offline. When the application back online, the data is synchronized with CouchDB and compatible servers.  ]
p => [ PouchDB facilitates you to communicate both local and remote databases seamlessly without facing any difference.  ]
h3 => [ 3) What are the most important features of PouchDB? ]
p => [ The most important features of PouchDB are given below: ]
p => [  Cross Browser:  PouchDB is cross-browser. The API provided by PouchDB works the same in every environment, so, a PouchDB application can be run in various browsers. ]
p => [  Light Weight:  PouchDB is a very light-weight API, it is also included easily just using a script tag. ]
p => [  Easy to Learn:  PouchDB is very easy to learn if you have a prior knowledge of any programming language. ]
p => [  Open Source:  PouchDB is an Open Source Application which is available on GitHub. ]
h3 => [ 4) Which are the browsers that support PouchDB? ]
p => [ Following are the main browsers that support PouchDB: ]
li => [ Firefox 29+ (Including Firefox OS and Firefox for Android) ]
li => [ Chrome 30+ ]
li => [ Safari 5+ ]
li => [ Internet Explorer 10+ ]
li => [ Opera 21+ ]
li => [ Android 4.0+ ]
li => [ iOS 7.1+ ]
li => [ Windows Phone 8+ ]
h3 => [ 5) What are the advantages of using PouchDB? ]
p => [ Advantages of using PouchDB: ]
li => [ PouchDB is extremely fast because it resides within the browser and you don't have any need to perform queries over the network. That's why it is fast.  ]
li => [ The data with any of the supported server can be synchronized and by doing so we can run apps both online and offline. ]
h3 => [ 6) How to install PouchDB on your system? ]
p => [ There are several ways to install PouchDB on your system but by using Node.js and npm is the easiest and efficient way to install PouchDB. ]
p => [  For more information:   Click Here 
 ]
h3 => [ 7) How to create a database in PouchDB? ]
p => [ A database is created very easily in PouchDB by using constructor.  ]
strong => [ Syntax: ]
p => [ You have to install Node.js and a PouchDB package is required using the require() method to create a database.  ]
strong => [ Example:  ]
p => [  For more information:   Click Here 
 ]
h3 => [ 8) What is the use of db.info() method in PouchDB? ]
p => [ The db.info() method is used to get the information about the database. This method also accepts a callback function.  ]
p => [ See the given example for retrieving data from the database using the info() method. Here the database name is my_database.  ]
strong => [ Example:  ]
p => [  For more information:   Click Here 
 ]
h3 => [ 9) How to delete a database created in PouchDB? ]
p => [ The db.destroy() method is used to destroy a database in PouchDB. ]
h3 => [ 10) How to use db.destroy() method with Node.js to delete a database? ]
p => [ Following is the syntax of using the db.destroy() method. It also accepts a callback function.  ]
strong => [ Syntax: ]
p => [ See the following example how to use db.destroy() method. ]
strong => [ Example:  ]
p => [  For more information:   Click Here 
 ]
h3 => [ 11) How to delete a remote database that is stored on a remotely server CouchDB? ]
p => [ Provide the path of the remotely database CouchDB in PouchDB constructor to delete a database that is stored on a remotely server CouchDB.  ]
strong => [ For example: ]
p => [  For more information:   Click Here 
 ]
h3 => [ 12) What is the use of db.put() method in PouchDB? ]
p => [ The db.put() method is used to create documents in PouchDB databases.  ]
strong => [ Syntax: ]
p => [ This method also supports callback function.  ]
p => [  For more information:   Click Here 
 ]
h3 => [ 13) How can you fetch the created document in PouchDB database? ]
p => [ The db.get() method is used to retrieve the documents created in PouchDB database. This method accepts the document id and an optional callback function. ]
strong => [ Syntax: ]
p => [  For more information:   Click Here 
 ]
h3 => [ 14) How can you update an existing document in PouchDB database? ]
p => [ Every time you create a document, a new field _rev is get generated. It is called revision marker. The _rev's value is a unique random number, which is changed every time we make changes to the document.  ]
p => [ The db.put() method is used along with _rev value to update a document.  ]
p => [  For more information:   Click Here 
 ]
h3 => [ 15) How can you delete a document in PouchDB? ]
p => [ The db.remove() method is used to delete the document created in PouchDB database. In this method, id and _rev are to be passed to delete an existing document as shown in the following code. This method accepts an optional callback function. The complete document can also be passed instead of id and _rev. ]
strong => [ Syntax: ]
p => [  For more information:   Click Here 
 ]
h3 => [ 16) What is Batch? How to create a batch in PouchDB? ]
p => [ Batch is an array of documents in PouchDB. When you use this method to create documents, it creates unique ids for all the documents in bulk if you not specifies the _id values.  ]
p => [ All the documents you have created in PouchDB can be stored in an array and can be passed as a parameter in this method. This method also accepts callback functions as a parameter.  ]
strong => [ Syntax: ]
p => [ To know how to create a batch, see the following link: ]
p => [  For more information:   Click Here 
 ]
h3 => [ 17) How to fetch the created batch in PouchDB database? ]
p => [ The allDocs() method is used to featch the multiple/bulk documents from the database. This method also accepts an optional callback function.  ]
strong => [ Syntax: ]
p => [  For more information:   Click Here 
 ]
h3 => [ 18) How to update an already created Batch in PouchDB database? ]
p => [ The bulkDocs() method is used to update an array of documents in PouchDB. To update a value of batch, you have to know the _id, _rev and the values that you want to update.  ]
p => [  For more information:   Click Here 
 ]
h3 => [ 19) How would you delete a batch in PouchDB?  ]
p => [ The bulkDocs() method is used also for deleting an array of documents. To delete a batch, you have to know the _id and _rev values of the documents.  ]
p => [  For more information:   Click Here 
 ]
h3 => [ 20) What is an attachment in PouchDB? ]
p => [ In PouchDB, an attachment is a binary object that can be attached to a document.  ]
h3 => [ 21) How can you add an attachent to a document in PouchDB? ]
p => [ The putAttachment() method is used to add an attachment to a document in PouchDB. You have to pass the document id, attachment id, MIME type along with the attachment. This method also accepts an optional callback function.  ]
strong => [ Syntax: ]
p => [  For more information:   Click Here 
 ]
h3 => [ 22) How can you retrieve a PouchDB added attachment? ]
p => [ The getAttachment() method is used to retrieve an attachment from the PouchDB document. This method always returns blob or buffer objects. You have to pass the document id and attachment id to use this method. This method also accepts an optional callback function.  ]
strong => [ Syntax: ]
p => [  For more information:   Click Here 
 ]
h3 => [ 23) How can you delete a PouchDB added attachment? ]
p => [ The removeAttachment() method is used to delete an attachment from PouchDB document. To use this method, you have to pass the document id, attachment id, and _rev value. This method also accepts an optional callback function. ]
strong => [ Syntax: ]
p => [  For more information:   Click Here 
 
 ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
