
div => [ 
 ]
h1 => [ JSP Interview Questions ]
p => [ There is a list of top 40 frequently asked JSP interview questions and answers for freshers and professionals. If you know any JSP interview question that has not been included here, post your question in the Ask Question section. ]
h3 => [ 1) What is JSP? ]
p => [ Java Server Pages technology (JSP) is a server-side programming language used to create a dynamic web page in the form of HyperText Markup Language (HTML). It is an extension to the servlet technology.  ]
p => [ A JSP page is internally converted into the servlet. JSP has access to the entire family of the Java API including JDBC API to access enterprise database. Hence, Java language syntax has been used in the java server pages (JSP). The JSP pages are more accessible to maintain than Servlet because we can separate designing and development. It provides some additional features such as Expression Language, Custom Tags, etc. ]
a => [ More details. ]
h3 => [ 2) What are the life-cycle methods for a JSP? ]
th => [ Method ]
th => [ Description ]
td => [ public void jspInit() ]
td => [ It is invoked only once, same as init method of the servlet. ]
td => [ public void _jspService(ServletRequest request,ServletResponse)throws ServletException,IOException ]
td => [  It is invoked at each request, same as service() method of the servlet.  ]
td => [ public void jspDestroy() ]
td => [ It is invoked only once, same as destroy() method of the servlet. ]
h3 => [ 3) List out some advantages of using JSP. ]
li => [ Better performance. ]
li => [ The compilation of JSP is done before it is processed by the server which eradicates the need for loading of interpreter and code script each time.  ]
li => [ JSP can also be used in combination with servlets. ]
h3 => [ 4) Give the syntax for JSP comments. ]
p => [ The syntax for JSP comments is: ]
h3 => [ 5) What is the difference between hide comment and output comment? ]
p => [ The JSP comment is called hide comment whereas HTML comment is called output comment. If a user views the source of the page, the JSP comment will not be shown whereas HTML comment will be displayed.  ]
h3 => [ 6) What are the JSP implicit objects? ]
p => [ JSP provides nine implicit objects by default. They are as follows: ]
th => [ Object ]
th => [ Type ]
td => [ 1) out ]
td => [ JspWriter ]
td => [ 2) request ]
td => [ HttpServletRequest ]
td => [ 3) response ]
td => [ HttpServletResponse ]
td => [ 4) config ]
td => [ ServletConfig ]
td => [ 5) session ]
td => [ HttpSession ]
td => [ 6) application ]
td => [ ServletContext ]
td => [ 7) pageContext ]
td => [ PageContext ]
td => [ 8) page ]
td => [ Object ]
td => [ 9) exception ]
td => [ Throwable ]
a => [ More details. ]
h3 => [ 7) What is the difference between include directive and include action? ]
th => [ include directive ]
th => [ include action ]
td => [ 1) The include directive includes the content at page translation time. ]
td => [ 1) The include action includes the content at request time. ]
td => [ 2) The include directive includes the original content of the page, so page size increases at runtime ]
td => [ 2) The include action doesn't include the original content rather invokes the include() method of Vendor provided class. ]
td => [ 3) It's better for static pages. ]
td => [ 3) 3) It's better for dynamic pages. ]
h3 => [ 8) Is JSP technology extensible?  ]
p => [ Yes. JSP technology is extensible through the development of custom actions, or tags, which are encapsulated in tag libraries. ]
h3 => [ 9) How can I implement a thread-safe JSP page? What are the advantages and Disadvantages of using it? ]
p => [ You can make your JSPs thread-safe by having them implement the SingleThreadModel interface. This is done by adding the directive &lt;%@ page isThreadSafe="false" %&gt; within your JSP page. ]
h3 => [ 10) How can I prevent the output of my JSP or Servlet pages from being cached by the browser? ]
h3 => [ (OR) How to disable caching on the back button of the browser? ]
h3 => [ 11) How can we handle the exceptions in JSP? ]
p => [ There are two ways to perform exception handling, one is by the errorPage element of page directive, and second is by the error-page element of the web.xml file. ]
a => [ More details. ]
h3 => [ 12) What are the two ways to include the result of another page. ? ]
p => [ There are two ways to include the result of another page: ]
a => [ include directive ]
a => [ include action ]
h3 => [ 13) How can we forward the request from JSP page to the servlet? ]
p => [ Yes of course! With the help of "forward action" tag, but we need to give the URL-pattern of the servlet. ]
a => [ forward action tag ]
h3 => [ 14) Can we use the exception implicit object in any JSP page? ]
p => [ No. The exception implicit object can only be used in the error page which defines it with the isErrorPage attribute of page directive. ]
a => [ More details. ]
h3 => [ 15) How is JSP used in the MVC model? ]
p => [ JSP is usually used for presentation in the MVC pattern (Model View Controller ), i.e., it plays the role of the view. The controller deals with calling the model and the business classes which in turn get the data, and this data is then presented to the JSP for rendering on to the client. ]
a => [ forward action tag ]
h3 => [ 16) What are context initialization parameters? ]
p => [ Context initialization parameters are specified by the &lt;context-param&gt; in the web.xml file, and these are initialization parameter for the whole application and not specific to any servlet or JSP. ]
a => [ More details. ]
h3 => [ 17) What are the different scope values for the &lt;jsp:useBean&gt; tag? ]
p => [ There are 4 values: ]
li => [ page ]
li => [ request ]
li => [ session ]
li => [ application ]
a => [ More details. ]
h3 => [ 18) What do JSP literals consist of? ]
li => [ Boolean ]
li => [ Integer ]
li => [ Floating point ]
li => [ String ]
li => [ Null ]
h3 => [ 19) What is the purpose of &lt;jsp:useBean&gt;? ]
p => [ The jsp:useBean action searches for the existence of the object with specified name. If not found, it creates one. ]
h3 => [ 20) What is the purpose of &lt;jsp:setProperty &gt;? ]
p => [ This action sets the properties of a bean. ]
h3 => [ 21) What is the purpose of &lt;jsp:getProperty &gt;? ]
p => [ This action retrieves the properties of a bean. ]
h3 => [ 22) List out the various scope values of JSP action. ]
p => [ The possible scope values are: ]
li => [ page ]
li => [ request ]
li => [ session ]
li => [ application ]
h3 => [ 23) What is the use of 'out' implicit object? ]
p => [ The object is used to give a response to contents.  ]
h3 => [ 24) Give the use of session object. ]
p => [ The object is used between the client requests for the tracking of client sessions. ]
h3 => [ 25) Give the use of exception object. ]
p => [ The object is used for the generation of a response to the errors thrown. ]
h3 => [ 26) What is the difference between ServletContext and PageContext?- ]
p => [ ServletContext gives the information about the container whereas PageContext gives the information about the Request. ]
h3 => [ 27) What is the difference in using request.getRequestDispatcher() and context.getRequestDispatcher()? ]
p => [ request.getRequestDispatcher(path) is used to create it we need to give the relative path of the resource whereas context.getRequestDispatcher(path)to create it we need to give the absolute path of the resource. ]
h3 => [ 28) What is EL in JSP? ]
p => [ The Expression Language(EL) is used in JSP to simplify the accessibility of objects. It provides many objects that can be used directly like param, requestScope, sessionScope, applicationScope, request, session, etc. ]
h3 => [ 29) What are the primary differences between the JSP custom tags and java beans?  ]
li => [ Custom tags can manipulate JSP content whereas beans cannot. ]
li => [ Complex operations can be reduced to a significantly simpler form with custom tags than with beans.  ]
li => [ Custom tags require quite a bit more work to set up than do beans.  ]
li => [ Custom tags are available only in JSP 1.1 and later, but beans can be used in all JSP 1.x versions. ]
h3 => [ 30) Can an interface be implemented in the JSP file?  ]
p => [ No. ]
h3 => [ 31) What is JSTL? ]
p => [ JSP Standard Tag Library is a library of predefined tags that ease the development of JSP. ]
a => [ More details. ]
h3 => [ 32) How many tags are provided in JSTL? ]
p => [ There is 5 type of JSTL tags. ]
li => [ core tags ]
li => [ sql tags ]
li => [ xml tags ]
li => [ internationalization tags ]
li => [ functions tags ]
a => [ More details. ]
h3 => [ 33) Which directive is used in JSP custom tag? ]
p => [ The JSP taglib directive. ]
h3 => [ 34) What are the three tags used in JSP bean development? ]
li => [ jsp:useBean ]
li => [ jsp:setProperty ]
li => [ jsp:getProperty ]
a => [ More details. ]
h3 => [ 35) How to disable session in JSP? ]
h3 => [ 36) List the various action tags used in JSP. ]
p => [ Following are the list of various action tags used in JSP: ]
li => [ jsp:forward: This action tag forwards the request and response to another resource. ]
li => [ jsp:include: This action tag is used to include another resource. ]
li => [ jsp:useBean: This action tag is used to create and locates bean object. ]
li => [ jsp:setProperty: This action tag is used to set the value of the property of the bean. ]
li => [ jsp:getProperty: This action tag is used to print the value of the property of the bean. ]
li => [ jsp:plugin: This action tag is used to embed another component such as the applet. ]
li => [ jsp:param: This action tag is used to set the parameter value. It is used in forward and includes mostly. ]
li => [ jsp:fallback: This action tag can be used to print the message if the plugin is working. ]
h3 => [ 37) Explain the steps for creating custom tags in JSP? ]
p => [ For creating any custom tag, we need to follow the following steps: ]
strong => [ Create the Tag handler class ]
strong => [ Create the TLD file ]
strong => [ Create the JSP file ]
h3 => [ 38) How can the applets be displayed in the JSP? Explain with an example. ]
p => [ The jsp:plugin action tag is used to embed an applet in the JSP file. The jsp:plugin action tag downloads plugin at client side to execute an applet or bean. ]
p => [ Example of displaying applet in JSP ]
h3 => [ 39) What is Expression language in JSP? ]
p => [ The Expression Language (EL) simplifies the accessibility of data stored in the Java Bean component, and other objects like request, session, application. ]
p => [ There are many implicit objects, operators and reserve words in EL.  ]
p => [ It is the newly added feature in JSP technology version 2.0. ]
h3 => [ 40) Explain various implicit objects in expression language. ]
th => [ Implicit Objects ]
th => [ Usage ]
td => [ pageScope ]
td => [ it maps the given attribute name with the value set in the page scope ]
td => [ requestScope ]
td => [ it maps the given attribute name with the value set in the request scope ]
td => [ sessionScope ]
td => [ it maps the given attribute name with the value set in the session scope ]
td => [ applicationScope ]
td => [ it maps the given attribute name with the value set in the application scope ]
td => [ param ]
td => [ it maps the request parameter to the single value ]
td => [ paramValues ]
td => [ it maps the request parameter to an array of values ]
td => [ header ]
td => [ it maps the request header name to the single value ]
td => [ headerValues ]
td => [ it maps the request header name to an array of values ]
td => [ cookie ]
td => [ it maps the given cookie name to the cookie value ]
td => [ initParam ]
td => [ it maps the initialization parameter ]
td => [ pageContext ]
td => [ it provides access to many objects request, session, etc. ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Java Multithreading Questions ]
a => [ Java String &amp; Exception Questions ]
a => [ Java Collection Interview Questions ]
a => [ JDBC Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
span => [ SQL Server Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
