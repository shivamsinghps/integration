
div => [ 
 ]
h1 => [ Top 70+ Most Asked CICS Interview Questions and Answers ]
h3 => [ 1) What is the full form of the term CICS? Why is it used? ]
p => [ The term CICS is an acronym that stands for Customer Information Control System. This is a type of system control software that controls all the online transactions of the management of IBM and also monitors telecommunications from IBM. The mainframe operating systems of IBM are time-sharing and batch. CICS is a type of processing mainly initiated by using a single request that can also affect one or more objects. The CICS was founded in the year 1969.  ]
h3 => [ 2) What is PPT in the CICS? What does it contain? ]
p => [ PPT is an acronym that stands for Processing Programming Table. In the CICS, PPT contains important information like a program's name, Mapset names, task use counter, language, size, the main storage address, map, etc.  ]
h3 => [ 3) What is the primary aspect of CICS? ]
p => [ CICS is mainly used to deal with the execution and development of online applications. The primary aspect of CICS is to provide great accessibility to the database along with the files within the database. It provides a communication channel through the terminal and makes the sending and receiving of formatted data easy.  ]
h3 => [ 4) What is the requirement of an Integrated CICS translator? ]
p => [ The Integrated CICS translator is mainly used for the following reasons: ]
li => [ If you have to work with a COBOL compiler, you will need it. It works with the Integrated CICS translator when we use it Fromcompiler option. ]
li => [ When the compiler faces CICS statements in the source program, it interfaces with the integrated CICS translator. ]
li => [ After that, the translator takes action on the CICS statements and goes back to the compiler to show what native language statements to generate. ]
li => [ In Integrated Translator, there is no restriction as compared to Separate Translator. ]
li => [ It can also handle native COBOL and embedded CICS statements in the Source Program. ]
h3 => [ 5) What is the priority of CICS jobs in an operating system? ]
p => [ CICS is called a batch job itself and runs on high priority in the operating system.  ]
h3 => [ 6) Which CICS command is used to access the current date and time? ]
p => [ The ASKTIME CICS command is used to access the current date and time. ]
h3 => [ 7) What is the difference between call and link in CICS? ]
p => [ The main difference between call and link in CICS is that in the case of a call, whenever we make changes to the called program, we also need to compile the calling program. In the case of a link, it is not required.  ]
h3 => [ 8) What do you understand by TCT and RCT in CICS? ]
p => [ The terms TCT and RCT are both used in CICS. TCT is an acronym that stands for Terminal Control Table. It is a compilation of all the respective terminals. On the other hand, RCT stands for Resource Control Table, and it is a compilation of plan names of DB2 along with the transaction identifiers.  ]
h3 => [ 9) What are the attribute values of Skipper and Stopper fields? ]
p => [ We can use ASKIP for the attribute value of the Skipper field, and for the stopper field, we can use PROT.  ]
h3 => [ 10) What is the difference between PCT and FCT?  ]
p => [ In CICS, PCT is an acronym that stands for Program Control Table. It consists of a complete list of transaction identifiers paired to respective corresponding programs. On the other hand, FCT is also an acronym for File Control Table. It consists of a complete list of all the files that have been used by CICS, along with their status and record length.  ]
h3 => [ 11) Which command is used to release a record on which exclusive control is gained? ]
p => [ The EXEC CICS UNLOCK END-EXEC command is used to release a record on which exclusive control is gained.  ]
h3 => [ 12) What is the difference between START and XCTL? ]
p => [ START is a command used to start a new task. It is an interval control command. On the other hand, XCTL is a command used to pass control to a program within the same task. It is a program control command.  ]
h3 => [ 13) What are the BMS options used in CICS?  ]
p => [ The BMS options used in CICS are: Minimum, Standard, and Full.  ]
h3 => [ 14) How can you set the MDT option to 'ON' status, even if data is not entered? ]
p => [ We can set the MDT option to 'ON' status, even if data is not entered, by mentioning the FSET option in DFHMDF or set it dynamically in the program using the FIELD+A attribute field.  ]
h3 => [ 15) What do you understand by a CICS task? ]
p => [ A CICS task is a process of one-time execution of a certain CICS transaction. This process starts when we enter a key into the transaction and press the enter key button. The execution process continues until the program returns the control to CICS. ]
h3 => [ 16) What is the use of the EXEC CICS HANDLE CONDITION command? ]
p => [ The EXEC CICS HANDLE CONDITION command specifies the paragraph or program label to which the control is to be passed if the "handle condition" occurs. ]
h3 => [ 17) What are the different important programs used in the CICS? ]
p => [ Following is a list of some important programs used in the CICS: ]
li => [ TCP ]
li => [ KCP ]
li => [ PCP ]
li => [ FCP ]
li => [ SCP ]
h3 => [ 18) What do you understand by CEMT? ]
p => [ CEMT is an acronym that stands for CICS Execute Master Terminal. It is an ID for system transactions and is mainly used to inquire and update the status of CICS environments and other system operations. We can easily manage transactions, tasks, files, programs, etc., and can also change the status of the resources. We can see all possible options by typing CEMT and pressing ENTER.  ]
h3 => [ 19) What do you understand by the term BMS in CICS? ]
p => [ BMS is an acronym that stands for Basic Mapping Support. CICS provides BMS to define and format the screen. The screen defined by using the BMS is called the MAP. The collections of all the screens are called the Mapset.  ]
h3 => [ 20) What are the most important control programs in CICS? ]
p => [ They provide unique advantages and make the CICS system highly flexible and maintainable. ]
strong => [ Following is the list of most important control programs of CICS: ]
strong => [ TCP ]
p => [ TCP is an acronym that stands for the Terminal Control Program. It is used to receive all the terminals' messages and request the CISC to initiate or start a specific task. It is also used to maintain the hardware communication requirements. ]
strong => [ KCP ]
p => [ KCP is called Task Control Program. It is used to control the execution of tasks and their related properties simultaneously. It is also used to handle all the issues related to multi-tasking. ]
strong => [ PCP ]
p => [ PCP is an acronym that stands for Program Control Program. It is used to locate and load programs for execution. It is also used to transfer the control between programs, and in the end, it returns the control to the CICS. ]
strong => [ FCP ]
p => [ FCP is an acronym that stands for File Control Program. It provides application programs with services like reading, inserting, updating, or deleting records in a file. It also keeps exclusive control over the records to maintain data integrity during record updates. ]
strong => [ SCP ]
p => [ SCP is an acronym that stands for Storage Control Program. It controls the allocation and de-allocation of storage within a CICS region. ]
h3 => [ 21) What are some important control tables in CICS? ]
p => [ CICS has some IBM-supplied CICS control tables that need to be updated accordingly with the application information for the successful execution of CICS application programs. ]
strong => [ Following is a list of some important control tables: ]
strong => [ TCT ]
p => [ TCT is an acronym that stands for Terminal Control Table. When we log in to a CICS terminal, we have to enter the TCT table. This table contains the terminal IDs that are connected to the current CICS region. Terminal Control Table, along with Terminal Control Program, recognizes the incoming data from the terminal. ]
strong => [ PCT ]
p => [ PCT stands for Program Control Table. It contains the Transaction IDs (TRANSID) and the corresponding program names or program IDs. Every PCT table has a unique Transaction ID or TRANSID. ]
strong => [ PPT ]
p => [ PPT stands for Processing Program Table. It contains the program name or Mapset name, Task Use Counter, Language, Size, the Main storage address, Load library address, etc. Every PPT table has a unique Program or Mapset name. ]
strong => [ FCT ]
p => [ FCT stands for File Control Table. It includes File names, File type, record length, etc. All the files used in a CICS program have to be declared in FCT, and they are opened and closed by CICS itself. ]
h3 => [ 22) What is COMMAREA, and what are the benefits of using it? ]
p => [ COMMAREA is the short and the most commonly used name for communication area. It is the name of the data area in which the data or information is transferred from one program to another program. It is a temporary storage area and is mainly used as a passing medium for data amongst multiple programs loaded by a set of transactions or a particular transaction. ]
p => [ COMMAREA is generally used along with the TRANSID option to send data back to the program which executes the Transaction ID so that the user can use it while executing that transid. ]
p => [ COMMAREA allows the maximum length of the data to pass through to be 64K. ]
h3 => [ 23) What is EIB in CICS? How can we use it? ]
p => [ In CICS, EIB is an acronym that stands for EXEC Interface Block. EIB is a control block that is loaded automatically by the CICS for every program. CICS automatically generates some system-related information and provides it to each task in the form of EIB. Every task has a unique EIB it exists for the duration of the task. It contains a set of system-related information corresponding to the task. Users can use all the fields of EIB in their application programs.  ]
h3 => [ 24) What is a transaction in the CICS? What is the use of transactions in the CICS? ]
p => [ In CICS, a transaction is a unit of processing initiated by a single request. This request is generally initiated from an end-user at a terminal, but it can also be initiated from a web page, a remote workstation program, or an application in another CICS system. It may also be triggered automatically at a predefined time. ]
strong => [ Some main uses of the transaction in the CICS are: ]
li => [ A transaction executes or starts a particular task. It acts as a unique identifier. ]
li => [ We can trigger a transaction concurrently from the different systems, but it cannot be done from the same systems. ]
li => [ A transaction is usually interactive processing initiated by a single request, but background transactions are possible. ]
li => [ A transaction is the type of four characters entry, and it doesn't allow any duplicates in the transaction names. ]
li => [ A transaction has one to one or many mappings to the program. It is executed when the transaction trigger takes place. ]
h3 => [ 25) What is the key difference between task and transaction in CICS? ]
p => [ In CICS, the key difference between task and transaction is that several users can invoke a transaction, but each user has to initiate their task. ]
h3 => [ 26) What would be the effect of including the TRANSID in the EXEC CICS RETURN command? ]
p => [ If we include the TRANSID in the EXEC CICS RETURN command, the next time the end-user presses an attention key, the CICS will start the transaction specified in the TRANSID option.  ]
h3 => [ 27) What are some generally used CICS programs? ]
p => [ Following is a list of some generally used CICS programs: ]
li => [ File Control Programs ]
li => [ Terminal Control Programs ]
li => [ Storage Control Programs ]
li => [ Task Control Programs etc. ]
h3 => [ 28) What information does the EIBRCODE contain in CICS? ]
p => [ In CICS, EIBRCODE is a field that indicates the application program whether the command was executed successfully or not or whether a CICS condition was raised or not. ]
h3 => [ 29) What are the types of processes that are used to create a MAP in CICS? ]
p => [ Following are the three types of processes that are used to create a MAP in CICS: ]
strong => [ DFHMDF: ]
strong => [ DFHMDI: ]
strong => [ DFHMSD: ]
h3 => [ 30) What do you understand by a 'Transid'? ]
p => [ Transid is a short form of a transaction identifier. This character code contains four letters that are used to invoke a task of CICS.  ]
h3 => [ 31) What is the difference between the INTO and the SET option in the EXEC CICS RECEIVE MAP command? ]
p => [ The key difference between the INTO and the SET option in the EXEC CICS RECEIVE MAP command is that the INTO option moves the TIOA's information into the reserved specified area. In contrast, the SET option returns the address of the TIOA to the specified BLL cell or "address-of" a linkage section.  ]
h3 => [ 32) What are the different types of DFHMDF present in the CICS set? ]
p => [ Following are some types of the DFHMDF present in the CICS set: ]
p => [  POS:  POS is the short form for the position in the CICS. The POS parameter is used to indicate the row and column position in the field relative to the upper left corner of the map position. ]
p => [  ATTRB:  ATTRB is the short form for the field attribute. Generally, the BMS field attribute is not required because the BMS always uses the default value of the auto-skip protection, normal intensity, and the modified tag. ]
p => [  Length:  The length is used to specify the characters present in the field. In the length type, the attribute bytes are not present, so each of the lengths occupies one more column compared to its length value. ]
p => [  Initial:  The initial type is also not required in the BMS. It is only used in the label and the title field that already has a constant value in the BMS. ]
p => [  Picout:  The picout is one of the definitions of the filed CHG and is used to tell the BMS what types of pictures are mainly used to generate the fields. The Picout is also used to edit the facilities of the COBOL or the PL/I when data is moved into the map. ]
p => [  GRPNAME and OCCURS:  GRPNAME and OCCURS options are one of the most complex forms. That's why they do not always appear in simple examples. The GRPNAME is mainly used to subdivide a map field within the program for later processing, and the OCCURS mainly helps us define adjacent. ]
h3 => [ 33) What is the name of some important fields in the EIB block of CICS?  ]
p => [ Following is a list of some important fields in the EIB block of CICS: ]
li => [ EIBCALEN ]
li => [ EIBRESP ]
li => [ EIBTASK ]
li => [ EIBRRCDE ]
li => [ EIBTIME ]
li => [ EIBDATE ]
h3 => [ 34) Is it possible to use dynamic calls in CICS? ]
p => [ Yes. It is possible to use dynamic calls in CICS. We can use dynamic calls in CICS. According to the procedure, the user has to define the call routine in a PPT, and the calling program uses the CALL identifier.  ]
h3 => [ 35) What would affect RECEIVE MAP when we press PF and PA key?  ]
p => [ When we press the PF key, the data transmission may happen on RECEIVE MAP. On the other hand, the data transmission will not happen when we press the PA key. ]
h3 => [ 36) How can you set the MDT option to 'ON' status, even if data is not entered? ]
p => [  We should mention the FSET option in DFHMDF to set the MDT option to  'ON'  status, even if data is not entered. Otherwise, we can set it dynamically in the program using  the FIELD+A  attribute field. ]
h3 => [ 37) How can we terminate a transaction? ]
p => [ We can use the command EXEC CICS SYNCPOINT and assume it as LUW. The Xn will not be terminated by using this command, but it will surely terminate the transaction.  ]
h3 => [ 38) What is the difference between SEND MAP MAPONLY and SEND MAP DATAONLY command? ]
p => [ The SEND MAP MAPONLY command is used to send the map alone, without any data. For example, it is used for sending Menu screens. On the other hand, the SEND MAP DATAONLY command sends data alone without sending the screen layout again. For example, it is used for refreshing the screen data.  ]
h3 => [ 39) Which CICS service transaction is used to gain accessibility to CICS control tables?  ]
p => [ CEDA is a CICS service transaction that is used to gain accessibility to control tables.  ]
h3 => [ 40) What is the difference between XCTL and START? ]
p => [ XCTL works as a medium through which we can pass the control through the identical task to another program. On the other hand, XCTL is a program control command.  ]
h3 => [ 41) What is the key difference between a PF and a PA key?  ]
p => [ A PF key is used to wake up the task and transmit modified data. On the other hand, a PA key is used only to wake up the task. ]
h3 => [ 42) What do you understand by a mapset? ]
p => [ Mapset is a collection of linked and edited maps to form a load module. It must have a PPT entry and can have names from 1 to 7 chars.  ]
h3 => [ 43) What is the use of ENQ and DEQ in CICS? ]
p => [ In CICS, ENQ and DEQ are the parts of task control commands used to make a resource serially recyclable.  ]
h3 => [ 44) What is the difference between an EXEC CICS XCTL and an EXEC CICS LINK command? ]
p => [ The EXEC CICS XCTL command transfers the control to an application program at the same logical level without expecting the control back. On the other hand, the EXEC CICS LINK command is used to pass the control to an application program at the next logical level with an expectation of the control back.  ]
h3 => [ 45) What are some situations when NEWCOPY is necessarily required in CICS? ]
p => [ In CICS, NEWCOPY is necessarily required in certain situations when a particular program has been run at least once or several times in CICS and then recompiled or changed.  ]
h3 => [ 46) Is it possible to use OCCURS in a BMS map? If yes, what are the issues you can face while using it? ]
p => [ Yes. It is possible to use OCCURS in a BMS map. For doing so, we have to redefine the input and output field of the copybook with wanted index sizes, which can later be referenced in the application program.  ]
h3 => [ 47) In which table the terminal id is registered?  ]
p => [ In CICS, the terminal id is registered in the Terminal Control Table. ]
h3 => [ 48) Can a CICS code be a part of a copybook? What would be the outcomes after compilation if we do so? ]
p => [ Yes, a CICS code can easily be a part of a copybook, but we have to do the reprocessing after the compilation process if we want to do so. ]
h3 => [ 49) In the case of multiple maps, how is the storage determined in the symbolic map? ]
p => [ If we have multiple maps and want to determine the storage in the symbolic map, then the largest map must be done first. ]
h3 => [ 50) What is the main usage of the CICS translator? ]
p => [ The CICS translator is mainly used to convert the EXEC CICS commands into call statements for a specific programming language.  ]
h3 => [ 51) What is the effect of using the TRANSID in the EXEC CICS RETURN command? ]
p => [ The effect of using the TRANSID in the EXEC CICS RETURN command is that the next time the end-user presses an attention key, the CICS will start the transaction specified in the TRANSID option.  ]
h3 => [ 52) How can you access the VSAM file using an alternate index? ]
p => [ We can access the VSAM file through the path. We have to declare a path as a form of FCT and then use the File Control Commands on it.  ]
h3 => [ 53) What is the meaning of BMS length of field = 0? ]
p => [ The BMS length of field = 0 specifies that the data was not entered in the field.  ]
h3 => [ 54) What is the main function of the EXEC CICS HANDLE CONDITION command? ]
p => [ The EXEC CICS HANDLE CONDITION command specifies the paragraph or program label to which we have to pass the control if the "handle condition" occurs.  ]
h3 => [ 55) What do you understand by an AICA ABEND? ]
p => [ The AICA ABEND is just a Runaway Task that is executed at a later stage.  ]
h3 => [ 56) What can you do if you don't want characters entered by the user to be folded to uppercase?  ]
p => [ If we don't want characters entered by the user to be folded to uppercase, we can use the ASIS option on RECEIVE. ]
h3 => [ 57) What is the key difference between the INTO and the SET option in the EXEC CICS RECEIVE MAP command? ]
p => [ In CICS, the INTO option is used to move the information in the TIOA into the reserved specified area. On the other hand, the SET option is used to return the address of the TIOA to the specified BLL cell or "address-of" a linkage section.  ]
h3 => [ 58) Can you access the ESDS files from CICS? ]
p => [ Yes, we can access the ESDS files straight from CICS.  ]
h3 => [ 59) What do you understand by the BUFFER option in RECEIVE? ]
p => [ The BUFFER option in RECEIVE brings the entire data stream from the terminal buffer. ]
h3 => [ 60) What is the difference between retrieving the system time with EIBTIME and ASKTIME command? ]
p => [ In CICS, the ASKTIME command requests the current date and time. On the other hand, the EIBTIME command gets the value at the task initiation time.  ]
h3 => [ 61) What is the main use of DFHMDF BMS macro in CICS? ]
p => [ In CICS, the DFHMDF BMS macro is mainly used to define fields, literal, and characteristics of a field.  ]
h3 => [ 62) What do you understand by MDT? What is the use of FRSET and FSET in MDT? ]
p => [ MDT is an acronym that stands for Modified Data Tag. MDT is used during an input operation. If you modify the field on the screen, then MDT acts as a bit of an attribute byte. ]
p => [ FRSET stands for Flag Reset. It is used to reset MDT and turns off the modified data tag in the attribute bytes for all the fields on the screen. If it once set on, whether by the user or the program, a modified data tag stays on until turned off explicitly, even over several screen transmissions. On the other hand, FSET turns on the modified data tag. On the other hand, FSET turns on the modified data tag. It is used to ensure that MDT transmits the field. FSET is used during an output operation. If you don't specify this, the field is sent only if the user changes it. ]
h3 => [ 63) How can you classify a CICS program? ]
p => [ We can classify a CICS program into the following types: ]
li => [ Conversational programs ]
li => [ Non-conversational ]
li => [ Pseudo Conversational programs ]
h3 => [ 64) What do you understand by the term conversational programs? ]
p => [ The conversational programs are the programs that require user intervention to complete the execution. In other words, we can say that the program that requires input from the user and displays the data on the screen after processing is called a conversational program. ]
p => [ The conversational programs are mainly used to send a message to the terminals and receive a response from the active users. For example, online applications always use the conversation between the users and the application program by using the send and receive command. ]
h3 => [ 65) What do you understand by the term non-conversational programs?  ]
p => [ The non-conversational programs are the programs that don't require any user intervention for execution. All the required inputs are available to the program when we start the execution. In other words, we can say that the programs used for displaying the reports or messages are called non-conversational programs. ]
p => [ The non-conventional programs are very similar to the batch program and run in batch mode. These programs are mainly used to display a sequence on the screen at the regular interval of time. ]
h3 => [ 66) What do you understand by the term pseudo-conversational programs? ]
p => [ The pseudo-conversational programs respond to user actions or events. It is a subtype of the conversational program which only runs when it is started or called by another program. It also needs certain actions of the users like hit enter etc. It is also called an event-based program.  ]
h3 => [ 67) What are the key differences between TSQ and TDQ in CICS? ]
p => [ Following is a list of key differences between TSQ and TDQ in CICS:  ]
th => [ TSQ ]
th => [ TDQ ]
td => [ TSQ is an acronym that stands for Temporary Storage Queues. ]
td => [ TDQ is an acronym that stands for Transient Data Queues. ]
td => [ Data within the temporary storage queue (TSQ) can be changed. ]
td => [ Data within the transient data queues (TDQ) cannot be changed. ]
td => [ We can read the data more than once in a temporary storage queue, and the records can be read randomly. ]
td => [ We can read the data only once in the transient data queue, and the records can be read only sequentially. ]
td => [ We can update an existing record in a TSQ. ]
td => [ We cannot update an existing record in a TDQ. ]
td => [ We cannot access TSQ in batch. ]
td => [ We can easily use TDQ in batch applications. ]
td => [ The names of TSQ are dynamically defined in the application program. ]
td => [ We have to define the name of TDQ in the DCT (Destination Control Table). ]
td => [ TSQ cannot start a CICS transaction automatically. ]
td => [ TDQ can start a CICS transaction automatically. ]
h3 => [ 68) How can you solve an ASRA ABEND? ]
p => [ To solve an ASRA ABEND, we have to start with the CEBR and then call for instructions on offsets.  ]
h3 => [ 69) How is the DSECT parameter used in BMS? ]
p => [ The DSECT parameter is used in BMS to give shape to a symbolic map. ]
h3 => [ 70) What is the default size of COMMAREA in CICS?  ]
p => [ The default size of COMMAREA in CICS is 65K.  ]
h3 => [ 71) How can you handle errors in CICS programs? ]
p => [ To handle errors in CICS programs, we have to check the EIBRESP first after calling the program. After that, an alternative option is used to put the HANDLE condition to use.  ]
h3 => [ 72) What do you understand by the error code AEIY? ]
p => [ AEIY is the error code for length. If the source data length is more than the receiving field, we see this error. ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
