
div => [ 
 ]
h1 => [ Spring Interview Questions ]
p => [ Spring interview questions and answers are frequently asked because it is now widely used framework to develop enterprise application in java. There are given a list of top 40 frequently asked spring interview questions. ]
h3 => [ 1) What is Spring? ]
p => [ It is a lightweight, loosely coupled and integrated framework for developing enterprise applications in java. ]
h3 => [ 2) What are the advantages of spring framework? ]
li => [ Predefined Templates ]
li => [ Loose Coupling ]
li => [ Easy to test ]
li => [ Lightweight ]
li => [ Fast Development ]
li => [ Powerful Abstraction ]
li => [ Declarative support ]
a => [ More details... ]
h3 => [ 3) What are the modules of spring framework? ]
li => [ Test ]
li => [ Spring Core Container ]
li => [ AOP, Aspects and Instrumentation ]
li => [ Data Access/Integration ]
li => [ Web ]
a => [ More details... ]
h3 => [ 4) What is IOC and DI? ]
p => [ IOC (Inversion of Control) and DI (Dependency Injection) is a design pattern to provide loose coupling. It removes the dependency from the program. ]
p => [ Let's write a code without following IOC and DI. ]
p => [ Now, there is dependency between Employee and Address because Employee is forced to use the same address instance. ]
p => [ Let's write the IOC or DI code. ]
p => [ Now, there is no dependency between Employee and Address because Employee is not forced to use the same address instance. It can use any address instance. ]
h3 => [ 5) What is the role of IOC container in spring? ]
p => [ IOC container is responsible to: ]
li => [ create the instance ]
li => [ configure the instance, and ]
li => [ assemble the dependencies ]
a => [ More details... ]
h3 => [ 6) What are the types of IOC container in spring? ]
p => [ There are two types of IOC containers in spring framework. ]
li => [ BeanFactory ]
li => [ ApplicationContext ]
a => [ More details... ]
h3 => [ 7) What is the difference between BeanFactory and ApplicationContext? ]
p => [  BeanFactory is the  basic container  whereas ApplicationContext is the  advanced container . ApplicationContext extends the BeanFactory interface. ApplicationContext provides more facilities than BeanFactory such as integration with spring AOP, message resource handling for i18n etc. ]
h3 => [ 8) What is the difference between constructor injection and setter injection? ]
th => [ No. ]
th => [ Constructor Injection ]
th => [ Setter Injection ]
td => [ 1) ]
td => [ No Partial Injection ]
td => [ Partial Injection ]
td => [ 2) ]
td => [ Desn't override the setter property ]
td => [ Overrides the constructor property if both are defined. ]
td => [ 3) ]
td => [ Creates new instance if any modification occurs ]
td => [ Doesn't create new instance if you change the property value ]
td => [ 4) ]
td => [ Better for too many properties ]
td => [ Better for few properties. ]
a => [ More details... ]
h3 => [ 9) What is autowiring in spring? What are the autowiring modes? ]
p => [ Autowiring enables the programmer to inject the bean automatically. We don't need to write explicit injection logic. ]
p => [ Let's see the code to inject bean using dependency injection. ]
p => [ The autowiring modes are given below: ]
th => [ No. ]
th => [ Mode ]
th => [ Description ]
td => [ 1) ]
td => [ no ]
td => [ this is the default mode, it means autowiring is not enabled. ]
td => [ 2) ]
td => [ byName ]
td => [ injects the bean based on the property name. It uses setter method. ]
td => [ 3) ]
td => [ byType ]
td => [ injects the bean based on the property type. It uses setter method. ]
td => [ 4) ]
td => [ constructor ]
td => [ It injects the bean using constructor ]
p => [ The "autodetect" mode is deprecated since spring 3. ]
h3 => [ 10) What are the different bean scopes in spring? ]
p => [ There are 5 bean scopes in spring framework. ]
th => [ No. ]
th => [ Scope ]
th => [ Description ]
td => [ 1) ]
td => [ singleton ]
td => [ The bean instance will be only once and same instance will be returned by the IOC container. It is the default scope. ]
td => [ 2) ]
td => [ prototype ]
td => [ The bean instance will be created each time when requested. ]
td => [ 3) ]
td => [ request ]
td => [ The bean instance will be created per HTTP request. ]
td => [ 4) ]
td => [ session ]
td => [ The bean instance will be created per HTTP session. ]
td => [ 5) ]
td => [ globalsession ]
td => [ The bean instance will be created per HTTP global session. It can be used in portlet context only. ]
h3 => [ 11) In which scenario, you will use singleton and prototype scope? ]
p => [  Singleton scope should be used with EJB  stateless session bean  and prototype scope with EJB  stateful session bean . ]
h3 => [ 12) What are the transaction management supports provided by spring? ]
p => [ Spring framework provides two type of transaction management supports: ]
b => [ Programmatic Transaction Management ]
b => [ Declarative Transaction Management ]
h2 => [ » Spring JDBC Interview Questions ]
h3 => [ 13) What are the advantages of JdbcTemplate in spring? ]
p => [  Less code : By using the JdbcTemplate class, you don't need to create connection,statement,start transaction,commit transaction and close connection to execute different queries. You can execute the query directly. ]
a => [ More details... ]
h3 => [ 14) What are classes for spring JDBC API? ]
li => [ JdbcTemplate ]
li => [ SimpleJdbcTemplate ]
li => [ NamedParameterJdbcTemplate ]
li => [ SimpleJdbcInsert ]
li => [ SimpleJdbcCall ]
a => [ More details... ]
h3 => [ 15) How can you fetch records by spring JdbcTemplate? ]
p => [  You can fetch records from the database by the  query method of JdbcTemplate . There are two interfaces to do this: ]
a => [ ResultSetExtractor ]
a => [ RowMapper ]
h3 => [ 16) What is the advantage of NamedParameterJdbcTemplate? ]
p => [ NamedParameterJdbcTemplate class is used to pass value to the named parameter. A named parameter is better than ? (question mark of PreparedStatement). ]
p => [  It is  better to remember . ]
a => [ More details... ]
h3 => [ 17) What is the advantage of SimpleJdbcTemplate? ]
p => [  The  SimpleJdbcTemplate  supports the feature of var-args and autoboxing. ]
a => [ More details... ]
h2 => [ » Spring AOP Interview Questions ]
h3 => [ 18) What is AOP? ]
p => [ AOP is an acronym for Aspect Oriented Programming. It is a methodology that divides the program logic into pieces or parts or concerns. ]
p => [ It increases the modularity and the key unit is Aspect. ]
a => [ More details... ]
h3 => [ 19) What are the advantages of spring AOP? ]
p => [  AOP enables you to dynamically add or remove concern before or after the business logic. It is  pluggable  and  easy to maintain . ]
a => [ More details... ]
h3 => [ 20) What are the AOP terminology? ]
p => [ AOP terminologies or concepts are as follows: ]
li => [ JoinPoint ]
li => [ Advice ]
li => [ Pointcut ]
li => [ Aspect ]
li => [ Introduction ]
li => [ Target Object ]
li => [ Interceptor ]
li => [ AOP Proxy ]
li => [ Weaving ]
a => [ More details... ]
h3 => [ 21) What is JoinPoint? ]
p => [ JoinPoint is any point in your program such as field access, method execution, exception handling etc. ]
h3 => [ 22) Does spring framework support all JoinPoints? ]
p => [ No, spring framework supports method execution joinpoint only. ]
h3 => [ 23) What is Advice? ]
p => [ Advice represents action taken by aspect. ]
h3 => [ 24) What are the types of advice in AOP? ]
p => [ There are 5 types of advices in spring AOP. ]
li => [ Before Advice ]
li => [ After Advice ]
li => [ After Returning Advice ]
li => [ Throws Advice ]
li => [ Around Advice ]
h3 => [ 25) What is Pointcut? ]
p => [ Pointcut is expression language of Spring AOP. ]
h3 => [ 26) What is Aspect? ]
p => [ Aspect is a class in spring AOP that contains advices and joinpoints. ]
h3 => [ 27) What is Introduction? ]
p => [ Introduction represents introduction of new fields and methods for a type. ]
h3 => [ 28) What is target object? ]
p => [ Target Object is a proxy object that is advised by one or more aspects. ]
h3 => [ 29) What is interceptor? ]
p => [ Interceptor is a class like aspect that contains one advice only. ]
h3 => [ 30) What is weaving? ]
p => [ Weaving is a process of linking aspect with other application. ]
h3 => [ 31) Does spring perform weaving at compile time? ]
p => [ No, spring framework performs weaving at runtime. ]
h3 => [ 32) What are the AOP implementation? ]
p => [ There are 3 AOP implementation. ]
li => [ Spring AOP ]
li => [ Apache AspectJ ]
li => [ JBoss AOP ]
h2 => [ » Spring MVC Interview Questions ]
h3 => [ 33) What is the front controller class of Spring MVC? ]
p => [  The  DispatcherServlet  class works as the front controller in Spring MVC. ]
a => [ More details... ]
h3 => [ 34) What does @Controller annotation? ]
p => [  The  @Controller  annotation marks the class as controller class. It is applied on the class. ]
h3 => [ 35) What does @RequestMapping annotation? ]
p => [  The  @RequestMapping  annotation maps the request with the method. It is applied on the method. ]
h3 => [ 36) What does the ViewResolver class? ]
p => [  The  View Resolver  class resolves the view component to be invoked for the request. It defines prefix and suffix properties to resolve the view component. ]
h3 => [ 37) Which ViewResolver class is widely used? ]
p => [  The  org.springframework.web.servlet.view.InternalResourceViewResolver  class is widely used. ]
h3 => [ 38) Does spring MVC provide validation support? ]
p => [ Yes. ]
h2 => [ Other Interview Questions ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Java Multithreading Questions ]
a => [ Java String &amp; Exception Questions ]
a => [ Java Collection Interview Questions ]
a => [ JDBC Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
span => [ SQL Server Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
