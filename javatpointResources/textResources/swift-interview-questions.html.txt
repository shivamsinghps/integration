
div => [ 
 ]
h1 => [ Swift Interview Questions  ]
p => [  A list of top frequently asked  Swift Interview Questions  and answers are given below. ]
h3 => [ 1) What is Swift? How is it different from Objective-C? ]
p => [ Swift and Objective-C both are used in iOS development but both are significantly different in terms of efficiency and usage.  ]
li => [ Swift is an open-source programming language developed by Apple platform and expanded to build on Linus while Objective-C is not an open-source programming language and is limited to Apple. ]
li => [ Swift syntax is easy, clear and brief. It makes API's easy to read and maintain while Objective-C is based on C language which is comparatively hard to use.  ]
li => [ Swift is more rational and precise that's why it has less number of code and easy to learn while Objective-C code is lengthy as double to Swift code. ]
li => [ Swift can be compiled as a dynamic framework while Objective-C cannot be compiled into static libraries and dynamic framework. ]
a => [ Click Here... ]
h3 => [ 2) What is the meaning of question mark "?" in Swift? ]
p => [ In Swift, question mark "?" is used in property declaration. It tells the compiler that this property is optional. The property may hold a value or not. It avoids runtime errors when accessing that property by using ?. This is useful in optional chaining and a variant of this example is in conditional clauses.  ]
strong => [ For example:  ]
h3 => [ 3) How can you make a property optional in Swift? ]
p => [ We have to declare a question mark ??' in the code to make a property optional. If a property doesn't have a value, then the symbol ? helps to avoid the runtime error. ]
h3 => [ 4) What are the Half Open Range operators in Swift? ]
p => [ Swift supports several types of operators. One of them is Half Open Range operator. The half open range operator specifies a range between two values a and b (a&lt;b) where b is not included. It is known as half open range operator because it contains its first value only not the final value. ]
p => [  To learn more on Swift operators:  Click Here... ]
h3 => [ 5) What are functions in Swift? ]
p => [ Functions are the set of codes used to perform specific task. In Swift programming language, functions are used to pass local as well global parameter values inside the function's call. ]
p => [ In Swift4, functions can be categorized in two types: ]
li => [ User Defined Functions ]
li => [ Built-in Functions (Library Functions) ]
p => [  To learn more functions in Swift:  Click Here... ]
h3 => [ 6) What is Nested Function in Swift? ]
p => [ A function inside a function is called a nested function.  ]
strong => [ Syntax: ]
p => [  To learn more about nested functions:  Click Here... ]
h3 => [ 7) Explain Enum in Swift. ]
p => [ Enum is also known as Swift Enumeration. Enum is a data type which contains a set of the related values. It is declared in a class and its values are accessed through the instance members of that class.  ]
strong => [ Syntax: ]
h3 => [ 8) What are Regular Expression and Responder Chain in Swift? ]
p => [  Regular Expression:  Regular expressions are the special string patterns that specify how to perform a search through a string. ]
p => [  Responder Chain:  Responder Chain is a hierarchy of objects that obtain the opportunity to respond to the events.  ]
h3 => [ 9) Explain Dictionary in Swift.  ]
p => [ Swift Dictionary is used to store the key-value pairs and access the value by using the key. It is just like hash tables in other programming languages. ]
p => [  To learn more about Swift dictionary:  Click Here... ]
h3 => [ 10) How would you define variables and constants in Swift programming language? ]
p => [  You have to declare variables and constants before using it. Constants are declared by using  let  keyword and variables by  var  keyword. ]
strong => [ Example: ]
h3 => [ 11) Explain the different features of Swift programming language? ]
p => [ Features of Swift programming language: ]
li => [ Swift is very easy to learn and precise to use. It provides a safe programming approach. ]
li => [ In Swift programming language, variables and constants must be initialized before use. ]
li => [ Automatic memory management. ]
strong => [ switch ]
strong => [ if ]
li => [ Swift follows Objective-C like syntax. ]
li => [ It checks Arrays and integers for overflow. ]
p => [  Read more features of Swift:  Click Here... ]
h3 => [ 12) What type of literals does Swift language have? ]
p => [ A Swift literal is a direct value of a variable or a constant. It may be a number, character or string. Literals are used to initialize or assign value to variables or constants.  ]
strong => [ Different types of literals are:  ]
li => [ Binary Literals ]
li => [ Octal Literals ]
li => [ Hexadecimal Literals ]
li => [ Decimal Literals ]
p => [  Learn more about Swift literals:  Click Here... ]
h3 => [ 13) What is floating point number in Swift? What are the different floating point numbers in Swift?  ]
p => [  Numbers with decimal values or fractional components are called floating numbers.  For example:  1.34 is a floating point number. Floating point types can represent a wider range of values than integer types. There are two signed floating point number:  ]
p => [  Double:  It represents a 64 bit floating point number. It is used when floating point values are very large. ]
p => [  Float:  It represents a 32 bit floating point number. It is used when floating point values does not need 64 bit precision. ]
h3 => [ 14) How can you write a comment in Swift? ]
p => [ In Swift programming language, single-line comments are started with double slashes (//). ]
strong => [ For example: ]
p => [  Multi-line comment:  Multiline comments are started with a forward-slash followed by an asterisk (/*) and end with an asterisk followed by a forward-slash (*/). ]
strong => [ For example: ]
p => [  Learn more about Swift syntax:  Click Here... ]
h3 => [ 15) What are the different control transfer statements used in Swift? ]
p => [ Swift language consists of following Control transfer statements: ]
li => [ Continue ]
li => [ Break ]
li => [ Fallthrough ]
li => [ Return ]
h3 => [ 16) What do you mean by Optional Chaining in Swift? ]
p => [ In Swift programming language, Optional Chaining is a process of querying and calling properties. You can chain multiple queries together, but if any link in the chain is nil then, the entire chain fails. ]
h3 => [ 17) What is lazy stored procedure in Swift and when is it used? ]
p => [ Lazy stored properties are used for a property whose initial values are not calculated until the first time it is used. A lazy stored property can be declared by writing the lazy modifier before its declaration. Lazy properties are useful when the initial value for a property is reliant on outside factors whose values are unknown.  ]
h3 => [ 18) What is the usage of switch statement in Swift language? ]
li => [ Switch statement are used as a substitute for the long if-else-if statements. ]
li => [ Switch statement supports any type of data, synchronizes them and also checks for equality. ]
li => [ Break is not required in switch statement because there is no fall through in switch statement. ]
li => [ Switch statement must have covered all possible values for your variable. ]
p => [  To read more about Swift switch statement:  Click Here... ]
h3 => [ 19) What is the use of break statement in Swift language? ]
p => [ The break statement is used within a loop where you have to immediately terminate a statement. It is also used to terminate a case in switch statement.  ]
p => [  To read more about Swift break statement:  Click Here... ]
h3 => [ 20) What is the use of continue statement in Swift loop? ]
p => [ The continue statement is used in Swift loop to change execution from its normal sequence. It stops currently executing statement and starts again at the beginning of the next iteration through the loop. ]
p => [  To read more about Swift continue statement:  Click Here... ]
h3 => [ 21) What are the different collection types available in Swift? ]
p => [ There are two varieties of collection types in Swift: ]
p => [  Array:  In Swift, you can create an array of single type or an array of multiple type. ]
p => [  Read more information about Swift array:  Click Here... ]
p => [  Dictionary:  In Swift, dictionary is similar to hash table in other programing language. You can store a key-value pair in a dictionary and access the value by using the key. ]
p => [  Read more information about Swift dictionary:  Click Here... ]
h3 => [ 22) What is Inheritance in Swift? ]
p => [ Inheritance is a process in which a class can inherit properties, methods and other characteristics from another class. Inheritance is supported in Swift programming language. There are two types of classes in Inheritance in Swift: ]
p => [  Sub class:  The class which inherits the properties from other class is called child class or sub class. ]
p => [  Super class:  The main class from where the subclass inherits the properties is known as parent class or super class. ]
p => [  Read more information about Swift inheritance:  Click Here... ]
