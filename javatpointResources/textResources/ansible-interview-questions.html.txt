
div => [ 
 ]
h1 => [ Ansible Interview Questions ]
p => [  A list of frequently asked  Ansible Interview Questions  and Answers are given below. ]
h3 => [ 1) What is Ansible? ]
p => [ Ansible is an open-source IT engine that automates application deployment, cloud provisioning, intra service orchestration, and other IT tools. ]
p => [  Ansible is very easy to deploy because it does not use any  agents  or  custom security  infrastructure on the client-side, and by pushing modules to the clients. These modules are executed locally on the client-side, and the output is pushed back to the Ansible server. It can easily connect to clients using  SSH-Keys . ]
h3 => [ 2) What are the uses of Ansible? ]
li => [ Ansible is free to use by everyone.  ]
li => [ Ansible is very consistent and lightweight, and no constraints regarding the operating system or underlying hardware are present. ]
strong => [ SSH ]
li => [ Ansible does not need any special system administrator skills to install and use it.  ]
li => [ Ansible has a smooth learning curve determined by the comprehensive documentation and easy to learn structure and configuration. ]
strong => [ plugins, inventories, modules, ]
strong => [ playbooks ]
h3 => [ 3) What is Ansible Tower? ]
p => [ Ansible Tower is like Ansible at a more enterprise level. It is the web-based solution for managing your organization with an easy user interface that provides a dashboard with all of the state summaries of all the hosts. And allows quick deployments, and monitors all configurations. ]
h3 => [ 4) What is Ansible Galaxy? ]
p => [  Ansible Galaxy is a galaxy website where users can share roles and to a command-line tool for  installing, creating,  and  managing  roles.  ]
p => [ Ansible Galaxy gives greater visibility to one of Ansible's most exciting features, such as application installation or reusable roles for server configuration. Lots of people share roles in the Ansible Galaxy.  ]
h3 => [ 5) What is Ansible Modules? ]
p => [ Ansible modules are discrete units of code which can be used from the command line or in a playbook task. ]
p => [ The modules also referred to as task plugins or library plugins in the Ansible. ]
p => [  Ansible ships with several modules that are called  module library , which can be executed directly or remote hosts through the playbook. ]
p => [  Users can also write their modules. These modules can control like  services, system resources, files,  or  packages,  etc. and handle executing system commands. ]
h3 => [ 6) How does Ansible work? ]
p => [  Ansible works by connecting to the nodes and pushing out a small program called  Ansible modules  to them. Then Ansible executed these modules and removed them after finished. The library of the modules can reside on any machine, and there are no  daemons, servers,  or  databases  required. ]
p => [  The  Management Node  is the controlling node that controls the entire execution of the playbook. The  inventory  files provide the list of hosts where the Ansible modules need to be run. The  Management Node  makes an  SSH  connection and executes the small modules on the  host's  machine and install the software. ]
h3 => [ 7) What are the Ansible Server requirements? ]
li => [ If you are a windows user, then you required to have a virtual machine in which Linux should be installed. ]
li => [ And it requires python 2.6 version or higher. ]
h3 => [ 8) What are the variables in Ansible? ]
p => [ The variable is very similar to using the variables in a programming language. It helps you to assign a value to a variable and use it anywhere in the playbook. You can put the conditions around the value of the variables and use them in the playbook accordingly.  ]
h3 => [ 9) What is Ansible Task?  ]
p => [ Ansible Task allows us to break up bits of configuration policy into smaller files. These are the block of code which can be used to automate any process. ]
h3 => [ 10) Explain the basic terminologies or concepts in Ansible? ]
p => [ Some basic terms which are commonly used in Ansible, such as: ]
strong => [ Controller Machine: ]
strong => [ Inventory: ]
strong => [ Playbook: ]
strong => [ Task: ]
strong => [ Module: ]
strong => [ Role: ]
strong => [ Play: ]
strong => [ Facts: ]
strong => [ Handlers: ]
h3 => [ 11) What are Ad-hoc commands?  ]
p => [ Ad-hoc commands are simple one-line commands which are used to perform a certain task. You can think of Ad-hoc commands as an alternative to writing playbooks. An example of an Ad-hoc command, as shown as follows: ]
p => [ The above Ad-hoc command accesses the NetScaler module to disable the server. ]
h3 => [ 12) How would you access a variable of the first host in a group? ]
p => [ Executes the following commands to access a variable of the first host in a group: ]
p => [ This command is accessing the hostname of the first machine in the webservers group. If you are doing this by a template, then use the jinja2 '#set', or you can use set_fact. ]
h3 => [ 13) How to keep secrete data in a playbook? ]
p => [ The following command is used to keep verbose output but hide the sensitive information from others who would like to be able to see the output. ]
p => [ Also, the no_log attribute can apply to an entire play. ]
h3 => [ 14) What are Ansible Vaults, and why are they used?  ]
p => [ Ansible Vault is a feature that allows keeping all your secrets safe. It can encrypt entire files, YAML playbooks, or even a few variables. It provides a facility where you also can integrate the sensitive data into your playbooks. ]
p => [ Vault is implemented with file-level granularity, where the files are completely encrypted or unencrypted. It uses the same password for encrypting as well as decrypt the data, which makes Ansible vault user-friendly. ]
h3 => [ 15) What is the way to access shell environment variables in Ansible?  ]
p => [  In Ansible, if you want to access existing variables, then you need to use the ' env ' lookup plugin. ]
p => [  For example,  you want to access the value of the Office environment on the management machine, as shown in the following command, such as: ]
h3 => [ 16) Who you can copy file recursively onto a target host? ]
p => [ The "copy" module has a recursive parameter. Therefore, if you want to perform more efficient for a large number of files, then the "synchronize" module is the best option for doing this task. ]
h3 => [ 17) How do you set the path or any other environment variable for a task? ]
p => [ The environment variables can be set by using the 'environment' keyword. It can be set for either a task or an entire playbook. Follow the following code to see how do set the path, such as: ]
h3 => [ 18) How can you see all variables for a host? ]
p => [  You can see all the variables using the  host vary  variable. It stores host variables with the hostname as key. For example, to look at the variables defined for localhost, you can run the following command, such as: ]
h3 => [ 19) What is the difference between the Variable Name and Environment Variable in Ansible? ]
th => [ Variable Name ]
th => [ Environment Variable ]
td => [ You need to add strings to create variable names. ]
td => [ You need existing variables to access environment variables. ]
td => [ You can easily create multiple variable names by adding strings. ]
td => [ To create environment variables, you must refer to the advanced Ansible playbook. ]
td => [ Use the IPV4 address for variable names. ]
td => [ Use {{ansible_env.SOME_VARIABLE}} for remote environment variables. ]
h3 => [ 20) What is RedHat Ansible? ]
p => [ Ansible and Ansible Tower by Red Hat, both are the end to end complete automation platforms which are capable of providing the following features or functionalities: ]
li => [ Provisioning ]
li => [ Deploying applications ]
li => [ Orchestrating workflows ]
li => [ Manage IT systems ]
li => [ Configuration of IT systems ]
li => [ Networks ]
li => [ Applications ]
p => [ All of these activities are dealing with Ansible, where it can help the business to solve real-time business problems. ]
a => [ Interview Tips ]
a => [ Job/HR Interview Questions ]
a => [ Company Interview Questions &amp; Procedure ]
a => [ JavaScript Interview Questions ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
a => [ jQuery Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
