
div => [ 
 ]
h1 => [ Software Engineering Interview Questions ]
p => [  A list of frequently asked  Software Engineering Interview Questions  and Answers are given below. ]
h3 => [ 1) What is Software Engineering? ]
p => [ Software engineering is defined as the function of the systematic, disciplined, quantified approach to the development, operations, and maintenance of software. ]
a => [ Click here for more information ]
h3 => [ 2) What are the elements to be considered in the System Model Construction? ]
p => [ Elements to be considered in the System Model Construction are: ]
li => [ Assumption ]
li => [ Simplification ]
li => [ Limitation ]
li => [ Constraints ]
li => [ Preferences ]
h3 => [ 3) What does a System Engineering Model accomplish? ]
p => [ System Engineering Model accomplishes the following: ]
li => [ Define Processes that serve needs of view ]
li => [ Represent behavior of process and assumption ]
li => [ Explicitly define Exogenous and Endogenous Input ]
li => [ It represents all Linkages that enable an engineer to understand aspect better. ]
h3 => [ 4) Define Framework. ]
p => [ A framework is the Code Skeleton that can be fleshed out with particular classes or functionality and designed to address the specific problem at hand. ]
h3 => [ 5) What are the characteristics of the software? ]
p => [ Characteristics of the software are: ]
li => [ Software is engineered, not manufactured. ]
li => [ Software does not wear out. ]
li => [ Most software is custom-built rather than being assembled from components. ]
h3 => [ 6) What are the various categories of software? ]
p => [ The various categories of software are: ]
li => [ System software Application. ]
li => [ Software Engineering / Scientific. ]
li => [ Software Embedded software. ]
li => [ Web Applications. ]
li => [ Artificial Intelligence software. ]
h3 => [ 7) What are the challenges in software? ]
p => [ The challenges in the software are: ]
li => [ Copying with legacy systems. ]
li => [ Heterogeneity challenge. ]
li => [ Delivery times challenge. ]
h3 => [ 8) Define Software process. ]
p => [ A software process is defined as the structured set of activities that are required to develop the software system. ]
a => [ Click here for more information ]
h3 => [ 9) What are the internal milestones? ]
p => [ They are the significant and quantifiable attributes of progress. They are the standard methods in the project which provide that we are on the right track. They are under the authority of the project manager. ]
h3 => [ 10) What is the limitation of RAD Model? ]
p => [ Limitation of RAD Model are: ]
li => [ It requires a sufficient number of Human Resources to create enough number of teams. ]
li => [ Developers and Users are not committed,the system fails. ]
li => [ It is not Properly Modularized building component may be Problematic. ]
li => [ It is not applicable when there is more possibility for Technical Risk. ]
a => [ Click here for more information ]
h3 => [ 11) What are the disadvantages of classic life cycle model? ]
p => [ Disadvantages of the classic life cycle model are: ]
li => [ Real projects rarely follow the sequential flow. Iteration always occurs and creates a problem. ]
li => [ Challenging for the customer to state all requirements. ]
li => [ The working version of the program is not available. So the customer must have patience. ]
h3 => [ 12) What are the merits of the incremental model? ]
p => [ The merits of the incremental model are: ]
li => [ The incremental model can be accepted when there is less number of people include in the project. ]
li => [ Technical risks can be handle with each increment. ]
li => [ For a minimal period, at least the core product can be delivered to the user. ]
h3 => [ 13) What is the disadvantage of the spiral model? ]
p => [ The disadvantage of the spiral model are: ]
li => [ It is based on user communication. If the interface is not proper, then the software product which gets created will not be the up to the mark. ]
li => [ It demands a vast risk assessment. If the risk assessment is completed correctly, then only the successful product can be obtained. ]
h3 => [ 14) Name the Evolutionary process Models. ]
p => [ Evolutionary powers models are: ]
li => [ Incremental model ]
li => [ Spiral model ]
li => [ WIN-WIN spiral model ]
li => [ Concurrent Development ]
h3 => [ 15) Define Software Prototyping. ]
p => [ Software prototyping is represented as rapid software development for validating the requirements. ]
h3 => [ 16) What are the benefits of prototyping? ]
p => [ The benefits of prototyping are: ]
li => [ Prototype services as a basis for developing system specification. ]
li => [ Design quality can be revised. ]
li => [ The system can be managed easily. ]
li => [ Development efforts may get decreased. ]
li => [ System usability can be upgraded. ]
h3 => [ 17) What are the prototyping methods in software process? ]
p => [ The prototyping methods in the software process are: ]
strong => [ Evolutionary prototyping: ]
strong => [ Throw-away prototyping: ]
h3 => [ 18) What are the advantages of evolutionary prototyping? ]
p => [ The advantages of evolutionary prototyping are: ]
li => [ Fast delivery of the working system. ]
li => [ User is contained while developing the system. ]
li => [ The more useful system can be delivered. ]
li => [ Specification, design and implementation work in equivalent manner. ]
h3 => [ 19) What are the various Rapid prototyping techniques? ]
p => [ The various rapid prototyping techniques are: ]
li => [ Dynamic high-level language development. ]
li => [ Database programming. ]
li => [ Component and application assembly. ]
h3 => [ 20) What are the uses of User-Interface Prototyping? ]
p => [ This prototyping is used to pre-specify the looks and effectively feel of customer interface. ]
h3 => [ 21) What is the principle of the prototype model? ]
p => [ A prototype is built to quickly determine to the user what the product would look like. The only minimal functionality of the actual product is supported during the prototyping phase. ]
h3 => [ 22) Define System Context Diagram (SCD)? ]
p => [ System Context Diagram (SCD): ]
li => [ Establish data boundary between System being implemented and Environment in which system operates. ]
li => [ Describes all external producers, external consumers, and entities that communicate through the customer interface. ]
h3 => [ 23) Define Quality Function Deployment (QFD)? ]
p => [ Quality Function Deployment (QFD) is a method that translates the needs of the user into a technical requirement. It concentrates on maximizing user satisfaction from the software engineering process. ]
h3 => [ 24) What is Requirement Engineering? ]
p => [ Requirement engineering is the process of establishing services which the user required from the system and constraint under which it operates and is developed. ]
a => [ Click here for more information ]
h3 => [ 25) What is ERD? ]
p => [ Entity Relationship Diagram is the graphical description of the object relationship pair. It is primarily used in the database application. ]
h3 => [ 26) What is DFD? ]
p => [ Data Flow Diagram depicts the data flow and the transforms which are applied to the data as it moves from input to output. ]
h3 => [ 27) What is a state transition diagram? ]
p => [ State transition diagram is a collection of states and events. The events cause the operation to change its state. It also describes what actions are to be taken on the occurrence of particular events. ]
h3 => [ 28) What is Software Quality Assurance? ]
p => [ Software Quality Assurance is a set of auditing and documenting functions that assess the effectiveness and completeness of quality control activities. ]
a => [ Click here for more information ]
h3 => [ 29) What is the use of CMM? ]
p => [ Software Quality means Conformance to state functional explicitly and performance requirements, explicitly documented development standards, inherent characteristics expected for professionally developed software. ]
h3 => [ 30) What is coupling? ]
p => [ Coupling is the significant measure of the degree to which classes are linked to one another. Coupling should be kept as low as possible. ]
h3 => [ 31) What is cohesion? ]
p => [ Cohesion is the indication of the relative functional strength of a module. It is a natural extension of Information Hiding and Performs a single task, requiring little integration with other components. ]
a => [ Click here for more information ]
h3 => [ 32) Define Refactoring. ]
p => [ Refactoring means changing a software system in a way that does not alter the external behavior of code. ]
h3 => [ 33) What is Software Architecture? ]
p => [ Software Architecture means the overall structure of the software and how that software provides conceptual integrity for the system. ]
h3 => [ 34) Define Stamp coupling. ]
p => [ When a portion of the data structure is passed via the module interface, then it is called as stamp coupling. ]
h3 => [ 35) Define common coupling. ]
p => [ When several modules reference a global data area, then the coupling is called common coupling. ]
h3 => [ 36) Define temporal cohesion. ]
p => [ When a module contains tasks that are related by the fact that all must be executed within the same period, then it is termed as temporal cohesion. ]
h3 => [ 37) Define metrics. ]
p => [ Metrics are defined as the degree to which a system component or process possesses a given attribute. ]
h3 => [ 38) What is COCOMO model? ]
p => [ Constructive Cost Model is a cost model, which gives the estimate of several staff-months it will take to develop the software product. ]
a => [ Click here for more information ]
h3 => [ 39) What is the purpose of the timeline chart? ]
p => [ The objective of the timeline chart is to emphasize the scope of the individual task. Hence set of functions are given as input to the timeline chart. ]
h3 => [ 40) Define Smoke Testing? ]
p => [ Smoke testing is Integration Testing and frequently used when software products are being developed. ]
h3 => [ 41) What are the benefits of Smoke Testing? ]
p => [ Benefits of doing Smoke Testing are: ]
li => [ Integration Risk is minimized. ]
li => [ Quality of end-product is improved. ]
li => [ Error diagnosis and Correction are simplified. ]
li => [ Progress is easy to assess. ]
h3 => [ 42) What is Equivalence Partition? ]
p => [ Equivalence Partitions Derives an input domain of a program into classes of data from which test cases are derived. It is a Set of Objects have linked by relationships as Symmetric, Transitive, and Reflexive an equivalence class is present. ]
h3 => [ 43) What are the steps followed in testing?  ]
p => [ The steps followed in testing are: ]
strong => [ Unit testing: ]
strong => [ Module testing: ]
strong => [ Sub-system testing: ]
strong => [ System testing: ]
strong => [ Acceptance testing: ]
h3 => [ 44) Distinguish between Alpha and Beta testing. ]
p => [ Alpha and Beta testings are the two types of acceptance testing. ]
strong => [ Alpha test: ]
strong => [ Beta test: ]
h3 => [ 45) What are the types of Static Testing tools?  ]
p => [ There are the three types of static testing tools. ]
strong => [ Code-based testing tools: ]
strong => [ Specialized testing tools: ]
strong => [ Requirement-based testing tools: ]
h3 => [ 46) Define maintenance. ]
p => [ Maintenance is described as the process in which changes are implemented by either modifying the existing system?s architecture or by adding new components to the system. ]
a => [ Click here for more information ]
h3 => [ 47) What are the types of software maintenance? ]
p => [ Types of software maintenance are: ]
p => [  Corrective Maintenance:  It means the maintenance for correcting the software faults. ]
p => [  Adaptive maintenance:  It means maintenance for adapting the change in environment. ]
p => [  Perfective maintenance:  It means modifying or enhancing the system to meet the new requirements. ]
p => [  Preventive maintenance:  It means changes made to improve future maintainability. ]
a => [ Click here for more information ]
h3 => [ 48) What is CASE Tools? ]
p => [ CASE Tools stands for Computer-Aided Software Engineering. It is system software that provides automated support for software process activities. It contains program used to support software process operations such as Requirement Analysis, System Modeling. Debugging and Testing. ]
a => [ Click here for more information ]
h3 => [ 49) What is Risk management? ]
p => [ Risk management is the phase of anticipating hurdles in carrying out the original plan and providing alternate methods so that the impact on the anticipated initially outcome is minimal. ]
a => [ Click here for more information ]
a => [ Interview Tips ]
a => [ Job/HR Interview Questions ]
a => [ Company Interview Questions &amp; Procedure ]
a => [ JavaScript Interview Questions ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
a => [ jQuery Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
