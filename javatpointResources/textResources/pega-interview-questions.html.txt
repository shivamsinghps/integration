
div => [ 
 ]
h1 => [ Top 50+ Most Asked Pega Interview Questions and Answers ]
h3 => [ 1) What is Pega? / Explain in brief about Pega. ]
p => [ Pega is a popular BPM tool and a platform that allows users to develop apps, perform integration with the external system and implement mobility easily. It is mainly concerned with customer engagement and digital process automation. ]
h3 => [ 2) What are the main usages of Pega? ]
p => [ Pega is a platform that facilitates users to develop applications, implement mobility, help in managing the case life cycle, extensive user interface design, managing the decisions and implementing the DevOps and Robotic Automation, extensive User Interface Design, and reporting etc. Pega is preferred over other tools that it eliminates coding, simplifies the process by using inbuilt functionalities and mainly stands for reusing the existing rules and modifying accordingly. ]
p => [ Pega is built on Java. Its latest version is Pega 8.2, which stands for Build for Change. ]
h3 => [ 3) What are the new components added in the Pega 8.4 version for application development? ]
p => [ From the application development point of view, the following are some of the new features added in Pega 8.4: ]
li => [ In Pega 8.4, we can use role-based workspaces. ]
li => [ The new version provides developers with the capability to review complete project highlights on a single page. ]
li => [ It also provides effective management of reusable components. ]
h3 => [ 4) What are the different developer tools used in Pega? ]
p => [ The developer tools used in Pega are: Designer Studio and Pega Express. ]
h3 => [ 5) What are the different debugging tools available in Pega? ]
p => [ Different debugging tools available in Pega are: Tracer, Clipboard, SMA and PLA. ]
h3 => [ 6) What are the certifications available for developers in Pega? ]
p => [ Following is the list of main certifications available for developers in Pega: ]
strong => [ CSA: ]
strong => [ CSSA: ]
strong => [ LSA: ]
h3 => [ 7) What do you understand by workspace or studio in Pega? ]
p => [ A workspace or studio in Pega is an environment that provides specific tools and features. ]
h3 => [ 8) What are the different types of harnesses used in Pega? ]
p => [ There are several types of standard harnesses available in Pega, but the most commonly used harness is new, perform, review, conform, Tabbed, perform screen flow, Tree Navigation etc. ]
h3 => [ 9) What are the various workspace supported in the latest release of Pega? ]
p => [ The latest release of Pega supports the following four types of workspace: ]
li => [ App Studio ]
li => [ Dev Studio ]
li => [ Admin Studio ]
li => [ Prediction Studio ]
h3 => [ 10) What are the different types of classes that PRPC support? ]
p => [ Following are the different types of classes that PRPC supports: ]
strong => [ Base class: ]
strong => [ Abstract Classes: ]
strong => [ Concrete Classes: ]
h3 => [ 11) What are the different techniques used in activities? ]
p => [ Following is the list of some different techniques that are used in the activities: ]
li => [ Page- Remove ]
li => [ Page- New ]
li => [ Object - List ]
li => [ Object -Open ]
li => [ Object - Save ]
li => [ RBD -Save ]
li => [ RBD - List ]
li => [ RBD - Delete ]
h3 => [ 12) What do you understand by id DataPage and what is its scope? ]
p => [ DataPage is Single Page or a Page list where it stores the data that the system needs to populate work item properties for its calculation or other processes. ]
h3 => [ 13) What is the difference between Page property and Page List property? How are they implemented? ]
p => [ Difference between Page property and Page List property: ]
strong => [ Page property: ]
strong => [ Page List property: ]
h3 => [ 14) What is the difference between page-validate and property-validate methods in Pega? ]
p => [ Differences between page-validate and property-validate methods in Pega: ]
strong => [ Page-validate: ]
li => [ The page-validate method is used to validate all the properties present on a page. ]
li => [ If a page has embedded pages, the page-validate method works recursively to validate all the properties. ]
li => [ The page-validate method consumes a lot of system resources and takes more time. ]
li => [ If you want to validate specific properties, it is preferred to use the obj-validate method with a rule-obj-validate rule. ]
strong => [ Property-validate: ]
li => [ A property-validate method is used to impose restrictions on property values. ]
li => [ We have to use the edit validate rule along with the property-validate method to impose restrictions. ]
li => [ The property-validate method can be used to validate multiple properties simultaneously. ]
h3 => [ 15) What do you understand by work object? How can you create a work object in Pega? ]
p => [ A work object is the primary unit of the work completed in an application. It is the primary collection of data that a flow operates on. While using an application, a work object is created, updated, and eventually closed (resolved). ]
p => [ Every work object has a unique ID (property pyID), an urgency value, and a status (property pyStatusWork). ]
p => [ Following are the steps that we have to implement in creating a work object in Pega: ]
li => [ First, add a button such as a section or a header. ]
li => [ Expand the cell property within the button and click on the action tab. ]
li => [ Add an action set to the button. ]
li => [ Add focus class as well as flow name to the button. ]
li => [ Catch the present work object ID with "Param.prevRecordkey". ]
li => [ Open the case using the "Obj-Open-By-Handle". ]
li => [ Copy the data from pagers using the Page-Copy. ]
h3 => [ 16) Is it possible to begin a flow using activity? If yes, then what is the method used in it? ]
p => [ Yes. It is possible to begin a flow using activity. The name of the method used in this is Flow-New. ]
h3 => [ 17) What are the differences between declare pages and regular pages? ]
p => [ Differences between declare pages and regular pages: ]
strong => [ Declare Pages: ]
li => [ Declare pages are created using declarative rules. ]
li => [ The declare keyword must be specified while creating a declare page. ]
li => [ Declare pages are read-only pages, and these pages cannot be deleted or updated directly. ]
strong => [ Regular pages: ]
li => [ Regular pages or user pages are created using a page new method. ]
li => [ These pages can be easily updated or deleted directly ]
li => [ , and these pages are automatically deleted once logout from the system. ]
h3 => [ 18) What is a portal in Pega, and where it will be configured? ]
p => [ Portal is an interface that appears for the users (Developers or End Users). Portal can be configured in Access Group. For example, Developer portal, manager portal, user portal, admin portal etc. ]
h3 => [ 19) What are the different types of requestors in Pega? ]
p => [ Following are the different types of requestors in Pega: ]
strong => [ Browser requestor: ]
strong => [ Batch requestor: ]
strong => [ Application requestor: ]
strong => [ Portal requestor: ]
h3 => [ 20) What are classes in Pega? What are the different types of classes available in Pega? ]
p => [ Pega is a platform that allows users to reuse rules across case types and applications. It facilitates developers to frequently reuse rules in their systems, ranging from single data pieces to complete processes. Reusing the rules increases the quality of the application that can also draw a positive impact on the development time. The Pega platform divides the rules into classes according to their re-usability inside an application. Each cluster is called a class. ]
p => [ There are three different kinds of classes used to make an application: ]
strong => [ Work Class: ]
strong => [ Integration Class: ]
strong => [ Data Class: ]
p => [ When a rule is added in the App Studio, it automatically selects the proper class. You have to concentrate on what you want the rule to accomplish rather than how to develop it. You can also write the rule in Dev Studio if you need control over the class. The Dev Studio is preferred if you write a rule that you can reuse in another app. ]
h3 => [ 21) What do you understand by DCO in Pega? ]
p => [ In Pega, DCO stands for Direct Capture Object. It is an apple dev tool that includes the following things in the application. ]
li => [ Application profiler wizard ]
li => [ Appl Accelerator ]
li => [ Appl Doc Wizard ]
li => [ Appl use cases ]
li => [ Appl requirements ]
h3 => [ 22) What is SLA? What is its usage? ]
p => [ SLA is an instance of Rule-Obj-Service Level Rule type that can be added to assignment and work objects. There are two-time intervals for SLA as Goal and Deadline, and it indicates the expected time for the assignment and time to resolve the work object. If an assignment isn't completed before the time limit, the system can automatically raise the assignment and cancel the entire flow, and so on. ]
h3 => [ 23) What are the different types of SLA? Explain them briefly. ]
p => [ Following are the different types of SLA used in Pega: ]
strong => [ Assignment SLA: ]
strong => [ Case Level SLA: ]
strong => [ Stage Level SLA: ]
strong => [ Step level/Flow level SLA: ]
h3 => [ 24) How can we trace SLA in Pega? ]
p => [ We can use the following steps to trace SLA in Pega: ]
li => [ By terminating the agent. ]
li => [ By delaying it. ]
li => [ By initiating the agent. ]
li => [ Delay it again. ]
li => [ In the requestors, select the delayed requestor and click on the tracer. ]
li => [ Send this case to a particular assignment containing the SLA within 60 seconds. ]
h3 => [ 25) What is the difference between activity and Utility in Pega? ]
p => [ Following are the key differences between activity and Utility in Pega: ]
li => [ In the Pega platform, activity is used to automate processing. It can be configured to allow the system to automate claim uploads without user intervention. ]
li => [ An activity contains a sequence of steps that perform in the instructed order. ]
li => [ Activity is a rule of Rule-Obj-Activity, and Utility is a shape in the Pega flow. This shape refers to an activity with the usage type which is selected as a Utility. ]
li => [ There are several usage types for an activity such as Utility, Connect, Assign, Notify, or Route. ]
li => [ The Utility is used when you want to call activity in a flow. ]
h3 => [ 26) What is the RuleSet in Pega? ]
p => [ In Pega, the RuleSet is a collection of rules of business that defines an instance. The RuleSet is an essential subset of PegaRULES that is necessary to reference instances in the database. ]
h3 => [ 27) What are the key advantages of case management in Pega? ]
p => [ Following are the key advantages of case management in Pega: ]
li => [ It can improve the processes of case management with holistic support. ]
li => [ It also increases the efficacy of case-flow for automatic and dynamic responses. ]
li => [ It ensures consistency and removes errors with context-based and real-time management. ]
li => [ It is time-efficient and saves time, costs and effort needed to implement case management. ]
h3 => [ 28) What is DCO in Pega? What are the benefits of using DCO in Pega? ]
p => [ In Pega, DCO stands for Direct Capture of Objectives. It is acquiring, organizing, and storing data by using Pega's integrated solution, the Pega Platform. DCO includes the processes and tools used for gathering and organizing application artefacts. This technology is used by IT, business, and testing teams and other resources to save time, effort, and money while also improving the quality of projects and their impact on society. ]
p => [ DCO is not a methodology or a tool. Instead, it is used to centralize data to be used continually across departments at the right time and the right level. DCO also eliminates communication obstacles by providing a centralized repository for linked application artefacts (objectives, requirements, specifications, and implementation rules). All resources have real-time as-built documentation and a single view of the application. ]
strong => [ Following are the tools DCO uses to automate the work: ]
li => [ Case Lifecycle Manager ]
li => [ New Application Wizard ]
li => [ Application profiler ]
li => [ Document generation ]
li => [ Effort Estimation ]
li => [ Specification documents ]
strong => [ Benefits of using DCO in Pega: ]
li => [ DCO is used to enable collaborative teams to model situations that the application's end users must address. The modelling and simulation tools facilitate users to take a critical interim step after documenting the application but before incurring the cost of development to see if the software meets our objectives. When you work out solutions as a part of the software development life cycle, it is a rare chance to get a problem in production. ]
li => [ Organizations also use DCO to improve their efforts and use iterative processes. It makes the software development process more visible, allowing teams to learn and improve constantly. DCO technologies give organizations several ways to deliver go-live, increasing their return on investment and allowing them to accomplish their objectives reliably. ]
h3 => [ 29) What are some types of portals provided by the PRPC? ]
p => [ PRPC provides the following four types of portals: ]
li => [ Custom Portals ]
li => [ Mobile Portals ]
li => [ Composite Portals ]
li => [ Fixed Portals ]
h3 => [ 30) What is the difference between obj-open and obj-open-by-handled in Pega? ]
p => [ Key differences between obj-open and obj-open-by-handled in Pega: ]
p => [  Obj-Open:  In Obj-Open, you will get multiple records from a table according to the criteria from the specified class. It also opens an instance of a given class. ]
p => [  OBJ-open-handle:  In OBJ-open-handle, you have had to pass the pzInskey as an instance handle. This method opens only one record at a time, and it also opens the object by the handle to the pzInsKey value. ]
h3 => [ 31) How can you save the instances of a class in a particular database? ]
p => [ We can save the instances of a class in a particular database by creating a separate database table to the working class within a DB or the external DB. ]
h3 => [ 32) How can you resolve work objects using activity? ]
p => [ We can resolve the work objects using activity in the following way: ]
li => [ First, open the object. ]
li => [ Set the right ticket on your flow to reach resolution status or use "FinishAssignment". ]
h3 => [ 33) What are work objects in Pega? ]
p => [ Work objects are the primary unit of the completed work in the application. It is a collection of essential data in which a flow operates. All the work objects contain an urgency value, unique ID, and status. ]
h3 => [ 34) What are the different types of layouts available in Pega? ]
p => [ Following are the different types of layout available in Pega: ]
strong => [ Screen Layout: ]
strong => [ Dynamic Layout: ]
strong => [ Column Layout: ]
strong => [ Grid Layout: ]
li => [ Tree Grid Layout: The tree layout is used to view, navigate and access the properties in embedded pages. It facilitates users to swiftly extend and collapse branches of the tree to identify entries of current interest. ]
p => [ In dynamic and column layouts, you can add content to a section, such as properties, controls, and other sections. The format of the skin determines the positioning, alignment, width, and arrangement of components in a layout. ]
h3 => [ 35) What is the difference between Pega BPM and Appian BPM? ]
p => [ A list of key differences between Pega BPM and Appian BPM: ]
th => [ Comparing Feature ]
th => [ Pega BPM ]
th => [ Appian BPM ]
td => [ Application ]
td => [ Pega BPM is used to develop applications without hard coding. ]
td => [ Appian BPM requires work automation of enterprise with data management. ]
td => [ Latest Version ]
td => [ The latest version of Pega BPM is Pega - 7.2. ]
td => [ The latest version of Appian is Appian - 18.1. ]
td => [ Integrations Supported ]
td => [ Pega BPM supports Data Collection Systems and Various CRMs ]
td => [ Appian BPM supports only Compatible Datasheets. ]
td => [ Supported OS ]
td => [ Pega BPM supports Windows, Linux, Mac, and Web-Based OS. ]
td => [ Appian BPM supports Windows, Windows Mobile, Android, iPhone, Mac, and Web-Based OS. ]
td => [ Customer Types / Mainly used in ]
td => [ Pega BPM is mainly used in medium and large businesses. ]
td => [ Appian BPM is mainly used in small, medium, and large businesses. ]
h3 => [ 36) What do you understand by Prediction studio in Pega? ]
p => [ In Pega, the prediction studio is the studio that is used to build machine-learning models for adaptive, predictive, and text analytics. ]
h3 => [ 37) What are the different types of standard harnesses we can use in Pega? ]
p => [ There are several different types of harnesses available in Pega. But, the most commonly used standard harnesses are new, perform, review, conform, Tabbed, perform screen flow, Tree Navigation etc. ]
h3 => [ 38) How can you create a dynamic layout in Pega? ]
li => [ First, select and open a section form that already exists. ]
li => [ Now, expand the structural list on the Design tab and drag the dynamic layout onto the work area. ]
li => [ Click the view properties icon in the dynamic layout header. ]
li => [ Choose one of the predefined formats. ]
li => [ Select other and then specify the custom layout format in the adjacent field to use a skin-defined custom layout format. ]
li => [ Choose one of the predefined options. ]
li => [ Select condition (expression) and then the open condition builder icon to construct your own condition. ]
li => [ At the end, submit the form. ]
h3 => [ 39) What is the name of the table that is used for adding a note in Pega? ]
p => [ In Pega, the table used for adding the note is pc_data_workattach. ]
h3 => [ 40) What is the main advantage and disadvantage of declaring pages in Pega? ]
strong => [ Advantage of the declare pages in Pega: ]
p => [ The main advantage of declaring pages is that it can prevent multiple DB hits. Suppose there are multiple requestors in a node, so whenever the first user login into the application, then load activity will be fired and create a declare page and then load the data on that page. The requestors on that node see this declare page and use the data on that page. ]
strong => [ A disadvantage of the declare pages in Pega: ]
p => [ The main disadvantage of this is its read-only to the requestors. It can't add the additional data and can't delete the specific data. ]
h3 => [ 41) What are the various types of declarative rules present in Pega? ]
p => [ The various types of declarative rules present in Pega are: ]
li => [ Declare Expressions ]
li => [ Declare Constraints ]
li => [ Declare On change ]
li => [ Declare trigger ]
li => [ Declare Index ]
h3 => [ 42) What are Declare Triggers in Pega? ]
p => [ Declare Triggers are used to run an activity when instances of a specific class are created, updated, or deleted in the DataBase. Declare Triggers are always Forward Chaining. ]
h3 => [ 43) What are the most important debugging tools available in Pega? ]
p => [ The most important debugging tools available in Pega are: ]
li => [ Clipboard ]
li => [ Tracer ]
li => [ SMA ]
li => [ PLA ]
h3 => [ 44) What is the prediction studio in Pega? ]
p => [ In Pega, the prediction studio is the studio used for building machine learning models for text analytics, predictive, and adaptive models. ]
h3 => [ 45) What do you understand by Agent in Pega? What are the different types of Agents? ]
p => [ Agents are the internal background process being operated on a server for running an activity. There are mainly two types of agents, i.e. agent queue and data-agent-queue. ]
h3 => [ 46) What are the different kinds of joins available in the reports in Pega? ]
p => [ Following are the different kinds of joins available in the reports in Pega: ]
li => [ Inner join ]
li => [ Outer join ]
li => [ Right Outer join ]
li => [ Left Outer join ]
h3 => [ 47) What do you understand by a WSDL file? ]
p => [ WSDL stands for Web Service Description Language. This is a description language written in the XML format, and it is a standard for defining the functionality of a Web Service. ]
h3 => [ 48) What is Notify in Pega? ]
p => [ In Pega, notify is required to configure your flow to automatically send notification messages about assignments and connect a notify shape to the assignment. A notify shape identifies a notify activity. ]
h3 => [ 49) What is the key difference between the Decision Tree and the Decision Table? ]
p => [ The Decision Tree is used to check multiple properties. On the other hand, the Decision Table is used for checking only one property. ]
h3 => [ 50) What is the access group in Pega, and what is its functionality? ]
p => [ An access group in Pega is an example of a Data-Admin-Operator-Access Group class used to create a set of RuleSet for the requestors. It is the role of the developer to define the access groups and assign them to different users. ]
p => [ Access group is used to control the security based on the job functions. It is the instance of Data-Admin-Operator-AccessGroup. Following are the various aspects that can be controlled through an access group: ]
li => [ Default and available types of works (also called work pools). ]
li => [ Primary rulesets (Access Control to rulesets). ]
li => [ Assigned roles. ]
li => [ Portal layout. ]
li => [ Default ruleset for making changes (Default ruleset whenever the user creates/ saves as a rule). ]
h3 => [ 51) Why is paging used in a list view? ]
p => [ Paging is used in a list view to split the list view into diverse pages and set the numeral of records displayed on a page. ]
h3 => [ 52) What is a requestor type in Pega? What are the different types of requestor types in Pega? ]
p => [ In Pega, a Data-Admin-Requestor instance defines a requestor type. The BROWSER requestor type indicates the characteristics of interactive user connections, such as guest connections, utilizing Internet Explorer or another web browser. Agents employ the BATCH requestor type for background processing. Pega Platform comes with four requestor types for the system name we specify during installation and a reserved requestor type prpc.BROWSER for exceptional cases. ]
p => [ Generally, we only require the four requestor types that contain our system name. If we want to modify the system name after installation, we have to go to Designer Studio =&gt; System =&gt; Settings =&gt; System Name to get to a landing page tab where we can make the change. When we change a system's name, new requestor instances are created that correspond to the previous name's instances. If the prior system name did not include all requestor types for some reason, the missing requestors are also produced when the system is renamed. ]
strong => [ Following are the different requestor types in Pega: ]
strong => [ Application: ]
strong => [ Batch: ]
strong => [ Browser: ]
strong => [ Portal: ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
