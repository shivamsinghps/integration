
div => [ 
 ]
h1 => [ Web Services Interview Questions ]
p => [ There is given frequently asked Web Services interview questions and answers that have been asked in many companies. Let's see the list of top Web Services interview questions. ]
h3 => [ 1) What is Web Service? ]
p => [ The Web Service is a standard software system used for communication between two devices (client and server) over the network. Web services provide a common platform for various applications written in different languages to communicate with each other over the network. ]
h4 => [ Java Web Services API ]
a => [ More details.. ]
h3 => [ 2) How does a web service work? ]
p => [ A web service is used to communicate among various applications by using open standards such as HTML, XML, WSDL, and SOAP. You can build a Java-based web service on Solaris that is accessible from your Visual Basic program that runs on Windows. You can also use C# to develop new web services on Windows invokes from your web application that is based on Java Server Pages (JSP) and runs on Linux. ]
h3 => [ 3) What are the advantages of web services? ]
p => [ These are some of the important advantages of web services: ]
strong => [ Interoperability ]
strong => [ Reusability ]
strong => [ Modularity ]
strong => [ A Standard protocol for every application program ]
strong => [ Cheaper cost for communication ]
a => [ More details.. ]
h3 => [ 4) What are the different types of web services? ]
p => [ There are two types of web services: ]
strong => [ SOAP ]
strong => [ RESTful ]
h3 => [ 5) What are the main features of web services? ]
p => [ Following is a list of main features of web services: ]
li => [ It is available over the Internet or private (intranet) networks. ]
li => [ It uses a standardized XML messaging system. ]
li => [ It is not tied to any one operating system or programming language. ]
li => [ It is self-describing via a common XML grammar. ]
li => [ It is discoverable via a simple find mechanism. ]
h3 => [ 6) What is SOAP? ]
p => [  The SOAP stands for Simple Object Access Protocol. It is an XML-based protocol for accessing web services. It is platform independent and language independent. By using SOAP, you can interact with other programming language applications.  More details.. ]
h3 => [ 7) What are the advantages of SOAP web services? ]
p => [ These are some of the important advantages of SOAP web services: ]
strong => [ WS Security ]
strong => [ Language Independent ]
strong => [ Platform Independent ]
a => [ More details.. ]
h3 => [ 8) What are the disadvantages of SOAP web services? ]
p => [ These are some of the important disadvantages of SOAP web services: ]
strong => [ Slow ]
strong => [ WSDL Dependent ]
a => [ More details.. ]
h3 => [ 9) What are the main features of SOAP? ]
p => [ The following list specifies the features of SOAP: ]
li => [ SOAP is a communication protocol. ]
li => [ SOAP communicates between applications.  ]
li => [ SOAP is a format for sending messages. ]
li => [ SOAP is designed to communicate via Internet. ]
li => [ SOAP is platform independent. ]
li => [ SOAP is language independent. ]
li => [ SOAP is simple and extensible. ]
li => [ SOAP allows you to get around firewalls. ]
li => [ SOAP developed as a W3C standard. ]
h3 => [ 10) What is WSDL? ]
p => [ The WSDL stands for Web Services Description Language. It is an XML document containing information about web services such as method name, method parameter. The Client needs a data dictionary which contains information about all the web services with methods names and parameters list to invoke them for the web services. The Web Service Description Language bridge up this gap, by providing all necessary information to the client. ]
p => [ Some Important elements used in Web Services Description language are as follows: ]
strong => [ &lt;message&gt; ]
strong => [ &lt;portType&gt; ]
strong => [ &lt;binding&gt; ]
a => [ More details.. ]
h3 => [ 11) What is UDDI? ]
p => [  The UDDI stands for Universal Description, Discovery and Integration. It is a XML based framework for describing, discovering and integrating web services. It contains a list of available web services. WSDL is the part of UDDI.  More details.. ]
h3 => [ 12) What is RESTful web services? ]
p => [  The REST stands for Representational State Transfer. It is an architectural style. It is not a protocol like SOAP.  More details.. ]
h3 => [ 13) What are the advantages of RESTful web services? ]
p => [ These are some of the important advantages of RESTful web services: ]
li => [ Fast - The Web Services are fast because there is no strict specification of SOAP. It consumes less bandwidth and resource. ]
li => [ Language Independent - The web services can be written in any programming language. ]
li => [ Platform Independent - The web services can be executed on any platform. ]
li => [ Can use SOAP - The web services can use SOAP web services as the implementation. ]
li => [ Allows different data format - The web service permits different data format such as Plain Text, HTML, XML, and JSON. ]
a => [ More details.. ]
h3 => [ 14) What is the difference between SOAP and REST web services? ]
th => [ No. ]
th => [ SOAP ]
th => [ REST ]
td => [ 1) ]
strong => [ protocol ]
strong => [ architectural style ]
td => [ 2) ]
strong => [ Simple Object Access Protocol ]
strong => [ Representational State Transfer ]
td => [ 3) ]
strong => [ can't use REST ]
strong => [ can use SOAP ]
td => [ 4) ]
strong => [ uses services interfaces to expose the business logic ]
strong => [ uses URI to expose business logic ]
td => [ 5) ]
strong => [ defines standards  ]
td => [ REST does not define too much standards like SOAP. ]
td => [ 6) ]
strong => [ permits XML ]
strong => [ permits different ]
a => [ More details.. ]
h3 => [ 15) What is SOA? ]
p => [ SOA stands for Service Oriented Architecture. It is a design pattern to provide services to other application through protocol.  ]
a => [ More details.. ]
h3 => [ 16) What tools are used to test web services? ]
p => [ The tools used to test web services are: ]
strong => [ SoapUI tool ]
strong => [ Poster ]
strong => [ Postman ]
h3 => [ 17) What is the advantage of XML in web service? ]
p => [ In Web service, an XML is used to tag the data, format the data. ]
h3 => [ 18) What is the usage of WSDL in a web service? ]
p => [ WSDL is used in web service to describe the availability of service. ]
h3 => [ 19) What is Interoperability in Web services? ]
p => [ The Web services facilitate various applications to communicate with each other and share data and services among themselves. Other applications can also use the web services. For example, a VB or .NET application can communicate with a Java web services and vice versa. Web services are used to make the application platform and technology independent. ]
h3 => [ 20) Explain the loosely coupled architecture of web services. ]
p => [ A consumer of a web service is not tied to that web service directly. The web service interface can change over time without compromising the client's ability to interact with the service. A tightly coupled system implies that the client and server logic are closely tied to one another, implying that if one interface changes, the other must be updated. Adopting a loosely coupled architecture tends to make software systems more manageable and facilitates simpler integration between different systems. ]
h3 => [ 21) What are the advantages of having XML based Web services? ]
p => [ Using XML eliminates any networking, operating system, or platform binding. So Web Services based applications are highly interoperable application at their core level. ]
h3 => [ 22) What do you mean by synchronicity? ]
p => [ Synchronicity is used to bind the client to the execution of the service. In synchronous invocations, the client blocks and waits for the service to complete its operation before continuing. On the other hand, synchronous operations facilitate a client to invoke a service and then execute different functions. ]
h3 => [ 23) What is the usage of Service Transport Layer in Web service protocol stack? ]
p => [ The Service Transport Layer is used to transport messages between applications.  ]
p => [ This layer includes Hypertext Transport Protocol (HTTP), Simple Mail Transfer Protocol (SMTP), File Transfer Protocol (FTP), and newer protocols like Blocks Extensible Exchange Protocol (BEEP).  ]
h3 => [ 24) What is the usage of Service Description layer in Web Service Protocol Stack? ]
p => [ The Service Description layer is used to describe the public interface to a specific web service. Currently, service description is handled via the Web Service Description Language (WSDL). ]
h3 => [ 25) What is the usage of Service Discovery layer in Web Service Protocol Stack? ]
p => [ The Service Discovery layer is used for centralizing services into a universal registry and providing easy publish/find functionality.  ]
p => [ Currently, service discovery is handled via Universal Description, Discovery, and Integration (UDDI). ]
h3 => [ 26) What is a remote procedure call (RPC)? ]
p => [ The Remote procedure calls refer to the calls made to the methods which are hosted by related web service. ]
h3 => [ 27) What is meant by SOAP message? ]
p => [ The SOAP message refers to the data sent to the application from web services.
SOAP message is an XML document which is sent through web services to provide data to the client application written in any programming language. ]
p => [ SOAP message sends via using hypertext transfer protocol. ]
h3 => [ 28) What is the need of &lt;Envelope&gt; element in the SOAP document? ]
p => [ The &lt;Envelope&gt; element is used as the root element of every SOAP message. ]
p => [ The Root element is known as the first element in the XML Document. ]
p => [ The envelope, in turn, separated into two parts. One is the header part and second is the body part. The header contains the routing data which stores the source and destination address of the client. So the body includes the actual data. ]
h3 => [ 29) Explain web service protocol stack and its layers? ]
p => [ The web services consist of four layers, as mentioned below: ]
strong => [ Service transport: ]
p => [ This layer is the first layer in the web services protocol stack used in transporting XML files between various clients applications. Protocols used in the layer is as follows: ]
li => [ HTTP (Hypertext transfer protocol) ]
li => [ SMTP (Simple Mail Transfer Protocol) ]
li => [ FTP (File Transfer Protocol) ]
li => [ BEEP (Block Extensible Exchange Protocol) ]
strong => [ XML Messaging: ]
p => [ This layer is the second layer in the web services protocol stack based on XML model where messages are encoded in common XML format which can be understandable to other client applications. This layer includes the following protocols: ]
li => [ XML - RPC ]
li => [ SOAP (Simple Object Access Protocol) ]
strong => [ Service Description: ]
p => [ This layer provides the service description to the public interface like the location of web service, Available functions, And the data types for XML messaging. This layer only includes one language: ]
li => [ WSDL: WSDL stands for Web Service Description Language. ]
strong => [ Service Discovery: ]
p => [ This layer in the Web Services protocol stack is used to publish or finding web services over the web. This layer includes: ]
p => [ UDDI (Universal Description, Discovery, and integration). ]
h3 => [ 30) Explain web service architecture? ]
p => [ The web service framework includes three different layers. ]
p => [ The roles of these layers are: ]
strong => [ Service Provider ]
strong => [ Service Requestor ]
strong => [ Service Registry ]
p => [ The Service Provider uses the interface named as ?Publish? interface of Service Registry to make the existing web services available to client applications. With all the information provided by the service registry, service requestor able to find or invoke services. ]
h3 => [ 31) What is XML-RPC? ]
p => [ The RPC is Remote Procedure Call. It is the method used for calling a procedure or function available on any remote computer on the web. ]
p => [ XML-RPC refers to a simple protocol used to perform RPCs by using XML messaging. It is an excellent tool for connecting different environments and also establishing connections between wide varieties of computers. ]
h3 => [ 32) Explain BEEP? ]
p => [ The BEEP stands for Blocks Extensible Exchange Protocol. BEEP is an alternative to HTTP and FTP. BEEP is determined as building new protocols for the variety of applications such as instant messaging, network management, file transfer. It is termed as new Internet Engineering Task Force (IETF) which is layered directly over TCP.  ]
p => [ Some of the Build-in features of BEEP protocol are listed below: ]
li => [ Authentication ]
li => [ Security ]
li => [ Error handling ]
li => [ Initial Handshake Protocol ]
h3 => [ 33) What are the requirements to access a Web Service? ]
p => [ The requirement for accessing web services from any application is that should support XML-based request and response. Hence there is no need to install any app for accessing web services. ]
h3 => [ 34) Which language does UDDI use? ]
p => [ The UDDI uses the language known as WSDL (Web Service Description Language). ]
h3 => [ 35) Explain different HTTP methods supported by RESTful web services? ]
p => [ Enlisted below are some common HTTP methods along with their functions that are supported by RESTful web services. ]
strong => [ GET ]
strong => [ PUT ]
strong => [ DELETE ]
strong => [ POST ]
strong => [ OPTIONS ]
strong => [ HEAD ]
h3 => [ 36) What are the steps involved in accessing a web service? ]
p => [ These are the steps involved in accessing a web service: ]
li => [ Client application bundled the information and into a SOAP message. ]
li => [ SOAP message sends to the server as a body of Hyper-Text markup language using POST method. ]
li => [ Web service unpacks the SOAP message and converts it into a command understandable by the application. ]
li => [ Application processes the information and in turn bundled the info and send it back to the client as a SOAP message. ]
li => [ A Client then unpacks the SOAP message to obtain the results. ]
h3 => [ 37) How many Communication protocols can be used to implement a SOAP message? Is SOAP messages are tied to any protocol? ]
p => [ Communication protocol refers to the protocols which were used to transmit information over the web. By using Transport protocols, applications from the different background can quickly communicate with each other without knowing the inside functioning of the various systems. HTTP (Hyper-Text Transfer Protocol) can be used to implement a SOAP message whereas FTP (File Transfer Protocol) can be used as the reliable transport mechanism. SMTP and BEEP can also be used for transport mechanism. ]
p => [ SOAP message is not tied to any protocol. It can use any of the open Transport protocol. ]
h3 => [ 38) How are the terms "Platform independent" and "Diverse Application" are related to each other in the context of XML-RPC? ]
p => [ The terms "Platform independent" and "Diverse Application" were related to each other because XML-RPC uses HTTP for transporting SOAP messages over the web. The HTTP is a universal standard protocol for exchanging information on the Web. Hence, it leads to Cross Platform support/ Platform independent. So because it is Platform independent, it leads to the diverse application capable of accessing the web services. ]
h3 => [ 39) Explain the role of web service provider/ Publisher. ]
p => [ The role of a Web Service provider is to implement web service and make it available to the web service requestor/ consumer. ]
h3 => [ 40) Explain the role of web service requestor/ consumer. ]
p => [ The role of Web Service Requestor / Consumer is to utilize the pre-existing web service provided by the Web Service Provider/ Publisher. Web Service Requestor/ Consumer request the Web Service provider for the information by sending a SOAP message to the Web Service provider. Then in-Turn Web Service Publisher sends the requested information back to the requestor in the form of a SOAP message. ]
h3 => [ 41) Write an example to demonstrate the working of the Web Service Provider. ]
p => [ Here is the example of a Web Service Provider: ]
h3 => [ 42) Explain the difference between Web Service Provider/Publisher and Web Service requestor/Consumer. ]
p => [ As the name suggests Web Service Provider provides the web services to the various application irrespective of their background, and Web Service Requestor/ Consumer as the name suggests is the requestor for the web services. ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Java Multithreading Questions ]
a => [ Java String &amp; Exception Questions ]
a => [ Java Collection Interview Questions ]
a => [ JDBC Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
span => [ SQL Server Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
