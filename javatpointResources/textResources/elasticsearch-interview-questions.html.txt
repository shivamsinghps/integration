
div => [ 
 ]
h1 => [ Top 41 Elasticsearch Interview Questions and Answers ]
h3 => [ 1) What is Elasticsearch? ]
p => [  Elasticsearch is a  NoSQL database search engine  based on Apache Lucene. It is an open-source product developed in Java. Similar to MySQL and other databases, it is also used to store the data. Elasticsearch stores unstructured data in the document format. It offers an NRT (Near Real-Time Search) facility as well as allows to perform full-text search on data. ]
p => [ Elasticsearch is easy to deploy and manage. Even users can take the backup of data from Elasticsearch very easily and efficiently by setting up a few settings and executing queries. ]
h3 => [ 2) Who developed Elasticsearch and when? ]
p => [  Elasticsearch was first launched in  Feb 2010 . It is developed by  Shay Banon . Elasticsearch is licensed under Apache 2.0. ]
h3 => [ 3) What is the latest version of Elasticsearch and when it released? ]
p => [  Elasticsearch 7.9.1  is the latest stable release of Elasticsearch. On  03 Sep 2020 , the Elasticsearch community has released the latest version of Elasticsearch. ]
h3 => [ 4) Define the most essential features of Elasticsearch? ]
p => [ Although Elasticsearch has various features but here are some most important features of Elasticsearch - ]
li => [ Open Source product ]
strong => [ REST API ]
li => [ Multi-language and Geolocation support ]
li => [ Stores unstructured data ]
li => [ Support full-text search as well as Schema-free database ]
li => [ Feature of Near Real-Time (NRT) Search on data ]
h3 => [ 5) What types of basic operations can be performed with Elasticsearch? ]
p => [ Elasticsearch allows the users to perform the following basic operations with Elasticsearch - ]
li => [ Create an index ]
li => [ Update index ]
li => [ Fetch data from an index ]
li => [ Delete index ]
li => [ Freeze index ]
h3 => [ 6) What is the port number to access the Elasticsearch on the web? Can we change it? ]
p => [  Elasticsearch is accessed by using  HTTP protocol  on the web, which needs a  port number  along with localhost address. The default port number of Elasticsearch is  9200 . ]
p => [  In case the Elasticsearch port 9200 is already in use or used by any other tool, you can change the port number. Elasticsearch port number can be changed in the  [object Object]  file. This file exists inside the config folder. ]
h3 => [ 7) What are the basic requirements to work with Elasticsearch? ]
p => [ To work with Elasticsearch, following requirements must be done - ]
li => [ You should be familiar with the JSON object, APIs and document formats because the data is stored in the form of document in Elasticsearch. ]
li => [ Apart from knowledge, Java must be installed on your system to install Elasticsearch. ]
li => [ A plugin to interact with Elasticsearch, e.g., elasticsearch-head plugin (available in google play store). ]
h3 => [ 8) What is an index in Elasticsearch? ]
p => [ An index in Elasticsearch is equivalent to a database in MySQL relational database structure. An index consists of multiple types (tables) and documents inside it. Elasticsearch can have multiple indices. ]
p => [  Elasticsearch  -&gt; Index -&gt; Type -&gt; Document with properties ]
p => [  MySQL  -&gt; Database -&gt; Table -&gt; Columns/Rows ]
p => [ Typically, we can say that an index is a collection of documents that contain information inside it. It can store actual and analyzed value as well. ]
h3 => [ 9) Does Elasticsearch provide an interactive graphical user interface to its users? ]
p => [ No, Elasticsearch does not offer its own graphical user interface (GUI). We run it through a batch file (i.e., elasticsearch.bat) that provides a Command Line Interface (CLI). ]
p => [ To interact with Elasticsearch, we have to install a plugin or a data visualization tool. There are several plugins available, such as elasticsearch-head, icu-analyzer, etc. Despite this, you can install Kibana for data visualization, which is an essential component of ELK Stack. ]
h4 => [ To interact with Elasticsearch, we have to install a plugin or a data visualization tool. There are several plugins available, such as elasticsearch-head, icu-analyzer, etc. Despite this, you can install Kibana for data visualization, which is an essential component of ELK Stack. ]
h3 => [ 10) What is ELK stack? How Elasticsearch connect with it? ]
p => [ ELK Stack is a set of three components - Elasticsearch, Logstash, and Kibana. Each component of the ELK stack is used for different purposes. ]
strong => [ Elasticsearch ]
strong => [ Logstash ]
strong => [ Kibana ]
p => [ These three components of ELK Stack work together and provide essential services to perform tasks for the users. Although Elasticsearch can also be used individually as well. ]
h3 => [ 11) What is tokenizer in Elasticsearch? ]
p => [  Tokenizers are used to generate the tokens from a text string. It breaks down the text string into tokens where it finds whitespace or other punctuation symbols. Elasticsearch offers a number of built-in tokenizers to generate tokens from a string.  Standard tokenizer  is one of the most popular tokenizers of Elasticsearch, which is mostly used to divides a string into multiple tokens. ]
p => [ Apart from that, there are several other tokenizers, such as - lowercase tokenizer, whitespace tokenizer, pattern tokenizer, keyword analyzer, NGram tokenizer, and many more offered by Elasticsearch. Usually, a tokenizer helps to analyze the text string. ]
h3 => [ 12) What is an analyzer in Elasticsearch? ]
p => [ Analyzer helps to transform the data while indexing it to Elasticsearch. It transforms the data internally defined for an index and then index it. Tokenizer and filters collectively make an analyzer. ]
p => [ There are following types of analyzers offered by Elasticsearch - ]
li => [ Standard Analyzer ]
li => [ Whitespace Analyzer ]
li => [ Simple Analyzer ]
li => [ Keyword Analyzer ]
li => [ Pattern Analyzer ]
li => [ Stop Analyzer ]
li => [ Language Analyzer ]
li => [ Snowball Analyzer ]
h3 => [ 13) What are frozen indices in Elasticsearch? ]
p => [  Frozen indices  are those indices which are rarely accessed. So, the users freeze these indices. Such indices are called  frozen indices . Basically, we freeze those indices which are not in use to free up the memory. ]
p => [  Frozen indices become  read-only  and its resources are no longer kept active. So, these indices are searchable, but to write again, we have to unfreeze them. Elasticsearch offers an  ignore_throttled  parameter, which is used to include the frozen indices in your search. Thus, we don't need to re-open them to make available for search. ]
h3 => [ 14) What is Elasticsearch Mapping? ]
p => [ Mapping is a mechanism of Elasticsearch to be performed on documents and fields. It is responsible for storing and indexing the documents and their fields in the Elasticsearch database. Elasticsearch allows users to perform mapping on fields by defining datatype for them. ]
p => [  For example, -  string datatype for name or number datatype for age, etc. ]
p => [ There are two types of mapping, i.e., Static mapping and Dynamic mapping. ]
p => [  Static mapping  is a type of mapping which is done by users at the time of index creation. In comparison,  Dynamic mapping  is automatically done for the tables by the Elasticsearch. ]
h3 => [ 15) How to delete an index in Elasticsearch? ]
p => [  To delete an index in Elasticsearch, you have to create a query having  DELETE  as the request method and index name you want to delete. ]
h3 => [ 16) What do you understand by NRT in Elasticsearch? ]
p => [  NRT refers to the  Near Real-Time Search  platform. Elasticsearch offers a near real-time search facility to its users. It returns the data in a very short time when we perform search operations on it. Whenever you index a document, Elasticsearch takes a bit of time until it becomes searchable. ]
h3 => [ 17) What is Elasticsearch API? ]
p => [ API is an Application Programming Interface, which makes Elasticsearch easy to operate, manage, and create queries to perform operations on it. Elasticsearch provides REST APIs to manage, integrate, and perform several operations in various ways on it. It offers extensive APIs and methods. Typically, there are five types of APIs in Elasticsearch: ]
li => [ Document APIs ]
li => [ Search APIs ]
li => [ Aggregation APIs ]
li => [ Index APIs ]
li => [ Cluster APIs ]
h3 => [ 18) What do you understand by multi-document APIs? ]
p => [ Multi-document API is a document API, which further has few more APIs. Multi-document APIs are basically used to perform queries across multiple documents. Simply says that - it allows the users to perform the operation in bulk like fetch or update multiple documents using a single query. ]
p => [ It is further classified and has the following APIs for bulk operations - ]
li => [ Bulk API ]
li => [ Multi Get API ]
li => [ Delete By Query API ]
li => [ Update By Query API ]
li => [ Reindex API ]
h3 => [ 19) Which method is used to fetch the documents from Elasticsearch? ]
p => [ Elasticsearch allows the users to search and fetch the documents from the database in two ways. We can use one of them accordingly - ]
li => [ By sending a GET request having a string parameter with a query, or ]
li => [ By sending a POST request which has a query in request body. ]
p => [  Along with the request method, we have to use a  [object Object]  API to search the documents in database. Here GET and POST are request methods. Elasticsearch allows the users to search the documents as single or in bulk too. ]
h3 => [ 20) Elasticsearch uses which query language? ]
p => [  Elasticsearch uses  Query DSL  to perform operations on it. Query DSL is an Apache Lucene Query Language. ]
h3 => [ 21) What is a cluster in Elasticsearch? ]
p => [ In Elasticsearch, a cluster is a collection of nodes. Cluster and nodes work together and hold the data, where node is an instance of Elasticsearch. A cluster provides joined indexing as well as search capabilities to Elasticsearch users. ]
p => [  Elasticsearch can have several clusters where each cluster is identified by a unique name. Elasticsearch provides a default name to the cluster, which is  elasticsearch . ]
h3 => [ 22) Does the Elasticsearch have a schema? ]
p => [ Yes, Elasticsearch has a schema, which is usually called as mapping. Basically, a schema is a description of fields, which describes the document type. It helps to manage the different fields of document. ]
p => [ Schema is a mapping that emphasizes the JSON documents. ]
h3 => [ 23) Define a document in Elasticsearch? ]
p => [ In Elasticsearch, a document holds the information provided by Elasticsearch users. A document is similar to a row in relational databases like MySQL. The documents are stored inside the index created by the users. An index can hold several documents where each document has a unique id. ]
p => [  A document has the data in the form of key-value (key: value) pairs.  For example , {"name": "Alen Walker"}. Each document identifies by a unique id and it is associated with a type. ]
h3 => [ 24) What is a document type in Elasticsearch? ]
p => [ In Elasticsearch, a type represents a class of similar documents. A type could be like student, customer, or item. A document type can be seen as the document schema/mapping, which has a mapping of all the fields in the document along with its data type. ]
h3 => [ 25) What is a shard in Elasticsearch? ]
p => [  The data stored in an index can be divided into multiple partitions. Each of these partitions is called  Shard , which is managed and controlled by a separate node. An Elasticsearch index has  five shards by default . ]
h3 => [ 26) Name atleast 5 companies that are using Elasticsearch? ]
p => [ Below is a list of companies which are using Elasticsearch - ]
li => [ Netflix ]
li => [ Udemy ]
li => [ Shopify ]
li => [ Walmart ]
li => [ Uber ]
li => [ Slack ]
li => [ Adobe ]
p => [ There are several other companies that use Elasticsearch to store and manage their unstructured data. ]
h3 => [ 27) What is Index Lifecycle Management in Elasticsearch? ]
p => [  Index Lifecycle Management (ILM) is an essential mechanism of Elasticsearch, which has been introduced in Elasticsearch 6.6. It is also known as ILM. ILM establishes a  hot-warm-cold  architecture, which offers a lifecycle to the index. This lifecycle has four states Hot, Warm, Cold, and Delete state. ]
p => [  An index goes through this lifecycle having different states, first it goes from  hot state , then  warm  and  cold  and at last from  delete state . ]
p => [ Typically, ILM manages the indexes and their operations. Elasticsearch offers the ILM APIs for managing the indexes. Policy Management API, Index Management API, and Operation Management API are the Index Lifecycle Management APIs. These APIs further offers APIs to its user to manage the indexes. ]
h3 => [ 28) Which basic operations can be performed on a document? ]
p => [ Elasticsearch allows performing various operations on an index, such as - ]
li => [ Add a document to an index ]
li => [ Delete a document ]
li => [ Fetch the document ]
li => [ Update the document data ]
h3 => [ 29) What do you understand by an inverted index in Elasticsearch? ]
p => [  Inverted index is the  heart of search engines . The main purpose of each search engine is to provide fast and efficient searches while finding the documents. Usually, an inverted index is a hash map just like the data structure that directs the users from a word to a document or web page. It provides speedy searches when you search for a document between millions of documents. ]
em => [ from ]
em => [ size ]
p => [  The  [object Object]  and  [object Object]  components are used in pagination. They help to divide a large amount of data into several pages, where from is the initial point to start a search and size defines the number of items to be searched. ]
p => [  For example, -  If there are 30 items calculated, but we want 15 items first and then remaining. ]
p => [  So, the first time  from  will be 0 and the  size  will be 14. Next time  from  will be 15 and the  size  will be 29. ]
h3 => [ 31) Difference between match and term query. ]
p => [ Match query analyzes the input request and creates basic queries. While in term query, exact matching is done. ]
p => [  For example , if we search for the document containing  name: Anurag,  and if any document has name = Anupriya, then it will also be the result of the search query in case of Match query. On the other hand, exact matching is performed in term query. So, the document containing name: Anupriya will not return. ]
h3 => [ 32) To install the Elasticsearch, which type of files are required to be download on different operating systems? ]
p => [ On each operating system, a different type of file is required to be downloaded. ]
strong => [ For example - ]
strong => [ Windows ]
strong => [ zip file ]
strong => [ Linux ]
strong => [ tar.gz ]
strong => [ Mac ]
strong => [ tar.gz ]
li => [ For Ubuntu-based system or Debian, download the deb package ]
h3 => [ 33) Is Elasticsearch can integrate with other tools? If Yes, then list the name of those tools? ]
p => [ Yes, Elasticsearch can integrate with other tools and technologies. The most popular tools are Logstash and Kibana, which are the components of the ELK stack. There is a list of some other tools to which Elasticsearch can integrate - ]
li => [ Amazon Elasticsearch Services ]
li => [ Couchbase ]
li => [ Contentful ]
li => [ Datadog ]
h3 => [ 34) What do you understand by cluster health? How to check the health of a cluster? ]
p => [ In Elasticsearch, we can check the health of the cluster. Cluster health helps to show the health status of the cluster. It defines how many clusters are currently running in Elasticsearch. The health status is shown by three different colors, i.e., either Red, Green, or Yellow. Each color defines the different health status of a cluster. ]
p => [  RED  color indicates that some of the primary shards or nodes are not available in the cluster. ]
p => [  RED -  The cluster health status will be  RED  when some of the primary shards or nodes is not available in the cluster. ]
p => [  YELLOW -  The cluster health status will be  RED  when some or all shards are not allocated to any of the cluster. ]
p => [  GREEN -  The cluster health status will be  RED  when the shards are allocated to the node. ]
p => [ By executing simple cluster health, we can check the health of a cluster. ]
p => [ Here GET is a request method, _cluster is a cluster API, and health is a keyword for which we are looking for. ]
h3 => [ 35) Can we perform the write operation on frozen indices? ]
p => [ No, we cannot perform a write operation on frozen indices because frozen indices are read-only indices. These indices are searchable, but we cannot write on them without unfreezing. However, without unfreezing the frozen indices, we can include them in our searches. ]
h3 => [ 36) How x-pack helps to get SQL access in Elasticsearch? ]
p => [  X-pack  comes with the SQL features that provide SQL access in Elasticsearch to execute the queries. This SQL support feature has been introduced in  Elasticsearch 6.3 . ]
p => [  Basically,  X-pack  is an Elastic Stack extension with SQL features, which helps the users to execute the SQL queries against Elasticsearch. The SQL queries execute in a real-time environment and return the result in tabular form. ]
p => [ We can execute the Elasticsearch SQL command line using the elasticsearch-sql-cli.bat file that exists inside the bin folder. This Elasticsearch SQL translator can understand both SQL as well as Elasticsearch. ]
h3 => [ 37) What is Ingest Node in Elasticsearch? ]
p => [ The ingest node is used to transform the document before indexing it in Elasticsearch. Basically, an ingest node pre-process the document before the indexing occurs. Such operations like rename a field name, add or remove a field from a document are handled by the ingest node. ]
h3 => [ 38) What is a repository, and what its role in taking a snapshot in Elasticsearch? ]
p => [ A repository is a container or memory storage that holds the snapshots inside it. A single repository can store one or more snapshots. Snapshot is nothing; it is a data backup of Elasticsearch taken by the user to release the memory and secure the data. ]
p => [ You can create any number of repositories in Elasticsearch, which can hold several snapshots inside them. The repository provides a location and memory to store snapshots. ]
h3 => [ 39) Why and how to configure a path.repo? ]
p => [  To create a repository, we need to set up a location where it will store. So, before taking a snapshot, it is very important to configure the  path.repo  setting in the elasticsearch.yml file in which we need to set the location for the repository to be stored. The elasticsearch.yml file exists inside the elasticsearch/config folder. ]
strong => [ Steps to configure ]
em => [ elasticsearch/config ]
strong => [ path.repo: ["/my_backup_location"] ]
li => [ Save the file and restart the elasticsearch to see the effect. ]
h3 => [ 40) Why use the wait_for_completion parameter? ]
p => [ Elasticsearch provides a wait_for_completion parameter, which is used while creating a snapshot query. This parameter is basically used in a snapshot query that indicates whether the request will wait for the snapshot to be complete or respond immediately once the snapshot is initialized. It is an optional parameter used as wait_for_completion=true. ]
p => [ It is used in snapshot query like the below query: ]
h4 => [ Note that if you use wait_for_completion parameter in your query, the snapshot creation process will run in the background on Elasticsearch cli. ]
h3 => [ 41) What is the use of restore API? ]
p => [ Elasticsearch provides _restore API to restore the data, which backed up to a snapshot. So, the restore API helps to restore a snapshot into a running cluster. ]
p => [  To restore the data into Elasticsearch, both _snapshot and _restore APIs are used along with the snapshot name, which you want to restore.  For example - ]
a => [ Interview Tips ]
a => [ Job/HR Interview Questions ]
a => [ Company Interview Questions &amp; Procedure ]
a => [ JavaScript Interview Questions ]
a => [ Java Basics Interview Questions ]
a => [ Java OOPs Interview Questions ]
a => [ Servlet Interview Questions ]
a => [ JSP Interview Questions ]
span => [ Spring Interview Questions ]
span => [ Hibernate Interview Questions ]
span => [ PL/SQL Interview Questions ]
span => [ SQL Interview Questions ]
span => [ Oracle Interview Questions ]
span => [ Android Interview Questions ]
a => [ jQuery Interview Questions ]
span => [ MySQL Interview Questions ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
