
div => [ 
 ]
h1 => [ GWT Interview Question ]
h3 => [ 1) What is GWT? ]
p => [ Google Web Toolkit (GWT) is a development toolkit for building ajax application using Java. GWT insist on reusable approaches to common web-app tasks such as bookmarking, UI abstraction, cross-browser portability, etc. ]
strong => [ GWT provides two modes: ]
strong => [ Development Mode: ]
strong => [ Web mode: ]
h3 => [ 2) What are the components of GWT? ]
strong => [ GWT Java-to-JavaScript Compiler: ]
strong => [ GWT Development Mode: ]
strong => [ JRE emulation library: ]
strong => [ GWT Web UI class library: ]
h3 => [ 3) What is a module descriptor in GWT? ]
p => [ A module descriptor is a configuration file used to set-up a GWT application. Its file extension is *.gwt.xml, where * is the name of the application and this file should reside in the project's root. ]
h3 => [ 4) What is a GWT module? ]
p => [ A GWT module is simply an encapsulation of functionality. It shares some similarities with a Java package but is not similar.  ]
h3 => [ 5) How do I enable assertions?  ]
p => [ The GWT compiler recognizes the -ea flag to generate code for assertions in the compiled JavaScript. Only use assertions for debugging purposes, not production logic because assertions will only work under GWT's development mode. ]
h3 => [ 6) What is the default style name of any GWT widget? ]
p => [  By default, the class name for each component is  gwt- . For example, the Button widget has a default style of gwt-Button, and similar way TextBox widget has a default style of gwt-TextBox. ]
h3 => [ 7) What is internationalization?  ]
p => [ Internationalization is changing the language of the text based on the locale. For example, the browser should display the website content in Hindi for a user sitting in India and French for the user accessing the website from France. ]
h3 => [ 8) What is the purpose of Host Page? ]
p => [ The most important public resource is host page which is used to invoke actual GWT application. A typical HTML host page for an application might not include any visible HTML body content at all, but it is always expected to include GWT application via a &lt;script.../&gt; tag. ]
h3 => [ 9) What is RPC? ]
p => [  RPC (Remote Procedure Call) helps in client communication with the server. RPC is  a process of calling  a method from a class; however,  in this process,  the only difference is that the class is located on a server but not the part of the client program. ]
h3 => [ 10) What is GWT ClientBundle? ]
p => [ The ClientBundle interface moves entries from the everything-else category into the cache-forever category. ]
h3 => [ 11) What are the types of panels in GWT? ]
li => [ Root Panel: It is the topmost panel where all other widgets are attached to it. ]
li => [ Flow Panel: It is the simplest panel which provides a basic HTML layout. ]
li => [ HTML Panel: It is enclosed with specified HTML contents. ]
li => [ Form Panel: It specifies that any widget declared in this would be wrapped in HTML form element. ]
li => [ Scroll Panel: It puts all the content in the scrollable area. ]
li => [ Grid: It helps to create an HTML table. ]
li => [ Flex Table: It extends HTML table like a GRID, but here we can create a table on demand. ]
h3 => [ 12) What are the Layout Panels? ]
p => [ Layout Panels can contain other widgets. These panels control the way widget is displayed on User Interface. Every Panel widget inherits properties from Panel class which in turn inherits properties from Widget class and which in turn inherits properties from UIObject class. ]
h3 => [ 13) Define GWT JSON? ]
p => [ JSON(JavaScript Object Notation) is a language-independent format for data. It is similar to XML as XML uses tags JSON uses Object-Literal notation of JavaScript. ]
h3 => [ 14) Define Parsing in GWT XML? ]
p => [  To parse the XML, we have to first parse the raw XML text into XML DOM structure. DOM structure helps in the navigation of the data. XML parser is located under  XMLParser class . XMLParser class consists of parse(String) static method which is called to parse the XML and return a Document object. ]
h3 => [ 15) Give the nodes created by XML parsing. ]
strong => [ Element - ]
strong => [ XML: ]
strong => [ Text - ]
strong => [ element: ]
strong => [ Comment - ]
strong => [ Attr - ]
h3 => [ 16) Enlist the dependencies required for database in GWT ]
p => [  Common:  hsqldb, Common-lang , log4j . ]
p => [  JDO:  datanucleus, showfiles, jdo. ]
p => [  Hibernate:  hibernate. ]
p => [  MyBatis:  mybatis. ]
h3 => [ 17) Define GWT History Mechanism. ]
p => [ History mechanism is similar to the Ajax history implementations such as RSH (Really Simple History). The Basic idea is to track the internal application state in the URL fragment identifier. Main advantages of this mechanism are: ]
li => [ It provides browser history reliable. ]
li => [ It provides useful feedback to the user. ]
li => [ It is bookmarkable, i.e., the user can create a bookmark to the current state and save it or can email it, etc. ]
h3 => [ 18) Define GWT History Tokens. ]
p => [ A token is simply a string that the application can parse to return to a particular state. This token will be saved in browser history as a URL fragment (in the location bar, after the "#"), and this fragment is passed back to the application when the user goes back or forward in history or follows a link. ]
h3 => [ 19) How to create the custom widget? ]
p => [ Google Web Toolkit offers a variety of ways for creating the custom widgets. The easiest way is to develop composite widgets by grouping existing basic widgets and adding some interaction logic to them. ]
p => [ To create a Custom Widget, it has three general concepts which are as follows: ]
li => [ Building Composite Widgets. ]
li => [ Create the Java Code for the new widget. ]
li => [ Wrap JavaScript using JSNI methods. ]
h3 => [ 20) What is JSNI? ]
p => [ JSNI (JavaScript Native Interface) is used to solve problems such as when we need to integrate GWT with existing handwritten JavaScript or with a third-party JavaScript library. Occasionally we need to access low-level browser functionality which is not exposed by the GWT class API's. ]
h3 => [ 21) What are the different uses of JSNI? ]
p => [ JSNI is a web equivalent of inline assembly code and can use in many ways such as: ]
li => [ Implement a Java method directly in JavaScript. ]
li => [ Wrap type-safe Java method signatures around existing JavaScript. ]
li => [ Call from JavaScript code into Java code and vice-versa. ]
li => [ Throw exceptions across Java/JavaScript boundaries. ]
li => [ Read and write Java fields from JavaScript. ]
li => [ Use development mode to debug both Java source (with a Java debugger) and JavaScript (with a script debugger). ]
h2 => [ You may also like: ]
a => [ Java Interview Questions ]
a => [ SQL Interview Questions ]
a => [ Python Interview Questions ]
a => [ JavaScript Interview Questions ]
a => [ Angular Interview Questions ]
a => [ Selenium Interview Questions ]
a => [ Spring Boot Interview Questions ]
a => [ HR Interview Questions ]
a => [ C Programming Interview Questions ]
a => [ C++ Interview Questions ]
a => [ Data Structure Interview Questions ]
a => [ DBMS Interview Questions ]
a => [ HTML Interview Questions ]
a => [ IAS Interview Questions ]
a => [ Manual Testing Interview Questions ]
a => [ OOPs Interview Questions ]
a => [ .Net Interview Questions ]
a => [ C# Interview Questions ]
a => [ ReactJS Interview Questions ]
a => [ Networking Interview Questions ]
a => [ PHP Interview Questions ]
a => [ CSS Interview Questions ]
a => [ Node.js Interview Questions ]
a => [ Spring Interview Questions ]
a => [ Hibernate Interview Questions ]
a => [ AWS Interview Questions ]
a => [ Accounting Interview Questions ]
h2 => [ Learn Latest Tutorials ]
p => [ Splunk ]
p => [ SPSS ]
p => [ Swagger ]
p => [ Transact-SQL ]
p => [ Tumblr ]
p => [ ReactJS ]
p => [ Regex ]
p => [ Reinforcement Learning ]
p => [ R Programming ]
p => [ RxJS ]
p => [ React Native ]
p => [ Python Design Patterns ]
p => [ Python Pillow ]
p => [ Python Turtle ]
p => [ Keras ]
h2 => [ Preparation ]
p => [ Aptitude ]
p => [ Reasoning ]
p => [ Verbal Ability ]
p => [ Interview Questions ]
p => [ Company Questions ]
h2 => [ Trending Technologies ]
p => [ Artificial Intelligence ]
p => [ AWS ]
p => [ Selenium ]
p => [ Cloud Computing ]
p => [ Hadoop ]
p => [ ReactJS ]
p => [ Data Science ]
p => [ Angular 7 ]
p => [ Blockchain ]
p => [ Git ]
p => [ Machine Learning ]
p => [ DevOps ]
h2 => [ B.Tech / MCA ]
p => [ DBMS ]
p => [ Data Structures ]
p => [ DAA ]
p => [ Operating System ]
p => [ Computer Network ]
p => [ Compiler Design ]
p => [ Computer Organization ]
p => [ Discrete Mathematics ]
p => [ Ethical Hacking ]
p => [ Computer Graphics ]
p => [ Software Engineering ]
p => [ Web Technology ]
p => [ Cyber Security ]
p => [ Automata ]
p => [ C Programming ]
p => [ C++ ]
p => [ Java ]
p => [ .Net ]
p => [ Python ]
p => [ Programs ]
p => [ Control System ]
p => [ Data Mining ]
p => [ Data Warehouse ]
